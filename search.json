[
  {
    "objectID": "schemas/schema-world.html",
    "href": "schemas/schema-world.html",
    "title": "Sch√©ma : world",
    "section": "",
    "text": "Pr√©sentation du sch√©ma world, pour l‚Äôentrainement √† PostGres.\nCr√©√© avec DbSchema"
  },
  {
    "objectID": "schemas/schema-world.html#contexte",
    "href": "schemas/schema-world.html#contexte",
    "title": "Sch√©ma : world",
    "section": "Contexte",
    "text": "Contexte\nworld est un sch√©ma form√© par trois tables country, city et countrylanguage. Les instances de ce sch√©ma sont cens√©es fournir des donn√©es de g√©ographie politique : un √©tat du monde √† une date donn√©e.\nLa table country nous renseigne sur les √©tats reconnus (√† l‚ÄôONU) et sur des territoires jug√©s plus ou moins autonomes D√©pendances, Territoires non autonomes\nLa table city nous renseigne sur les villes les plus importantes de chaque territoire.\nLatable countrylanguage nous indique quelles langues sont parl√©es dans quels pas.\nL‚Äôinstance du sch√©ma utilis√©e donne une id√©e du monde au d√©but des ann√©es 2000."
  },
  {
    "objectID": "schemas/schema-world.html#diagrammme-en-pattes-de-corbeau-crowfoot",
    "href": "schemas/schema-world.html#diagrammme-en-pattes-de-corbeau-crowfoot",
    "title": "Sch√©ma : world",
    "section": "Diagrammme en pattes de corbeau (crowfoot)",
    "text": "Diagrammme en pattes de corbeau (crowfoot)\nUn diagramme en pattes de corbeau est form√© par les tables (pour chaque colonne/attribut, nom et domaine) et des arcs qui d√©crivent des contraintes r√©f√©rentielles.\n\n\n\nSch√©ma world en pattes de corbeau"
  },
  {
    "objectID": "schemas/schema-world.html#table-world.country",
    "href": "schemas/schema-world.html#table-world.country",
    "title": "Sch√©ma : world",
    "section": "Table world.country",
    "text": "Table world.country\n\n\n\n\n\n\n\n\n\n\nIdx\nName\nData Type\nDescription\n\n\n\n\n* üîë ‚¨ã\ncountrycode\nchar(3)\nCode ISO √† 3 symboles\n\n\n*\nname_country\ntext\nNom du territoire en Anglais\n\n\n*\ncontinent\ntext\n\n\n\n*\nregion\ntext\n\n\n\n*\nsurfacearea\nreal\nSurface en Km2\n\n\n\nindepyear\nsmallint\nAnn√©e de fondation/ind√©pendance\n\n\n*\npopulation_country\ninteger\nNombre d‚Äôhabitants\n\n\n\nlifeexpectancy\nreal\nEsp√©rance de vie √† naissance\n\n\n\ngnp\nnumeric(10,2)\nPIB (en Millions de USD?)\n\n\n\ngnpold\nnumeric(10,2)\n\n\n\n*\nlocalname\ntext\nNom du territoire dans les langues officielles\n\n\n*\ngovernmentform\ntext\nType de r√©gime\n\n\n\nheadofstate\ntext\nChef de l‚Äô√©tat\n\n\n‚¨à\ncapital\ninteger\nIdentifiant (id) de la capitale dans city\n\n\n*\ncode2\nchar(2)\nCode ISO √† 2 symboles\n\n\n\ngnp est form√© par les initiales de Gross National Product (Produit National Brut), un indicateur de revenu d√©fini par les √©conomistes.\nlifeexpectancy (esp√©rance de vie √† la naissance) est un indicateur de sant√© publique construit par les d√©mographes. Ce n‚Äôest pas l‚Äô√¢ge moyen au d√©c√®s.\n\nChaque ligne de country est identifi√©e par la valeur de countrycode. Cet attribut ne peut pas √™tre NULL. Deux lignes distinctes de country ne peuvent co√Øncider sur l‚Äôattribut countrycode.\nL‚Äôattribut countrycode peut √™tre utilis√© pour d√©signer une ligne de la table country. Cette possibilit√© est utilis√©e dans les tables city et countrylanguage\nEn jargon, l‚Äôattribut countrycode sert de cl√© primaire √† la table country\nUn extrait de la table concernant les pays de r√©gion Western Europe permet de comprendre au moins une partie de la signification et des usages des colonnes\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountrycode\ncode2\nname_country\nlocalname\ngovernmentform\nheadofstate\ncapital\n\n\n\n\nNLD\nNL\nNetherlands\nNederland\nConstitutional Monarchy\nBeatrix\n5\n\n\nBEL\nBE\nBelgium\nBelgi√´/Belgique\nConstitutional Monarchy, Federation\nAlbert II\n179\n\n\nAUT\nAT\nAustria\n√ñsterreich\nFederal Republic\nThomas Klestil\n1523\n\n\nLIE\nLI\nLiechtenstein\nLiechtenstein\nConstitutional Monarchy\nHans-Adam II\n2446\n\n\nLUX\nLU\nLuxembourg\nLuxembourg/L√´tzebuerg\nConstitutional Monarchy\nHenri\n2452\n\n\nMCO\nMC\nMonaco\nMonaco\nConstitutional Monarchy\nRainier III\n2695\n\n\nFRA\nFR\nFrance\nFrance\nRepublic\nJacques Chirac\n2974\n\n\nDEU\nDE\nGermany\nDeutschland\nFederal Republic\nJohannes Rau\n3068\n\n\nCHE\nCH\nSwitzerland\nSchweiz/Suisse/Svizzera/Svizra\nFederation\nAdolf Ogi\n3248\n\n\n\n\n\nForeign Keys (cl√©e √©trang√®res)\nLa colonne capital ne contient pas les noms de capitale (il existe des territoires sans capitale), elle contient des entiers (ou NULL) qui renvoient √† des lignes dans la table city.\n\n\n\n\nType\nName\nOn\n\n\n\n\n\ncountry_capital_fkey\n( capital ) ref world.city (id)\n\n\n\n\n\n\nConstraints\nLe domaine de la colonne (de l‚Äôatttribut) continent est un type √©num√©r√© (d√©fini en extension).\n\n\n\n\n\n\n\nName\nDefinition\n\n\n\n\ncountry_continent_check\n((continent = ‚ÄòAsia‚Äô::text) OR (continent = ‚ÄòEurope‚Äô::text) OR (continent = ‚ÄòNorth America‚Äô::text) OR (continent = ‚ÄòAfrica‚Äô::text) OR (continent = ‚ÄòOceania‚Äô::text) OR (continent = ‚ÄòAntarctica‚Äô::text) OR (continent = ‚ÄòSouth America‚Äô::text))"
  },
  {
    "objectID": "schemas/schema-world.html#table-world.city",
    "href": "schemas/schema-world.html#table-world.city",
    "title": "Sch√©ma : world",
    "section": "Table world.city",
    "text": "Table world.city\n\n\n\n\nIdx\nName\nData Type\n\n\n\n\n* üîë ‚¨ã\nid\ninteger\n\n\n*\nname\ntext\n\n\n* ‚¨à\ncountrycode\nchar(3)\n\n\n*\ndistrict\ntext\n\n\n*\npopulation\ninteger\n\n\n\n\nChaque ligne de city est identifi√©e par la valeur de is. Cet attribut ne peut pas √™tre NULL. Deux lignes distinctes de city ne peuvent co√Øncider sur l‚Äôattribut id.\n\nForeign Keys\nLa colonne countrycode ne contient pas les noms des pays, mais le code √† 3 symboles du territoire o√π se situe la ville\n\n\n\n\nType\nName\nOn\n\n\n\n\n\ncity_country_fk\n( countrycode ) ref world.country (countrycode)\n\n\n\n\nL‚Äôextrait suivant correspond au villes du pays nomm√© France.\n\n\n\nid\nname\ndistrict\npopulation\n\n\n\n\n2974\nParis\n√éle-de-France\n2125246\n\n\n2975\nMarseille\nProvence-Alpes-C√¥te\n798430\n\n\n2976\nLyon\nRh√¥ne-Alpes\n445452\n\n\n2977\nToulouse\nMidi-Pyr√©n√©es\n390350\n\n\n2978\nNice\nProvence-Alpes-C√¥te\n342738\n\n\n2979\nNantes\nPays de la Loire\n270251\n\n\n2980\nStrasbourg\nAlsace\n264115\n\n\n2981\nMontpellier\nLanguedoc-Roussillon\n225392\n\n\n2982\nBordeaux\nAquitaine\n215363\n\n\n2983\nRennes\nHaute-Normandie\n206229\n\n\n2984\nLe Havre\nChampagne-Ardenne\n190905\n\n\n2985\nReims\nNord-Pas-de-Calais\n187206\n\n\n2986\nLille\nRh√¥ne-Alpes\n184657\n\n\n2987\nSt-√âtienne\nBretagne\n180210\n\n\n2988\nToulon\nProvence-Alpes-C√¥te\n160639\n\n\n2989\nGrenoble\nRh√¥ne-Alpes\n153317\n\n\n2990\nAngers\nPays de la Loire\n151279\n\n\n2991\nDijon\nBourgogne\n149867\n\n\n2992\nBrest\nBretagne\n149634\n\n\n2993\nLe Mans\nPays de la Loire\n146105\n\n\n2994\nClermont-Ferrand\nAuvergne\n137140\n\n\n2995\nAmiens\nPicardie\n135501\n\n\n2996\nAix-en-Provence\nProvence-Alpes-C√¥te\n134222\n\n\n2997\nLimoges\nLimousin\n133968\n\n\n2998\nN√Æmes\nLanguedoc-Roussillon\n133424\n\n\n2999\nTours\nCentre\n132820\n\n\n3000\nVilleurbanne\nRh√¥ne-Alpes\n124215\n\n\n3001\nMetz\nLorraine\n123776\n\n\n3002\nBesan√ßon\nFranche-Comt√©\n117733\n\n\n3003\nCaen\nBasse-Normandie\n113987\n\n\n3004\nOrl√©ans\nCentre\n113126\n\n\n3005\nMulhouse\nAlsace\n110359\n\n\n3006\nRouen\nHaute-Normandie\n106592\n\n\n3007\nBoulogne-Billancourt\n√éle-de-France\n106367\n\n\n3008\nPerpignan\nLanguedoc-Roussillon\n105115\n\n\n3009\nNancy\nLorraine\n103605\n\n\n3010\nRoubaix\nNord-Pas-de-Calais\n96984\n\n\n3011\nArgenteuil\n√éle-de-France\n93961\n\n\n3012\nTourcoing\nNord-Pas-de-Calais\n93540\n\n\n3013\nMontreuil\n√éle-de-France\n90674\n\n\n\n\n\n\n\n\n\n La description des tables country et city n‚Äôimpose pas que la capitale d‚Äôun pays soit une ville situ√©e dans ce pays.\nEst-ce que cette contrainte devrait √™tre mise en place ?"
  },
  {
    "objectID": "schemas/schema-world.html#table-world.countrylanguage",
    "href": "schemas/schema-world.html#table-world.countrylanguage",
    "title": "Sch√©ma : world",
    "section": "Table world.countrylanguage",
    "text": "Table world.countrylanguage\nLa table countrylanguage nous renseigne sur les langues parl√©es dans les diff√©rents pays.\n\n\n\n\nIdx\nName\nData Type\n\n\n\n\n* üîë ‚¨à\ncountrycode\nchar(3)\n\n\n* üîë\nlanguage\ntext\n\n\n*\nisofficial\nboolean\n\n\n*\npercentage\nreal\n\n\n\n\nUn extrait correspondant au pays FRA (France) aide √† comprendre\n\n\n\n\ncountrycode\nlanguage\nisofficial\npercentage\n\n\n\n\nFRA\nFrench\nt\n93.6\n\n\nFRA\nArabic\nf\n2.5\n\n\nFRA\nPortuguese\nf\n1.2\n\n\nFRA\nItalian\nf\n0.4\n\n\nFRA\nSpanish\nf\n0.4\n\n\nFRA\nTurkish\nf\n0.4\n\n\n\n\nLes lignes nous renseignent sur 6 langues. Une documentation compl√®te serait n√©cessaire pour v√©rifier si le percentage correspond √† la proportion d‚Äôindividus qui d√©clarent telle ou telle langue comme langue maternelle. On ne sait pas si un individu peut d√©clarer poss√©der plusieurs langues.\n\n\n\n\n\n\n La documentation d‚Äôune base de donn√©es ne se r√©duit pas toujours √† un diagramme.\n\n\n\nD‚Äôapr√®s l‚Äôinstance du sch√©ma world, la seule langue r√©put√©e officielle en France est le fran√ßais.\n\n\n\n\n\n\n Qu‚Äôest ce qu‚Äôune langue officielle ?\n\n\n\nDans la table countrylanguage, l‚Äôattribut countrycode renvoie √† une ligne de country gr√¢ce √† l‚Äôattribut de m√™me nom dans la table country.\n\nForeign Keys\n\n\n\nType\nName\nOn\n\n\n\n\n\ncountrylanguage_countrycode_fkey\n( countrycode ) ref world.country (countrycode)\n\n\n\n\n\n\n\n\n\nDans le sch√©ma world, chaque ligne de countrylanguage est identifi√©e par les valeurs des colonnes countrycode et language. On parle de cl√© primaire compos√©e."
  },
  {
    "objectID": "workshops/td8.html",
    "href": "workshops/td8.html",
    "title": "TD 8 : Mod√©lisation",
    "section": "",
    "text": "L3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle"
  },
  {
    "objectID": "workshops/td5.html#over-partition-by",
    "href": "workshops/td5.html#over-partition-by",
    "title": "TD 5: SQL",
    "section": "OVER (PARTITION BY ‚Ä¶)",
    "text": "OVER (PARTITION BY ‚Ä¶)\nCette construction peut √™tre combin√©e avec n‚Äôimporte quelle fonction d‚Äôaggr√©gation.\nCette requ√™te indique pour chaque ville, la ‚Äúpopulation moyenne‚Äù des villes de ce pays (cette moyenne n‚Äôa aucun sens).\nSELECT id, name_city, population_city, \n       avg(population_city) OVER (PARTITION BY countrycode)  AS avg_pop\nFROM world.city;  \nSans le m√©canisme de fen√™trage, on pourrait obtenir le r√©sultat au prix d‚Äôune jointure\n WITH tmp AS (\n  SELECT c.countrycode, AVG(c.population_city) AS avg_pop\n  FROM world.city c\n  GROUP BY c.countrycode\n ) \n  SELECT cc.id, cc.name_city, cc.population_city, tmp.avg_pop\n  FROM world.city cc NATURAL JOIN tmp;"
  },
  {
    "objectID": "workshops/td5.html#over-partition-by-order-by",
    "href": "workshops/td5.html#over-partition-by-order-by",
    "title": "TD 5: SQL",
    "section": "OVER (PARTITION BY ‚Ä¶ ORDER BY)",
    "text": "OVER (PARTITION BY ‚Ä¶ ORDER BY)\nOn peut partitioner et trier.\nCette construction est tr√®s pratique pour ranger les tuples d‚Äôun sous-groupe.\nDans world, si on veut ranger les langues parl√©es dans un pays par popularit√© d√©croissante, on peut proc√©der ainsi.\nSELECT countrycode, LANGUAGE, \nRANK() OVER (PARTITION BY countrycode ORDER BY percentage DESC)  AS rnk\nFROM world.countrylanguage ;"
  },
  {
    "objectID": "workshops/td5.html#rank-over",
    "href": "workshops/td5.html#rank-over",
    "title": "TD 5: SQL",
    "section": "RANK() OVER ()",
    "text": "RANK() OVER ()\nOn peut ne pas partitionner en utilisant l‚Äôexpression OVER (). Par exemple, si on veut obtenir le rang des tuples d‚Äôune table sur un tri particulier.\nSELECT countrycode, name_country, \n       RANK() OVER (ORDER BY population_country DESC)  AS rnk\nFROM world.country ;"
  },
  {
    "objectID": "workshops/td5.html#autres-types-de-fen√™tres",
    "href": "workshops/td5.html#autres-types-de-fen√™tres",
    "title": "TD 5: SQL",
    "section": "Autres types de fen√™tres",
    "text": "Autres types de fen√™tres\nLa construction OVER ( ...) n‚Äôest pas utilis√©e exclusivement avec des partitions (peut-√™tre triviales), on peut aussi d√©finir des fen√™tres glissantes.\nLes fonctions fen√™tre ne sont autoris√©es que dans la liste SELECT et la clause ORDER BY de la requ√™te. Elles sont interdites ailleurs, par exemple dans les clauses GROUP BY, HAVING et WHERE."
  },
  {
    "objectID": "workshops/td5.html#forme-g√©n√©rale",
    "href": "workshops/td5.html#forme-g√©n√©rale",
    "title": "TD 5: SQL",
    "section": "Forme g√©n√©rale",
    "text": "Forme g√©n√©rale\nCREATE OR REPLACE FUNCTION  schema_name.func_name(p_arg1 p_arg1_datatype, ..., [OUT o_arg1 o_arg1_datatype, ...])\nRETURNS some type | RECORD | SETOF some type | TABLE (..) \nLANGUAGE SQL AS\n$$\nSQL statement ;\nSQL statement ;\n...\nSQL statement ;\n$$ ;"
  },
  {
    "objectID": "workshops/td5.html#fonctions-qui-retournent-un-type-simple",
    "href": "workshops/td5.html#fonctions-qui-retournent-un-type-simple",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent un type simple",
    "text": "Fonctions qui retournent un type simple\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la population maximale parmi les capitales de la r√©gion (voir td2 requ√™te 1).\nCREATE OR REPLACE FUNCTION username.taille_max_capitale_region(p_region text)\nRETURNS INTEGER LANGUAGE SQL AS\n$$\nSELECT MAX(population_city) AS max_pop\nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region AND cc.population_city IS NOT NULL;\n$$ ;"
  },
  {
    "objectID": "workshops/td5.html#fonctions-qui-retournent-un-type-compos√©",
    "href": "workshops/td5.html#fonctions-qui-retournent-un-type-compos√©",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent un type compos√©",
    "text": "Fonctions qui retournent un type compos√©\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie le nom et la population de la capitale la plus peupl√©e de cette r√©gion (voir td2 requ√™te 1).\nOn peut utiliser le qualifiant OUT pour d√©signer des param√®tres de sortie.\nCREATE OR REPLACE FUNCTION username.capitale(p_region text, OUT o_name_capital TEXT, OUT o_population_capital INTEGER)\nRETURNS RECORD  LANGUAGE SQL AS\n$$\nWITH r AS(\n  SELECT cc.*, RANK() OVER (PARTITION BY c.region \n                            ORDER BY cc.population_city DESC) AS rnk\n  FROM world.country c JOIN world.city cc ON (c.capital=cc.id)\n  WHERE c.region=p_region)\nSELECT r.name_city,  r.population_city\nFROM r \nWHERE r.rnk = 1 ;\n$$ ;"
  },
  {
    "objectID": "workshops/td5.html#fonctions-qui-retournent-un-type-compos√©-d√©fini-par-les-lignes-dune-table",
    "href": "workshops/td5.html#fonctions-qui-retournent-un-type-compos√©-d√©fini-par-les-lignes-dune-table",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent un type compos√© d√©fini par les lignes d‚Äôune table",
    "text": "Fonctions qui retournent un type compos√© d√©fini par les lignes d‚Äôune table\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la description de la capitale la plus peupl√©e de cette r√©gion (voir td2 requ√™te 1).\nCREATE OR REPLACE FUNCTION username.capitale(p_region text)\nRETURNS world.city  LANGUAGE SQL AS\n$$\nWITH r AS(\n  SELECT cc.*, RANK() OVER (PARTITION BY c.region \n                            ORDER BY cc.population_city DESC) AS rnk\n  FROM world.country c JOIN world.city cc ON (c.capital=cc.id)\n  WHERE c.region=p_region\n)\nSELECT r.id, r.name_city, r.countrycode, r.district, r.population_city\nFROM r \nWHERE r.rnk = 1 ;\n$$ ;"
  },
  {
    "objectID": "workshops/td5.html#fonctions-qui-retournent-une-table",
    "href": "workshops/td5.html#fonctions-qui-retournent-une-table",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent une table",
    "text": "Fonctions qui retournent une table\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la table des capitales de la r√©gion (voir td2 requ√™te 1).\n\nTable de sch√©ma explicite\nOn se contente d‚Äôabord de renvoyer le nom de la capitale. On explicite le sch√©ma de la table r√©sultat\nCREATE OR REPLACE FUNCTION username.capitales_region(p_region text)\nRETURNS TABLE (name_capital text) LANGUAGE SQL AS\n$$\nSELECT cc.name_city \nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region ;\n$$ ;\n\n\nTable de m√™me sch√©ma qu‚Äôune autre table\nDocumentation\nOn veut maintenant r√©cup√©rer une table de m√™me sch√©ma que city.\n\n\n\n\n\n\nLa solution est tr√®s simple. On profite de ce qu‚Äô√† chaque table correspond un type de m√™me nom et on utilise le mot-cl√© SETOF.\n\n\n\nCREATE OR REPLACE FUNCTION username.capitales_region_large(p_region text)\nRETURNS SETOF world.city  LANGUAGE SQL AS\n$$\nSELECT cc.* \nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region ;\n$$ ;"
  },
  {
    "objectID": "workshops/td2.html#sch√©ma-world-rappel",
    "href": "workshops/td2.html#sch√©ma-world-rappel",
    "title": "TD 2: SQL",
    "section": "Sch√©ma world (rappel)",
    "text": "Sch√©ma world (rappel)\nUtiliser les commandes suivantes pour retrouver les sch√©mas de tables country, countrylanguage et city.\nbd_2023&gt; \\d world.\"nom de table\"\nVue d‚Äôensemble du sch√©ma world"
  },
  {
    "objectID": "workshops/td2.html#√©criture-de-requ√™tes",
    "href": "workshops/td2.html#√©criture-de-requ√™tes",
    "title": "TD 2: SQL",
    "section": "√âcriture de requ√™tes",
    "text": "√âcriture de requ√™tes\nPour extraire des informations d‚Äôune base de donn√©es, on utilise l‚Äôalg√®bre relationnelle (pour la th√©orie) et le langage SQL (pour la pratique).\n\n\n\n\n\n\n\n\nOp√©ration\nAlg√®bre rel.\nSQL\n\n\n\n\nProjection\n\\(\\Pi_{\\text{liste d'attributs}}(R)\\)\nSELECT attributs FROM  R\n\n\nS√©lection\n\\({\\Large \\sigma}_{\\text{condition}}{R}\\)\nSELECT * FROM R WHERE condition\n\n\nRenommage\n\\(\\rho_{\\text{nom1} \\rightarrow \\text{nom2}}(R)\\)\nSELECT nom1 AS nom2 FROM table1 AS table2\n\n\nUnion\n\\(R \\cup S\\)\n(SELECT * FROM R) UNION (SELECT * FROM S)\n\n\nDiff√©rence\n\\(R - S\\)\n(SELECT * FROM R) EXCEPT (SELECT * FROM S)\n\n\nProduit\n\\(R \\times S\\)\nSELECT * FROM R,S\n\n\nIntersection\n\\(R \\cap S\\)\n(SELECT * FROM R) INTERSECT (SELECT * FROM S)"
  },
  {
    "objectID": "workshops/td2.html#op√©rations-avanc√©es",
    "href": "workshops/td2.html#op√©rations-avanc√©es",
    "title": "TD 2: SQL",
    "section": "Op√©rations avanc√©es",
    "text": "Op√©rations avanc√©es\n\nJointures\nLa jointure est une op√©ration qui permet de recoller deux relations ensemble. On la note avec le signe \\(\\bowtie_C\\) o√π \\(C\\) est une condition. Formellement, ce n‚Äôest qu‚Äôune s√©lection selon la condition \\(C\\) d‚Äôun produit cart√©sien, c‚Äôest-√†-dire, par d√©finition : \\[R {\\Large \\bowtie}_C S = {\\Large \\sigma}_{C}{(R \\times S)}.\\]\nCette op√©ration est tr√®s courante dans les requ√™tes. Cela vient du fait que les bases de donn√©es sont con√ßues pour ne pas avoir d‚Äôinformation redondante.\nPrenons l‚Äôexemple du sch√©ma world et des tables world.country et world.city. La table world.country poss√®de une colonne capital qui contient le num√©ro d‚Äôidentification d‚Äôune ville de la table world.city. Par exemple, pour la France, la colonne capital vaut 2974 et la ville num√©ro 2974 est Paris:\nbd_2023-24&gt; SELECT capital \nFROM world.country \nWHERE countrycode='FRA';\nbd_2023-24&gt; SELECT name \nFROM world.city \nWHERE id = 2974;\nPour lister les noms des capitales mondiales, on va avoir besoin de recoller les deux tables en prenant soin de respecter la condition d‚Äô√©galit√© entre la capitale et le num√©ro d‚Äôidentification de la ville. Cela peut s‚Äô√©crire en SQL comme suit:\nSELECT name\nFROM world.city AS V JOIN \n     world.country AS P ON \n     V.id = P.capital;\nParfois, on veut recoller deux tables avec la condition que les colonnes qui ont le m√™me nom doivent √™tre √©gales. Cela arrive souvent si la base de donn√©es a bien √©t√© con√ßue. On appelle cette jointure une jointure naturelle, qu‚Äôon peut √©crire avec NATURAL JOIN. La requ√™te\nSELECT name \nFROM world.city NATURAL JOIN world.country\nWHERE continent = 'Oceania';\nrenvoie la liste des villes d‚ÄôOc√©anie. La jointure est faite implicitement sur la condition\nworld.city.countrycode = world.country.countrycode\nla table r√©sultante n‚Äôaura qu‚Äôune seule colonne countrycode. Si l‚Äôon souhaite ne faire la jointure naturelle que sur un sous-ensemble a1,...,ak des attributs communs, on peut utiliser JOIN ... USING (a1,...,ak).\n\n\nRequ√™tes nomm√©es : utilisation de WITH\nLorsque les requ√™tes se compliquent, il est parfois commode de la d√©couper en plusieurs requ√™tes qu‚Äôon manipulera par la suite. Par exemple, trouver le nom des capitales europ√©ennes ayant plus d‚Äôun million d‚Äôhabitants peut se d√©couper ainsi: on r√©sout la requ√™te CAP qui contient le nom, le continent et la population des capitales. Puis on r√©sout la requ√™te finale en filtrant CAP. Cela peut s‚Äô√©crire avec l‚Äôop√©rateur WITH:\nWITH CAP AS (\n  SELECT name, continent, population\n  FROM world.city AS V JOIN \n    world.country AS P ON  V.id=P.capital\n)\n\nSELECT name\nFROM CAP\nWHERE continent = 'Europe' AND population &gt; 1000000;"
  },
  {
    "objectID": "workshops/td2.html#requ√™tes",
    "href": "workshops/td2.html#requ√™tes",
    "title": "TD 2: SQL",
    "section": "Requ√™tes",
    "text": "Requ√™tes\n\nQuels sont les noms des capitales Sud-Am√©ricaines ? (14 lignes)\n\n\nQuels sont les noms des pays o√π le fran√ßais est langue officielle ? (18 lignes)\n\n\nQuels sont les pays dont le gouvernement est monarchique (constitutionnelle ou pas) ? (43 lignes)\n\n\nQuelles sont les monarchies d‚ÄôEurope dont la capitale compte moins d‚Äôun million d‚Äôhabitants ? (8 lignes)\n\n\nQuelles sont les r√©gions o√π on ne trouve pas de monarchie ? (9 lignes)\n\n\nQuelles sont les langues qui ne sont langues officielles dans aucun pays ? (355 lignes)\n\n\nQuels sont les pays qui n‚Äôont pas de langue officielle ? (49 lignes)\n\n\nQuels sont les pays dont la seule langue officielle est le fran√ßais ? (9 lignes)\n\n\nLes noms des pays o√π le fran√ßais n‚Äôest pas la seule langue officielle. (9 lignes)\n\n\nQuelles sont les r√©gions qui ne comportent qu‚Äôune seule forme de gouvernement ? (3 lignes)\n\n\nQuelles sont les langues officielles des pays dont la capitale compte plus de 5 000 000 d‚Äôhabitants ? (12 lignes)\n\n\nQuels sont les pays o√π au moins trois langues sont parl√©es chacune par strictement plus de \\(10\\%\\) de la population ? (35 lignes)\n\n\nQuelles sont les r√©gions o√π il existe deux pays dont les esp√©rances de vie diff√®rent par au moins \\(10\\) ans ? (16 lignes)\n\n\nQuels sont les pays o√π l‚Äôanglais et le fran√ßais sont des langues officielles ? (3 lignes)\n\n\nMontrer comment calculer l‚Äôintersection de deux tables avec une jointure (sous certaines conditions)."
  },
  {
    "objectID": "workshops/td10.html",
    "href": "workshops/td10.html",
    "title": "TD 10: Normalisation",
    "section": "",
    "text": "L3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle\n\n\n\n\n\n\n\n\nExercice\nSoit \\(\\mathcal{A}=\\left\\{A,B,C,D,E\\right\\}\\) un sch√©ma et soit \\(\\mathcal{A}_1=\\left\\{A,B,C\\right\\}\\). Pour chaque ensemble \\(\\Sigma\\) de d√©pendances fonctionnelles ci-dessous, d√©terminer un ensemble de DF √©quivalent √† \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\).\n\n\\(\\Sigma=\\left\\{AB\\to DE, C\\to E, D\\to C, E\\to A\\right\\}\\)\n\\(\\Sigma=\\left\\{A\\to D, BD\\to E, AC\\to E, DE\\to B\\right\\}\\)\n\\(\\Sigma=\\left\\{AB\\to D, AC\\to E, BC\\to D, D\\to A, E\\to B\\right\\}\\)\n\\(\\Sigma=\\left\\{A\\to B, B\\to C, C\\to D, D\\to E, E\\to A\\right\\}\\)\n\n\n\nExercice\nSoit \\(\\mathcal{A}=\\left\\{A,B,C,D,E\\right\\}\\) un sch√©ma et soit la d√©composition \\(\\left\\{\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3\\right\\}\\) o√π \\[\\mathcal{A}_1=\\left\\{A,B,C\\right\\}\\quad \\mathcal{A}_2=\\left\\{B,C,D\\right\\}\\quad \\mathcal{A}_3=\\left\\{A,C,E\\right\\}\\] Pour chaque ensemble \\(\\Sigma\\) de d√©pendances fonctionnelles ci-dessous, d√©terminer quelles d√©pendances sont pr√©serv√©es par cette d√©composition, c‚Äôest-√†-dire quelles DF de \\(\\Sigma\\) sont impliqu√©es par \\(\\bigcup_{i=1}^3 \\pi_{\\mathcal{A}_i}(\\Sigma)\\).\n\n\\(\\Sigma=\\left\\{b\\rightarrow E, CE\\rightarrow A\\right\\}\\)\n\\(\\Sigma=\\left\\{aC\\rightarrow E, BC\\to D\\right\\}\\)\n\\(\\Sigma=\\left\\{a\\rightarrow D, D\\to E, B\\to D\\right\\}\\)\n\\(\\Sigma=\\left\\{a\\rightarrow D, CD\\to E, E\\to D\\right\\}\\)\n\n\n\nExercice\nOn consid√®re le sch√©ma de relation suivant concernant la gestion de rendez-vous d‚Äôun service d‚Äôintervention hospitaliers. \\[\n\\mathcal{A}=\\left\\{\\texttt{IdM,NomM,PrenomM,DateRV,HeureRV,IdP,NomP,PrenomP,IdInterV}\\right\\}\n\\]\nChaque rendez-vous implique un m√©decin et un patient. Chaque m√©decin est identifi√© par un num√©ro, IdM, un nom NomM et un pr√©nom PrenomM. Le rendez-vous est √† une date, DateRV, et √† une heure, HeureRV donn√©es. Chaque patient est identifi√© par un num√©ro, IdP, un nom NomP et un pr√©nom PrenomP. Chaque rv est programm√© pour un type d‚Äôintervention m√©dical, IdInterV. On suppose que chaque jour, un m√©decin ne peut pratiquer qu‚Äôun seul type d‚Äôintervention m√©dicale (consultation, type de chirurgie donn√©e).\nOn a les d√©pendances fonctionnelles \\(\\Sigma\\) suivantes:\nIdM, DateRV,HeureRV, IdInterV ‚Üí IdP\nIdM, DateRV ‚Üí  IdInterV\nIdM ‚Üí NomM, PrenomM\nIdP ‚Üí NomP, PrenomP\nIdP,DateRV,HeureRV ‚Üí IdInterV\nIdP,DateRV,HeureRV ‚Üí  IdM,NomM\n\nQuels sont les inconv√©nients d‚Äôune telle mod√©lisation par une seule table en terme d‚Äôanomalies d‚Äôinsertion ou de suppression ?\n\n\nCalculer \\([\\texttt{IdM}]^+_{\\Sigma}\\)\n\n\nProposez un ensemble d‚Äôattributs formant une cl√© de la relation.\n\n\nDonner un ensemble de d√©pendances fonctionnelles \\(\\Sigma'\\) √©quivalent √† \\(\\Sigma\\) qui soit minimal (i.e.¬†sans r√®gles redondantes, notamment). Justifiez\n\nOn se donne la d√©composition de \\(\\mathcal{A}\\) suivante~: \\[\n\\begin{array}{l}\n    \\mathcal{A}_1=\\left\\{\\texttt{IdM,HeureRV,DateRV,IdP,NomP,PrenomP}\\right\\},\\\\\n     \\mathcal{A}_2=\\left\\{\\texttt{IdM,DateRV,IdInterV}\\right\\},\\\\\n     \\mathcal{A}_3=\\left\\{\\texttt{IdM,NomM,PrenomM}\\right\\}\n\\end{array}\n\\]\n\nToutes les d√©pendances fonctionnelles sont-elles pr√©serv√©es par cette d√©composition ?\nEst-elle sans perte d‚Äôinformation ?\nPour \\(i=1,2,3\\), d√©terminer si \\(\\mathcal{A}_i\\) est en forme normale de Boyce-Codd.\n\n\nM√™mes questions pour la d√©composition :\n\n\\[\n\\begin{array}{rl}\n\\mathcal{A}_1 &=\\left\\{\\texttt{IdM,HeureRV,DateRV,IdP}\\right\\}\\\\\n\\mathcal{A}_2 &=\\left\\{\\texttt{IdP,NomP,PrenomP}\\right\\}, \\\\\n\\mathcal{A}_3 &=\\left\\{\\texttt{IdM,DateRV,IdInterV}\\right\\},\\\\\n\\mathcal{A}_4 &=\\left\\{\\texttt{IdM,NomM,PrenomM}\\right\\}\n\\end{array}\n\\]\n\n\nExercice\nSoit une relation concernant des personnes r√©sidant en France avec les attributs suivants:\nNom, Num√©ro de s√©curit√© sociale, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone\navec l‚Äôensemble \\(\\Sigma\\) de DF suivantes~:\nNum√©ro de s√©curit√© sociale ‚Üí Nom, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone \nCommune ‚Üí D√©partement \nCode postal ‚Üí Commune, D√©partement\n\nCe sch√©ma est-il en forme normale de Boyce-Codd ?\n\nSoit la d√©composition \\[\\mathcal{A}_1=\\left\\{\\texttt{Code postal}, \\texttt{Commune}, \\texttt{D√©partement}\\right\\}\\] et \\[\\mathcal{A}_2=\\left\\{\\texttt{Num√©ro de s√©curit√© sociale}, \\texttt{Nom}, \\texttt{Code postal},\\texttt{Num√©ro de t√©l√©phone}\\right\\}\\]\n\nChaque \\(\\mathcal{A}_i\\) est-elle en forme normale de Boyce-Codd ?\nCette d√©composition pr√©serve-t-elle les d√©pendances fonctionnelles ?\nCette d√©composition est-elle sans perte d‚Äôinformation ?\nM√™mes questions pour la d√©composition \\[\\mathcal{A}_1=\\left\\{\\texttt{Commune}, \\texttt{D√©partement}\\right\\}\\]\n\n\\[\\mathcal{A}_2=\\left\\{\\texttt{Num√©ro de s√©curit√© sociale}, \\texttt{Nom}, \\texttt{Commune}, \\texttt{Code postal},\\texttt{Num√©ro de t√©l√©phone}\\right\\}\\]\n\n\nExercice\nSoit un sch√©ma d‚Äôattributs \\(A_1, A_2,\\dots A_n\\) et un ensemble de d√©pendances fonctionnelles. Calculer le nombre de super-clefs (en fonction de \\(n\\)) dans les cas suivants~:\n\nLa seule clef est \\(\\left\\{A_1\\right\\}\\).\nLes seules clefs sont \\(\\left\\{A_1\\right\\}\\) et \\(\\left\\{A_2\\right\\}\\).\nLes seules clefs sont \\(\\left\\{A_1,A_2\\right\\}\\) et \\(\\left\\{A_3,A_4\\right\\}\\).\nLes seules clefs sont \\(\\left\\{A_1,A_2\\right\\}\\) et \\(\\left\\{A_1,A_3\\right\\}\\).\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\{ A \\to B, B \\to C\\} \\]\n\nQuelle est la fermeture \\(\\{A\\}^+\\) de \\(\\{A\\}\\) ?\n\n\nQuelles sont les super-cl√©s ? Les cl√©s ?\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D,E,F\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\Bigl\\{ \\left\\{A,B\\right\\}\\to C, \\left\\{B,C\\right\\}\\to \\left\\{A,D\\right\\}, D\\to E, \\left\\{C,F\\right\\}\\to B \\Bigr\\}\\]\n\nCalculer la fermeture \\(\\left\\{A,B\\right\\}^+\\) de \\(\\left\\{A,B\\right\\}\\).\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(\\left\\{A,B\\right\\}\\to D\\)~?\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(D\\to A\\)~?\n\n\n\n\nExercice\nOn consid√®re une sch√©ma \\(\\mathcal{A}\\) avec les attributs\nPropri√©taire, Occupant, Adresse, Noapt, Nbpi√®ces, Nbpersonnes\nUn nuplet/tuple (p, o, a, n, nb1, nb2) ayant la signification suivante : La personne o habite avec nb2 personnes l‚Äôappartement de num√©ro n ayant nb1 pi√®ces dont le propri√©taire est p.\nUne analyse de cette relation nous fournit un ensemble initial \\(\\Sigma\\) de d√©pendances fonctionnelles\nOccupant ‚Üí Adresse\nOccupant ‚Üí Noapt\nOccupant ‚Üí Nbpersonnes\nAdresse, Noapt ‚Üí Proprietaire\nAdresse, Noapt ‚Üí Occupant\nAdresse, Noapt ‚Üí Nbpieces\n\nD√©terminer les cl√©s du sch√©mas\nLes sch√©ma est-il en FN3 ?\nSi la r√©ponse est Non, d√©composer sans perte d‚Äôinformation et sans perte de d√©pendances fonctionnelles.\n\n\n\nExercice\n\nSoit le sch√©ma \\[\\mathcal{A}=\\{\\texttt{IdLivre, Titre, Langue, Pays, IdTraducteur, Nom, Date}\\}\\] et l‚Äôensemble de DF\nIdLivre ‚Üí Titre \nLangue ‚Üí Pays \nIdTraducteur ‚Üí Nom \nIdLivre, IdTraducteur, Langue ‚Üí Date\nIdLivre, IdTraducteur ‚Üí Langue\nAppliquer l‚Äôalgorithme de d√©composition vu en cours pour obtenir une d√©composition de \\(\\mathcal{A}\\) qui respecte la FNBC et est sans perte d‚Äôinformation. D√©terminer quelles DF sont pr√©serv√©es.\n\n\nExercice\nSoit le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H‚ÄÉ \nF ‚Üí CD‚ÄÉ \nD ‚Üí G\n\nAppliquer l‚Äôalgorithme de d√©composition vu en cours pour obtenir une d√©composition de \\(\\mathcal{A}\\) qui respecte la FNBC et est sans perte d‚Äôinformation. D√©terminer quelles DF sont pr√©serv√©es.\nPeut-on, en ajoutant un sous-sch√©ma √† la d√©composition, obtenir une d√©composition FNBC sans perte d‚Äôinformation et sans perte de DF ?\n\n\n\nExercice\nReprendre les questions de l‚Äôexercice pr√©c√©dent pour le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H\nF ‚Üí CD\nD ‚Üí G\nA‚Üí E"
  },
  {
    "objectID": "cours-syllabus.html",
    "href": "cours-syllabus.html",
    "title": "MA15Y030 Syllabus",
    "section": "",
    "text": "Organisation des enseignements\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJour\nHoraire\nLieu\nD√©but\n\n\n\n\nCours\nVendredi\n14:00 - 15:30\nOlympe de Gouges Amphi II\n2024-09-13\n\n\nTD/TP 1\nVendredi\n15:45 - 18:15\nSophie Germain 2004-2005\n2024-09-20\n\n\nTD/TP 2\nVendredi\n15:45 - 18:15\nSophie Germain 2006\n2024-09-20\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObjectifs\n\n\n\nApr√®s avoir suivi ce cours, vous serez capable :\n\nd‚Äôinterroger une base de donn√©es relationnelle\nde lire un sch√©ma de base de donn√©es\nde concevoir une base de donn√©es\nd‚Äôam√©liorer une base de donn√©es\n\n\n\n\n\n\n\n\n\nUniversit√© Paris Cit√©\n\n\n\nQuelques rubriques utiles:\n\nCharte Universit√© Paris Cit√©\nD√©marches et accessibilit√©\nCentre de contact\nRelais handicap\n\n\n\n\n\n\n\n\n\nCommunication \n\n\n\nLes supports mat√©riels du cours sont accessible √† partir de s-v-b.github.io/MA15Y030\nLes annonces sont diffus√©es via Moodle\nInscrivez-vous au portail Moodle pour √™tre toujours inform√©\n\n\n\n\n\n\n\n\nSupport informatique \n\n\n\n C√¥t√© serveur, vous utiliserez le serveur PostGres de l‚ÄôUFR de Math√©matiques. Pour disposer d‚Äôun identifiant ENT et d‚Äôun mot de passe  consultez la proc√©dure sur Moodle\n C√¥t√© client, vous pourrez utiliser le logiciel qui vous convient. En salle machine, vous trouverez\n\npsql\npgcli\ndbeaver\n\nVous pouvez installer l‚Äôun de ces clients ou plusieurs sur votre machine personnelle.\n\n\n\n\n\n\n\n\nR√©f√©rences \n\n\n\n\nDatabase Systems: The Complete Book (DS:CB), by Hector Garcia-Molina, Jeff Ullman, and Jennifer Widom\nFoundations of databases. Abiteboul, Hull et Vianu\nAlice\nDocumentation PostGres\nNext Generation Databases NoSQLand Big Data, Guy Harrison\nGuy Harrison Blog\nDatabases trends and applications\nUpcoming book ‚ÄúPrinciples of Databases‚Äù, by Marcelo Arenas, Pablo Barcelo, Leonid Libkin, Wim Martens, and Andreas Pieris.\n\n\n\n\n\n\n\n\n\n\nCours magistraux et Travaux dirig√©s \n\n\n\nLe canevas des cours magistraux est r√©sum√© par les diapositives\nLes √©nonc√©s des exercices sont disponibles sous diff√©rents formats (html et pdf)\nLes corrections (partielles) des exercices sont disponibles sous diff√©rents formats (html et pdf)\nAssiduit√©. La pr√©sence en cours et en TDs n‚Äôest pas obligatoire. Aucun certificat d‚Äôassiduit√© ne sera d√©livr√©.\n√âvitez si possible les courriels √† propos du contenu du cours. Le courriel devrait √™tre r√©serv√© aux questions personnelles.\n\n\n\n\n\n\n\n\nContr√¥le des connaissances \n\n\n\n\nContr√¥le continu en trois √©preuves sur table :\n\n\\(\\textsf{CC}_1\\) (1 heure)\n\\(\\textsf{CC}_2\\) (1 heure)\n\\(\\textsf{CC}_3\\) (1 heure)\n\nExamen\n\n\\(\\textsf{CT}\\) (2 heures)\n\nNotation\n\nLa note finale de session I est calcul√©e selon la formule :\n\\[\\frac{1}{6}\\left\\{\\max( \\textsf{CC}_1,\\textsf{CT}) + \\max(\\textsf{CC}_2,\\textsf{CT}) + \\max(\\textsf{CC}_3,\\textsf{CT}) \\right\\} + \\frac{1}{2} \\textsf{CT}\\]\nLa note de session II (seconde chance) est √©gale √† la note obtenue √† l‚Äô√©preuve sur table de seconde chance.\n\n\n\n\n\n\n\n\n Trucs\n\n\n\n\nSurvolez les diapositives avant le cours\nR√©fl√©chissz sur les exercices avant de consulter les corrections\nV√©rifiez la compatibilit√© de vos solutions avec les corrections\nUtilisez les aides en ligne (StackOverflow, ChatGPT, copilot, ‚Ä¶)\nD√©cryptez les messages d‚Äôerreur\nPosez des questions, , cela aide tout le monde (bis)\n\n\n\n\n\n\n\n\n\nInt√©grit√© universitaire\n\n\n\nTL;DR: Pas de triche!\n\n\n\n\n\n\n\n\nSauvez les dates ! \n\n\n\n\nSeptembre 13: D√©but du cours\nSeptembre 20: D√©but des TD/TP\nOctobre 25: Contr√¥le continu I\nOctobre 26-Novembre 3: Pause de la Toussaint\nNovembre 8 : Reprise des cours et TD\nNovembre 15: Contr√¥le continu II\nD√©cembre 6: Fin du cours magistral\nD√©cembre 13: Contr√¥le continu III\nJanvier ??: Contr√¥le terminal\nJuin ??: Deuxi√®me chance\n\nCliquer ici pour le calendrier universitaire de Universit√© Paris Cit√©.\nCliquer ici pour l‚Äôemploi du temps de la Licence MIASHS",
    "crumbs": [
      "Informations g√©n√©rales",
      "Syllabus"
    ]
  },
  {
    "objectID": "workshops/td7.html",
    "href": "workshops/td7.html",
    "title": "TD 7 : Contraintes (suite)",
    "section": "",
    "text": "L3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle"
  },
  {
    "objectID": "workshops/td1.html#sch√©mas",
    "href": "workshops/td1.html#sch√©mas",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Sch√©mas",
    "text": "Sch√©mas\nLes sch√©mas sont une abstraction sp√©cifique √† PostgreSQL. Les sch√©mas permettent de faire cohabiter sur une m√™me base de donn√©es (ou catalogue dans le jargon PostgreSQL) plusieurs ensembles d‚Äôinformations de nature diff√©rentes. On peut indiquer √† pgcli, psql ou un autre client (dbeaver ou autre) quels sch√©mas on veut utiliser par d√©faut.\nDans ce TP, nous allons nous concentrer sur le sch√©ma world qui contient des informations concernant des villes et des pays/territoires du monde entier. Au cours de ce semestre, nous serons amen√©s √† utiliser d‚Äôautres sch√©mas : pagila qui contient des informations concernant des films, ‚Ä¶\nPour lister et modifier les sch√©mas de votre environnement de travail:\nbd_2023-24&gt; SHOW search_path ;                  -- lister\nbd_2023-24&gt; SET search_path TO world, public ;  -- modifier\nbd_2023-24&gt; SHOW search_path ;       -- visualiser \nLister les sch√©mas du catalogue bd_2023-24.\n\\dn\nPour lister les tables des schemas inscrits sur votre search_path.\nbd_2023-24&gt; \\d\n+----------+---------------------+--------+----------+\n| Schema   | Name                | Type   | Owner    |\n|----------+---------------------+--------+----------|\n| world    | city                | table  | postgres |\n| world    | country             | table  | postgres |\n| world    | countrylanguage     | table  | postgres |\n+----------+---------------------+--------+----------+\nVue d‚Äôensemble du sch√©ma world"
  },
  {
    "objectID": "workshops/td1.html#suggestion",
    "href": "workshops/td1.html#suggestion",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Suggestion",
    "text": "Suggestion\nSi vous travaillez avec pgcli/psql, utilisez en local votre √©diteur pr√©f√©r√© (emacs, vi, sublime text, visual studio code, ‚Ä¶), transf√©rez votre script sql gr√¢ce √† scp, et chargez le script dans votre session psql/pgcli √† l‚Äôaide de \\\\i."
  },
  {
    "objectID": "workshops/td1.html#tables",
    "href": "workshops/td1.html#tables",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Tables",
    "text": "Tables\nPour voir la d√©finition (c‚Äôest-√†-dire les diff√©rentes colonnes) d‚Äôune table:\nbd_2023-24&gt; \\d world.country\n\n+--------------------+---------------+-------------+\n| Column             | Type          | Modifiers   |\n|--------------------+---------------+-------------|\n| countrycode        | character(3)  |  not null   |\n| name_country       | text          |  not null   |\n| continent          | text          |  not null   |\n| region             | text          |  not null   |\n| surfacearea        | real          |  not null   |\n| indepyear          | smallint      |             |\n| population_country | integer       |  not null   |\n| lifeexpectancy     | real          |             |\n| gnp                | numeric(10,2) |             |\n| gnpold             | numeric(10,2) |             |\n| localname          | text          |  not null   |\n| governmentform     | text          |  not null   |\n| headofstate        | text          |             |\n| capital            | integer       |             |\n| code2              | character(2)  |  not null   |\n+--------------------+---------------+-------------+"
  },
  {
    "objectID": "workshops/td1.html#explorer-les-possibilit√©s-de-psql-ou-de-pgcli",
    "href": "workshops/td1.html#explorer-les-possibilit√©s-de-psql-ou-de-pgcli",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Explorer les possibilit√©s de psql ou de pgcli",
    "text": "Explorer les possibilit√©s de psql ou de pgcli\nbd_2023-24&gt; \\?\nDans la deuxi√®me partie du TP, on s‚Äôint√©resse aux requ√™tes, c‚Äôest-√†-dire, les moyens d‚Äôextraire une information pertinente d‚Äôune base de donn√©es."
  },
  {
    "objectID": "weeks/week-8.html",
    "href": "weeks/week-8.html",
    "title": "Semaine 8",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 8"
    ]
  },
  {
    "objectID": "weeks/week-8.html#pr√©parer",
    "href": "weeks/week-8.html#pr√©parer",
    "title": "Semaine 8",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir requ√™tes du TD 6 TD 6",
    "crumbs": [
      "Journal",
      "Semaine 8"
    ]
  },
  {
    "objectID": "weeks/week-8.html#cours-magistral-diapositives",
    "href": "weeks/week-8.html#cours-magistral-diapositives",
    "title": "Semaine 8",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nMod√©lisation I\nMod√©lisation II",
    "crumbs": [
      "Journal",
      "Semaine 8"
    ]
  },
  {
    "objectID": "weeks/week-8.html#exercices-td-7",
    "href": "weeks/week-8.html#exercices-td-7",
    "title": "Semaine 8",
    "section": "Exercices : TD 7",
    "text": "Exercices : TD 7\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 8"
    ]
  },
  {
    "objectID": "weeks/week-8.html#solutions-du-td-6-semaine-7",
    "href": "weeks/week-8.html#solutions-du-td-6-semaine-7",
    "title": "Semaine 8",
    "section": "Solutions du TD 6 (Semaine 7)",
    "text": "Solutions du TD 6 (Semaine 7)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 8"
    ]
  },
  {
    "objectID": "weeks/week-8.html#travail-personnel",
    "href": "weeks/week-8.html#travail-personnel",
    "title": "Semaine 8",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 8"
    ]
  },
  {
    "objectID": "weeks/week-6.html",
    "href": "weeks/week-6.html",
    "title": "Semaine 5",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 6"
    ]
  },
  {
    "objectID": "weeks/week-6.html#pr√©parer",
    "href": "weeks/week-6.html#pr√©parer",
    "title": "Semaine 5",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir requ√™tes du TD 4 TD 4",
    "crumbs": [
      "Journal",
      "Semaine 6"
    ]
  },
  {
    "objectID": "weeks/week-6.html#cours-magistral-diapositives",
    "href": "weeks/week-6.html#cours-magistral-diapositives",
    "title": "Semaine 5",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nSQL D√©finition de donn√©es\nMod√©lisation des contraintes",
    "crumbs": [
      "Journal",
      "Semaine 6"
    ]
  },
  {
    "objectID": "weeks/week-6.html#exercices-td-5",
    "href": "weeks/week-6.html#exercices-td-5",
    "title": "Semaine 5",
    "section": "Exercices : TD 5",
    "text": "Exercices : TD 5\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 6"
    ]
  },
  {
    "objectID": "weeks/week-6.html#solutions-du-td-4-semaine-5",
    "href": "weeks/week-6.html#solutions-du-td-4-semaine-5",
    "title": "Semaine 5",
    "section": "Solutions du TD 4 (Semaine 5)",
    "text": "Solutions du TD 4 (Semaine 5)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 6"
    ]
  },
  {
    "objectID": "weeks/week-6.html#travail-personnel",
    "href": "weeks/week-6.html#travail-personnel",
    "title": "Semaine 5",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 6"
    ]
  },
  {
    "objectID": "weeks/week-4.html",
    "href": "weeks/week-4.html",
    "title": "Semaine 4",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 4"
    ]
  },
  {
    "objectID": "weeks/week-4.html#pr√©parer",
    "href": "weeks/week-4.html#pr√©parer",
    "title": "Semaine 4",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir requ√™tes du TD 2 TD 2",
    "crumbs": [
      "Journal",
      "Semaine 4"
    ]
  },
  {
    "objectID": "weeks/week-4.html#cours-magistral-diapositives",
    "href": "weeks/week-4.html#cours-magistral-diapositives",
    "title": "Semaine 4",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nSQL requ√™tes imbriqu√©s\nSQL Aggr√©gations/Fen√™tres et Partitions",
    "crumbs": [
      "Journal",
      "Semaine 4"
    ]
  },
  {
    "objectID": "weeks/week-4.html#exercices-td-3",
    "href": "weeks/week-4.html#exercices-td-3",
    "title": "Semaine 4",
    "section": "Exercices : TD 3",
    "text": "Exercices : TD 3\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 4"
    ]
  },
  {
    "objectID": "weeks/week-4.html#solutions-du-td-2-semaine-3",
    "href": "weeks/week-4.html#solutions-du-td-2-semaine-3",
    "title": "Semaine 4",
    "section": "Solutions du TD 2 (Semaine 3)",
    "text": "Solutions du TD 2 (Semaine 3)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 4"
    ]
  },
  {
    "objectID": "weeks/week-4.html#travail-personnel",
    "href": "weeks/week-4.html#travail-personnel",
    "title": "Semaine 4",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 4"
    ]
  },
  {
    "objectID": "weeks/week-2.html",
    "href": "weeks/week-2.html",
    "title": "Semaine 2",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 2"
    ]
  },
  {
    "objectID": "weeks/week-2.html#pr√©parer",
    "href": "weeks/week-2.html#pr√©parer",
    "title": "Semaine 2",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nRequ√™tes du TD 1 TD 1",
    "crumbs": [
      "Journal",
      "Semaine 2"
    ]
  },
  {
    "objectID": "weeks/week-2.html#cours-magistral-diapositives",
    "href": "weeks/week-2.html#cours-magistral-diapositives",
    "title": "Semaine 2",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nNous reprenons\nIntroduction √† l‚Äôalg√®bre relationnelle\nau  renommage\nPuis nous aborderons le langage de requ√™tes SQL dans\nSQL requ√™tes √©l√©mentaires",
    "crumbs": [
      "Journal",
      "Semaine 2"
    ]
  },
  {
    "objectID": "weeks/week-2.html#exercices-td-1",
    "href": "weeks/week-2.html#exercices-td-1",
    "title": "Semaine 2",
    "section": "Exercices : TD 1",
    "text": "Exercices : TD 1\nNous abordons avec les outils de l‚Äôalg√®bre relationnelle et de SQL les questions pos√©es dans le td1 :\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 2"
    ]
  },
  {
    "objectID": "weeks/week-2.html#travail-personnel-optionnel",
    "href": "weeks/week-2.html#travail-personnel-optionnel",
    "title": "Semaine 2",
    "section": "Travail personnel (optionnel)",
    "text": "Travail personnel (optionnel)\nVous pouvez vous entrainer sur annales :\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 2"
    ]
  },
  {
    "objectID": "weeks/week-12.html",
    "href": "weeks/week-12.html",
    "title": "Semaine 12",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 12"
    ]
  },
  {
    "objectID": "weeks/week-12.html#pr√©parer",
    "href": "weeks/week-12.html#pr√©parer",
    "title": "Semaine 12",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir TD 10 TD 10",
    "crumbs": [
      "Journal",
      "Semaine 12"
    ]
  },
  {
    "objectID": "weeks/week-12.html#cours-magistral-diapositives",
    "href": "weeks/week-12.html#cours-magistral-diapositives",
    "title": "Semaine 12",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nNormalisation III",
    "crumbs": [
      "Journal",
      "Semaine 12"
    ]
  },
  {
    "objectID": "weeks/week-12.html#exercices-td-11",
    "href": "weeks/week-12.html#exercices-td-11",
    "title": "Semaine 12",
    "section": "Exercices : TD 11",
    "text": "Exercices : TD 11\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 12"
    ]
  },
  {
    "objectID": "weeks/week-12.html#solutions-du-td-9-semaine-10",
    "href": "weeks/week-12.html#solutions-du-td-9-semaine-10",
    "title": "Semaine 12",
    "section": "Solutions du TD 9 (Semaine 10)",
    "text": "Solutions du TD 9 (Semaine 10)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 12"
    ]
  },
  {
    "objectID": "weeks/week-12.html#travail-personnel",
    "href": "weeks/week-12.html#travail-personnel",
    "title": "Semaine 12",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 12"
    ]
  },
  {
    "objectID": "weeks/week-10.html",
    "href": "weeks/week-10.html",
    "title": "Semaine 10",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 10"
    ]
  },
  {
    "objectID": "weeks/week-10.html#pr√©parer",
    "href": "weeks/week-10.html#pr√©parer",
    "title": "Semaine 10",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir TD 8 TD 8",
    "crumbs": [
      "Journal",
      "Semaine 10"
    ]
  },
  {
    "objectID": "weeks/week-10.html#cours-magistral-diapositives",
    "href": "weeks/week-10.html#cours-magistral-diapositives",
    "title": "Semaine 10",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nNormalisation I",
    "crumbs": [
      "Journal",
      "Semaine 10"
    ]
  },
  {
    "objectID": "weeks/week-10.html#exercices-td-9",
    "href": "weeks/week-10.html#exercices-td-9",
    "title": "Semaine 10",
    "section": "Exercices : TD 9",
    "text": "Exercices : TD 9\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 10"
    ]
  },
  {
    "objectID": "weeks/week-10.html#solutions-du-td-8-semaine-9",
    "href": "weeks/week-10.html#solutions-du-td-8-semaine-9",
    "title": "Semaine 10",
    "section": "Solutions du TD 8 (Semaine 9)",
    "text": "Solutions du TD 8 (Semaine 9)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 10"
    ]
  },
  {
    "objectID": "weeks/week-10.html#travail-personnel",
    "href": "weeks/week-10.html#travail-personnel",
    "title": "Semaine 10",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 10"
    ]
  },
  {
    "objectID": "td-listings.html",
    "href": "td-listings.html",
    "title": "Feuilles d‚Äôexercices",
    "section": "",
    "text": "Note\n\n\n\nLes feuilles d‚Äôexercice forment le mat√©riau de base des TDS et TPS. Vous √™tes invit√©s √† les lire avant la s√©ance et √† r√©fl√©chir par vous-m√™me. Ne vous pr√©cipitez pas sur les propositions de corrections qui sont disponibles sur ce site\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Titre\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitre\n\n\nDescription\n\n\n\n\n\n\nSep 20, 2024\n\n\nTD 1: Alg√®bre relationnelle\n\n\nLogistique et Alg√®bre relationnelle\n\n\n\n\nSep 27, 2024\n\n\nTD 2: SQL\n\n\nSQL Interrogation de donn√©es\n\n\n\n\nOct 4, 2024\n\n\nTD 3: SQL\n\n\nSQL Interrogation de donn√©es, requ√™tes complexes\n\n\n\n\nOct 11, 2024\n\n\nTD 4: SQL\n\n\nAggr√©gations, Partitions, Fen√™tres\n\n\n\n\nOct 18, 2024\n\n\nTD 5: SQL\n\n\nFen√™tres et fonctions SQL\n\n\n\n\nOct 25, 2024\n\n\nTD 6 : Contraintes\n\n\nD√©finition de donn√©es Contraintes\n\n\n\n\nNov 8, 2024\n\n\nTD 7 : Contraintes (suite)\n\n\nD√©finition de donn√©es et Contraintes\n\n\n\n\nNov 15, 2024\n\n\nTD 8 : Mod√©lisation\n\n\nMod√©lisation\n\n\n\n\nNov 22, 2024\n\n\nTD 9: Normalisation et d√©pendances\n\n\nD√©pendances fonctionnelles\n\n\n\n\n\nNov 29, 2024\n\n\n\nTD 10: Normalisation\n\n\n\nNormalisation, Perte de DF, Perte d'Information, FNBC, FN3\n\n\n\n\n\n\nDec 6, 2024\n\n\n\nTD 11: Normalisation et d√©pendances\n\n\n\nNormalisation et d√©pendances\n\n\n\n\n\nDec 13, 2024\n\n\nTD R√©capitulatif SQL\n\n\nTD r√©vision g√©n√©rale\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\nConseil\n\n\n\nAvant de travailler sur un exercice, assurez vous que vous ma√Ætrisez/comprenez le sch√©ma relationnel concern√©.",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "schemas-listings.html",
    "href": "schemas-listings.html",
    "title": "Schemas",
    "section": "",
    "text": "Avertissement\n\n\n\nPour √©crire des requ√™tes correctes, il est n√©ecessaire de ma√Ætriser le sch√©ma sur lequel on travaille.\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Sch√©ma\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Tags\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nSch√©ma\n\n\nTags\n\n\n\n\n\n\nSep 18, 2025\n\n\nWorld\n\n\nworld, crowfoot\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Schemas"
    ]
  },
  {
    "objectID": "project-description.html",
    "href": "project-description.html",
    "title": "Project description",
    "section": "",
    "text": "Topic ideas due Fri, Feb 18\nProposal due Fri, Mar 18\nDraft report due Fri, Apr 8\nPeer review due Fri, Apr 15\nFinal report due Mon, Apr 25\nVideo presentation + slides and final GitHub repo due Thu, Apr 28\nPresentation comments due Sat, Apr 30"
  },
  {
    "objectID": "project-description.html#timeline",
    "href": "project-description.html#timeline",
    "title": "Project description",
    "section": "",
    "text": "Topic ideas due Fri, Feb 18\nProposal due Fri, Mar 18\nDraft report due Fri, Apr 8\nPeer review due Fri, Apr 15\nFinal report due Mon, Apr 25\nVideo presentation + slides and final GitHub repo due Thu, Apr 28\nPresentation comments due Sat, Apr 30"
  },
  {
    "objectID": "project-description.html#introduction",
    "href": "project-description.html#introduction",
    "title": "Project description",
    "section": "Introduction",
    "text": "Introduction\nTL;DR: Pick a data set and do a regression analysis. That is your final project.\nThe goal of the final project is for you to use regression analysis to analyze a data set of your own choosing. The data set may already exist or you may collect your own data by scraping the web.\nChoose the data based on your group‚Äôs interests or work you all have done in other courses or research projects. The goal of this project is for you to demonstrate proficiency in the techniques we have covered in this class (and beyond, if you like!) and apply them to a data set to analyze it in a meaningful way.\nAll analyses must be done in RStudio, and all components of the project must be reproducible (with the exception of the presentation).\n\nLogistics\nYou will work on the project with your lab groups.\nThe four primary deliverables for the final project are\n\nA written, reproducible report detailing your analysis\nA GitHub repository corresponding to your report\nSlides + a video presentation\nFormal peer review on another team‚Äôs project"
  },
  {
    "objectID": "project-description.html#topic-ideas",
    "href": "project-description.html#topic-ideas",
    "title": "Project description",
    "section": "Topic ideas",
    "text": "Topic ideas\nIdentify 2-3 data sets you‚Äôre interested in potentially using for the final project. If you‚Äôre unsure where to find data, you can use the list of potential data sources in the Tips + Resources section as a starting point. It may also help to think of topics you‚Äôre interested in investigating and find data sets on those topics.\nThe purpose of submitting project ideas is to give you time to find data for the project and to make sure you have a data set that can help you be successful in the project. Therefore, you must use one of the data sets submitted as a topic idea, unless otherwise notified by the teaching team.\nThe data sets should meet the following criteria:\n\nAt least 500 observations\nAt least 10 columns\nAt least 6 of the columns must be useful and unique predictor variables.\n\nIdentifier variables such as ‚Äúname‚Äù, ‚Äúsocial security number‚Äù, etc. are not useful predictor variables.\nIf you have multiple columns with the same information (e.g.¬†‚Äústate abbreviation‚Äù and ‚Äústate name‚Äù), then they are not unique predictors.\n\nAt least one variable that can be identified as a reasonable response variable.\n\nThe response variable can be quantitative or categorical.\n\nA mix of quantitative and categorical variables that can be used as predictors.\nObservations should reasonably meet the independence condition. Therefore, avoid data with repeated measures, data collected over time, etc.\nYou may not use data that has previously been used in any course materials, or any derivation of data that has been used in course materials.\n\nPlease ask a member of the teaching team if you‚Äôre unsure whether your data set meets the criteria.\nFor each data set, include the following:\n\nIntroduction and data\n\nState the source of the data set.\nDescribe when and how it was originally collected (by the original data curator, not necessarily how you found the data)\nDescribe the observations and the general characteristics being measured in the data\n\n\n\nResearch question\n\nDescribe a research question you‚Äôre interested in answering using this data.\n\n\n\nGlimpse of data\n\nUse the glimpse function to provide an overview of each data set\n\nSubmit the PDF of the topic ideas to Gradescope. Mark all pages associated with each data set."
  },
  {
    "objectID": "project-description.html#project-proposal",
    "href": "project-description.html#project-proposal",
    "title": "Project description",
    "section": "Project proposal",
    "text": "Project proposal\nThe purpose of the project proposal is to help you think about your analysis strategy early.\nInclude the following in the proposal:\n\nSection 1 - Introduction\nThe introduction section includes\n\nan introduction to the subject matter you‚Äôre investigating\nthe motivation for your research question (citing any relevant literature)\nthe general research question you wish to explore\nyour hypotheses regarding the research question of interest.\n\n\n\nSection 2 - Data description\nIn this section, you will describe the data set you wish to explore. This includes\n\ndescription of the observations in the data set,\ndescription of how the data was originally collected (not how you found the data but how the original curator of the data collected it).\n\n\n\nSection 3 - Analysis approach\nIn this section, you will provide a brief overview of your analysis approach. This includes:\n\nDescription of the response variable.\nVisualization and summary statistics for the response variable.\nList of variables that will be considered as predictors\nRegression model technique (multiple linear regression and logistic regression)\n\n\n\nData dictionary (aka code book)\nSubmit a data dictionary for all the variables in your data set in the README of your project repo, in the data folder. Link to this file from your proposal writeup.\n\n\nSubmission\nPush all of your final changes to the GitHub repo, and submit the PDF of your proposal to Gradescope.\n\n\nProposal grading\n\n\n\nTotal\n10 pts\n\n\n\n\nIntroduction\n3 pts\n\n\nData description\n2 pts\n\n\nAnalysis plan\n4 pts\n\n\nData dictionary\n1 pts\n\n\n\nEach component will be graded as follows:\n\nMeets expectations (full credit): All required elements are completed and are accurate. The narrative is written clearly, all tables and visualizations are nicely formatted, and the work would be presentable in a professional setting.\nClose to expectations (half credit): There are some elements missing and/or inaccurate. There are some issues with formatting.\nDoes not meet expectations (no credit): Major elements missing. Work is not neatly formatted and would not be presentable in a professional setting."
  },
  {
    "objectID": "project-description.html#draft-report",
    "href": "project-description.html#draft-report",
    "title": "Project description",
    "section": "Draft report",
    "text": "Draft report\nThe purpose of the draft and peer review is to give you an opportunity to get early feedback on your analysis. Therefore, the draft and peer review will focus primarily on the exploratory data analysis, modeling, and initial interpretations.\nWrite the draft in the written-report.qmd file in your project repo. You do not need to submit the draft on Gradescope.\nBelow is a brief description of the sections to focus on in the draft:\n\nIntroduction and data\nThis section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won‚Äôt fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nMethodology\nThis section includes a brief description of your modeling process. Explain the reasoning for the type of model you‚Äôre fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, any variable transformations (if needed), and any other relevant considerations that were part of the model fitting process.\n\n\nResults\nIn this section, you will output the final model and include a brief discussion of the model assumptions, diagnostics, and any relevant model fit statistics.\nThis section also includes initial interpretations and conclusions drawn from the model."
  },
  {
    "objectID": "project-description.html#peer-review",
    "href": "project-description.html#peer-review",
    "title": "Project description",
    "section": "Peer review",
    "text": "Peer review\nCritically reviewing others‚Äô work is a crucial part of the scientific process, and STA 210 is no exception. Each lab team will be assigned two other teams‚Äôs projects to review. Each team should push their draft to their GitHub repo by the due date. One lab in the following week will be dedicated to the peer review, and all reviews will be due by the end of that lab session.\nDuring the peer review process, you will be provided read-only access to your partner teams‚Äô GitHub repos. Provide your review in the form of GitHub issues to your partner team‚Äôs GitHub repo using the issue template provided. The peer review will be graded on the extent to which it comprehensively and constructively addresses the components of the partner team‚Äôs report: the research context and motivation, exploratory data analysis, modeling, interpretations, and conclusions.\n\nPairings\n\nSection 1 - M 1:45PM - 3:00PM\n\n\n\nTeam being reviewed\nReviewer 1\nReviewer 2\n\n\n\n\nchaa_chaa_chaa\nyay_stats\nstat_over_flow\n\n\ndekk\nchaa_chaa_chaa\nyay_stats\n\n\neight\ndekk\nchaa_chaa_chaa\n\n\nhousecats\neight\ndekk\n\n\nkrafthouse\nhousecats\neight\n\n\nrrawr\nkrafthouse\nhousecats\n\n\nstat_over_flow\nrrawr\nkrafthouse\n\n\nyay_stats\nstat_over_flow\nrrawr\n\n\n\n\n\nSection 2 - M 3:30PM - 4:45PM\n\n\n\nTeam being reviewed\nReviewer 1\nReviewer 2\n\n\n\n\na_plus_plus_plus\nwe_r\ntina\n\n\npredictors\na_plus_plus_plus\nwe_r\n\n\nsixers\npredictors\na_plus_plus_plus\n\n\nsoy_nuggets\nsixers\npredictors\n\n\ntina\nsoy_nuggets\nsixers\n\n\nwe_r\ntina\nsoy_nuggets\n\n\n\n\n\nSection 3 - M 5:15PM - 6:30PM\n\n\n\n\n\n\n\n\nTeam being reviewed\nReviewer 1\nReviewer 2\n\n\n\n\ndown_to_earth_goats\nthe_three_musketeers\nteam_five\n\n\nginger_and_stats\ndown_to_earth_goats\nthe_three_musketeers\n\n\npineapple_wedge_and_diced_papaya\nginger_and_stats\ndown_to_earth_goats\n\n\nstatchelorettes\npineapple_wedge_and_diced_papaya\nginger_and_stats\n\n\nstatisix\nstatchelorettes\npineapple_wedge_and_diced_papaya\n\n\nstats_squad\nstatisix\nstatchelorettes\n\n\nteam_five\nstats_squad\nstatisix\n\n\nthe_three_musketeers\nteam_five\nstats_squad\n\n\n\n\n\n\nProcess and questions\nSpend ~30 mins to review each team‚Äôs project.\n\nFind your team name on the Reviewer 1 and Reviewer 2 columns.\nFor each of the columns, find the name of the team to review in the Team being reviewed column. You should already have access to this team‚Äôs repo.\nOpen the repo of the team you‚Äôre reviewing, read their project draft, and browser around the rest of their repo.\nThen, go to the Issues tab in that repo, click on New issue, and click on Get started for the Peer review issue. Fill out this issue, answering the following questions:\n\nPeer review by: [NAME OF TEAM DOING THE REVIEW]\nNames of team members that participated in this review: [FULL NAMES OF TEAM MEMBERS DOING THE REVIEW]\nDescribe the goal of the project.\nDescribe the data used or collected, if any. If the proposal does not include the use of a specific dataset, comment on whether the project would be strengthened by the inclusion of a dataset.\nDescribe the approaches, tools, and methods that will be used.\nIs there anything that is unclear from the proposal?\nProvide constructive feedback on how the team might be able to improve their project. Make sure your feedback includes at least one comment on the statistical modeling aspect of the project, but do feel free to comment on aspects beyond the modeling.\nWhat aspect of this project are you most interested in and would like to see highlighted in the presentation.\nProvide constructive feedback on any issues with file and/or code organization.\n(Optional) Any further comments or feedback?"
  },
  {
    "objectID": "project-description.html#written-report",
    "href": "project-description.html#written-report",
    "title": "Project description",
    "section": "Written report",
    "text": "Written report\nYour written report must be completed in the written-report.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo = FALSE.\nYou will submit the PDF of your final report on Gradescope.\nThe PDF you submit must match the files in your GitHub repository exactly. The mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long. is no minimum page requirement; however, you should comprehensively address all of the analysis and report.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit.\nThe written report is worth 40 points, broken down as follows\n\n\n\nTotal\n40 pts\n\n\n\n\nIntroduction/data\n6 pts\n\n\nMethodology\n10 pts\n\n\nResults\n14 pts\n\n\nDiscussion + conclusion\n6 pts\n\n\nOrganization + formatting\n4 pts\n\n\n\nClick here for a PDF of the written report rubric.\n\nIntroduction and data\nThis section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won‚Äôt fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\nGrading criteria\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The explanatory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\nMethodology\nThis section includes a brief description of your modeling process. Explain the reasoning for the type of model you‚Äôre fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\nGrading criteria\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to select the final model; the approach is clearly described in the report. The model selection process took into account potential interaction effects and addressed any violations in model conditions. The model conditions and diagnostics are thoroughly and accurately assessed for their model. If violations of model conditions are still present, there was a reasonable attempt to address the violations based on the course content.\n\n\n\nResults\nThis is where you will output the final model with any relevant model fit statistics.\nDescribe the key results from the model. The goal is not to interpret every single variable in the model but rather to show that you are proficient in using the model output to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\nGrading criteria\nThe model fit is clearly assessed, and interesting findings from the model are clearly described. Interpretations of model coefficients are used to support the key findings and conclusions, rather than merely listing the interpretation of every model coefficient. If the primary modeling objective is prediction, the model‚Äôs predictive power is thoroughly assessed.\n\n\n\nDiscussion + Conclusion\nIn this section you‚Äôll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\nGrading criteria\nOverall conclusions from analysis are clearly described, and the model results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\nOrganization + formatting\nThis is an assessment of the overall presentation and formatting of the written report.\n\nGrading criteria\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages."
  },
  {
    "objectID": "project-description.html#video-presentation-slides",
    "href": "project-description.html#video-presentation-slides",
    "title": "Project description",
    "section": "Video presentation + slides",
    "text": "Video presentation + slides\n\nSlides\nIn addition to the written report, your team will also create presentation slides and record a video presentation that summarize and showcase your project. Introduce your research question and data set, showcase visualizations, and discuss the primary conclusions. These slides should serve as a brief visual addition to your written report and will be graded for content and quality.\nFor submission, convert these slides to a .pdf document, and submit the PDF of the slides on Gradescope.\nThe slide deck should have no more than 6 content slides + 1 title slide. Here is a suggested outline as you think through the slides; you do not have to use this exact format for the 6 slides.\n\nTitle Slide\nSlide 1: Introduce the topic and motivation\nSlide 2: Introduce the data\nSlide 3: Highlights from EDA\nSlide 4: Final model\nSlide 5: Interesting findings from the model\nSlide 6: Conclusions + future work\n\n\n\nVideo presentation\nFor the video presentation, you can speak over your slide deck, similar to the lecture content videos. The video presentation must be no longer than 8 minutes. It is fine if the video is shorter than 8 minutes, but it cannot exceed 8 minutes. You may use can use any platform that works best for your group to record your presentation. Below are a few resources on recording videos:\n\nRecording presentations in Zoom\nApple Quicktime for screen recording\nWindows 10 built-in screen recording functionality\nKap for screen recording\n\nOnce your video is ready, upload the video to Warpwire, then embed the video in an new discussion post on Conversations.\n\nTo upload your video to Warpwire:\n\nClick the Warpwire tab in the course Sakai site.\nClick the ‚Äú+‚Äù and select ‚ÄúUpload files‚Äù.\nLocate the video on your computer and click to upload.\nOnce you‚Äôve uploaded the video to Warpwire, click to share the video and copy the video‚Äôs URL. You will need this when you post the video in the discussion forum.\n\n\n\nTo post the video to the discussion forum\n\nClick the Presentations tab in the course Sakai site.\nClick the Presentations topic.\nClick ‚ÄúStart a new conversation‚Äù.\nMake the title ‚ÄúYour Team Name: Project Title‚Äù. For example, ‚ÄúTeaching Team: Our Awesome Presentation‚Äù.\nClick the Warpwire icon (between the table and shopping cart icons).\nSelect your video, then click ‚ÄúInsert 1 item.‚Äù This will embed your video in the conversation.\nUnder the video, paste the URL to your video.\nYou‚Äôre done!"
  },
  {
    "objectID": "project-description.html#presentation-comments",
    "href": "project-description.html#presentation-comments",
    "title": "Project description",
    "section": "Presentation comments",
    "text": "Presentation comments\nEach student will be assigned 2 presentations to watch. Your viewing assignments will be posted later in the semester.\nWatch the group‚Äôs video, then click ‚ÄúReply‚Äù to post a question for the group. You may not post a question that‚Äôs already been asked on the discussion thread. Additionally, the question should be (i) substantive (i.e.¬†it shouldn‚Äôt be ‚ÄúWhy did you use a bar plot instead of a pie chart‚Äù?), (ii) demonstrate your understanding of the content from the course, and (iii) relevant to that group‚Äôs specific presentation, i.e demonstrating that you‚Äôve watched the presentation.\nThis portion of the project will be assessed individually.\n\nPairings\nFind your team name in the first column, watch videos from teams in the second column and leave comments.\n\n\n\n\n\n\n\n\nReviewer\nFirst video to review\nSecond video to review\n\n\n\n\nGinger and Stats\nEight\nWe R\n\n\nKrafthouse\nGinger and Stats\nEight\n\n\nSoy Nuggets\nKrafthouse\nGinger and Stats\n\n\nDown To Earth Goats\nSoy Nuggets\nKrafthouse\n\n\nA+++\nDown To Earth Goats\nSoy Nuggets\n\n\nTeam Five\nA+++\nDown To Earth Goats\n\n\nRrawr\nTeam Five\nA+++\n\n\nHousecats\nRrawr\nTeam Five\n\n\nDekk\nHousecats\nRrawr\n\n\nStat OverFlow\nDekk\nHousecats\n\n\nThe Three Musketeers\nStat OverFlow\nDekk\n\n\nPredictors\nThe Three Musketeers\nStat OverFlow\n\n\nStats Squad\nPredictors\nThe Three Musketeers\n\n\nStatisix\nStats Squad\nPredictors\n\n\nSixers\nStatisix\nStats Squad\n\n\nYay Stats\nSixers\nStatisix\n\n\nTINA\nYay Stats\nSixers\n\n\nStatchelorettes\nTINA\nYay Stats\n\n\nPineapple Wedge and Diced Papaya\nStatchelorettes\nTINA\n\n\nChaa Chaa Chaa\nPineapple Wedge and Diced Papaya\nStatchelorettes\n\n\nWe R\nChaa Chaa Chaa\nPineapple Wedge and Diced Papaya\n\n\nEight\nWe R\nChaa Chaa Chaa"
  },
  {
    "objectID": "project-description.html#reproducibility-organization",
    "href": "project-description.html#reproducibility-organization",
    "title": "Project description",
    "section": "Reproducibility + organization",
    "text": "Reproducibility + organization\nAll written work (with exception of presentation slides) should be reproducible, and the GitHub repo should be neatly organized.\nThe GitHub repo should have the following structure:\n\nREADME: Short project description and data dictionary\nwritten-report.qmd & written-report.pdf: Final written report\n/data: Folder that contains the data set for the final project.\n/previous-work: Folder that contains the topic-ideas and project-proposal files.\n/presentation: Folder with the presentation slides.\n\nIf your presentation slides are online, you can put a link to the slides in a README.md file in the presentation folder.\n\n\nPoints for reproducibility + organization will be based on the reproducibility of the written report and the organization of the project GitHub repo. The repo should be neatly organized as described above, there should be no extraneous files, all text in the README should be easily readable."
  },
  {
    "objectID": "project-description.html#peer-teamwork-evaluation",
    "href": "project-description.html#peer-teamwork-evaluation",
    "title": "Project description",
    "section": "Peer teamwork evaluation",
    "text": "Peer teamwork evaluation\nYou will be asked to fill out a survey where you rate the contribution and teamwork of each team member by assigning a contribution percentage for each team member. Filling out the survey is a prerequisite for getting credit on the team member evaluation. If you are suggesting that an individual did less than half the expected contribution given your team size (e.g., for a team of four students, if a student contributed less than 12.5% of the total effort), please provide some explanation. If any individual gets an average peer score indicating that this was the case, their grade will be assessed accordingly.\nIf you have concerns with the teamwork and/or contribution from any team members, please email me by the project video deadline. You only need to email me if you have concerns. Otherwise, I will assume everyone on the team equally contributed and will receive full credit for the teamwork portion of the grade."
  },
  {
    "objectID": "project-description.html#overall-grading",
    "href": "project-description.html#overall-grading",
    "title": "Project description",
    "section": "Overall grading",
    "text": "Overall grading\nThe grade breakdown is as follows:\n\n\n\nTotal\n100 pts\n\n\n\n\nTopic ideas\n5 pts\n\n\nProject proposal\n10 pts\n\n\nPeer review\n10 pts\n\n\nWritten report\n40 pts\n\n\nSlides + video presentation\n20 pts\n\n\nReproducibility + organization\n5 pts\n\n\nVideo comments\n5 pts\n\n\nPeer teamwork evaluation\n5 pts\n\n\n\nNote: No late project reports or videos are accepted.\n\nGrading summary\nGrading of the project will take into account the following:\n\nContent - What is the quality of research and/or policy question and relevancy of data to those questions?\nCorrectness - Are statistical procedures carried out and explained correctly?\nWriting and Presentation - What is the quality of the statistical presentation, writing, and explanations?\nCreativity and Critical Thought - Is the project carefully thought out? Are the limitations carefully considered? Does it appear that time and effort went into the planning and implementation of the project?\n\nA general breakdown of scoring is as follows:\n\n90%-100%: Outstanding effort. Student understands how to apply all statistical concepts, can put the results into a cogent argument, can identify weaknesses in the argument, and can clearly communicate the results to others.\n80%-89%: Good effort. Student understands most of the concepts, puts together an adequate argument, identifies some weaknesses of their argument, and communicates most results clearly to others.\n70%-79%: Passing effort. Student has misunderstanding of concepts in several areas, has some trouble putting results together in a cogent argument, and communication of results is sometimes unclear.\n60%-69%: Struggling effort. Student is making some effort, but has misunderstanding of many concepts and is unable to put together a cogent argument. Communication of results is unclear.\nBelow 60%: Student is not making a sufficient effort.\n\n\n\nLate work policy\nThere is no late work accepted on this project. Be sure to turn in your work early to avoid any technological mishaps."
  },
  {
    "objectID": "exams-listings.html",
    "href": "exams-listings.html",
    "title": "Annales",
    "section": "",
    "text": "Note\n\n\n\nLes annales recueillent les sujets de contr√¥le continu (CC) et de contr√¥le terminal (CT) des ann√©es universitaires 2022-23 et 2023-24.\nLes sujets sont partiellement corrig√©s.\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Titre\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Description\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitre\n\n\nDescription\n\n\n\n\n\n\nJun 19, 2024\n\n\nCT 2 2023-24\n\n\nRequ√™tes Aggr√©gation, Fen√™tres, nycflights\n\n\n\n\nJan 8, 2024\n\n\nCT 1 2023-24\n\n\nMod√©lisation, Normalisation, Requ√™tes Aggr√©gation, Fen√™tres, nycflights\n\n\n\n\nDec 8, 2023\n\n\nCC 3 2023-24\n\n\nMod√©lisation, Aggr√©gation, Fen√™tres, French-Towns\n\n\n\n\nNov 24, 2023\n\n\nCC 2 2023-24\n\n\nAggr√©gation, Fen√™tres, world\n\n\n\n\nOct 27, 2023\n\n\nCC 1 2023-24\n\n\nRequ√™tes, world\n\n\n\n\nNov 25, 2022\n\n\nCC 2 2022-23\n\n\nAggr√©gation, Fen√™tres, nycflights, babynames\n\n\n\n\nNov 13, 2022\n\n\nCC 3-4 2022-23\n\n\nAggr√©gation, Fen√™tres, nycflights\n\n\n\n\nNov 3, 2022\n\n\nCC 3-3 2022-23\n\n\nAggr√©gation, Fen√™tres, nycflights\n\n\n\n\nOct 21, 2022\n\n\nCC 3-2 2022-23\n\n\nAggr√©gation, Fen√™tres, babynames\n\n\n\n\nOct 14, 2022\n\n\nCC 3-1 2022-23\n\n\nAggr√©gation, Fen√™tres, world\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\nCaution\n\n\n\nLe contr√¥le continu 3 (CC3) de l‚Äôann√©e 2022-23 est form√© d‚Äôune suite de devoirs √† r√©aliser √† la maison entre deux s√©ances de TD.\nLes contr√¥les continus 1 et 2 (CC1 et CC2) de l‚Äôann√©e 2022-23 se d√©roulaient en salle de TP sur machines.\nTous les autres contr√¥les consistaient en √©preuves sur table de 1 heure, 1 heure 30 ou 2 heures.",
    "crumbs": [
      "Annales"
    ]
  },
  {
    "objectID": "corriges-tds.html",
    "href": "corriges-tds.html",
    "title": "Corrig√©s",
    "section": "",
    "text": "Note\n\n\n\n Ne vous pr√©cipitez pas sur les propositions de corrections avant d‚Äôavoir tent√© par vous-m√™me de r√©aliser les exercices.\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Titre\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Description\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitre\n\n\nDescription\n\n\n\n\n\n\nSep 20, 2024\n\n\nTD 1 2024-25\n\n\nRequ√™tes, SQL\n\n\n\n\nSep 27, 2024\n\n\nTD 2 2024-25\n\n\nRequ√™tes, SQL\n\n\n\n\nOct 4, 2024\n\n\nTD 3 2024-25\n\n\nRequ√™tes, SQL\n\n\n\n\nOct 11, 2024\n\n\nTD 4 2024-25\n\n\nRequ√™tes, Aggr√©gation, Fen√™tres\n\n\n\n\nOct 18, 2024\n\n\nTD 5 2024-25\n\n\nRequ√™tes Aggr√©gation, Fen√™tres\n\n\n\n\nOct 25, 2024\n\n\nTD 6 2024-25\n\n\nContraintes\n\n\n\n\nNov 8, 2024\n\n\nTD 7 2024-25\n\n\nContraintes\n\n\n\n\nNov 15, 2024\n\n\nTD 8 2024-25\n\n\nMod√©lisation\n\n\n\n\nNov 22, 2024\n\n\nTD 9 2024-25\n\n\nMod√©lisation\n\n\n\n\nNov 29, 2024\n\n\nTD 10 2024-25\n\n\nNormalisation\n\n\n\n\nDec 6, 2024\n\n\nTD 11 2024-25\n\n\nNormalisation\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\nNote\n\n\n\n Les corrig√©s ne sont que des propositions. Il est tr√®s possible que vous ayez en t√™te des solutions diff√©rentes des propositions et que vos propositions soient correctes.\n Pour lever les doutes, comparer les r√©sultats de vos requ√™tes et de celles propos√©es dans les solutions. Avec ... EXCEPT ... vous devriez y voir clair.",
    "crumbs": [
      "Corrections"
    ]
  },
  {
    "objectID": "computing-pipelines.html",
    "href": "computing-pipelines.html",
    "title": "Pipelines",
    "section": "",
    "text": "Interroger une base de donn√©es avec R (via ODBC)\n\n\nInterroger une base de donn√©es avec Python (via ODBC)"
  },
  {
    "objectID": "computing-cloudbeaver.html",
    "href": "computing-cloudbeaver.html",
    "title": "Client CloudBeaver",
    "section": "",
    "text": "D√©monstration\nD√©mo\n\n\nInstaller\n\n\nDocker\n\n\nConfigurer une connexion\n\nOnglet Main\n\nConnect by Host,\n\nHost: localhost,\nPort: 5434 (ou un autre nombre exotique)\nDatabase: bd_2023-24\nD√©cocher `Show all databases\n\nAuthentification: Database Native\n\nUsername: username (ENT)\nPassword: xxxxxxx (ENT)\nCocher Save password\n\n\n\nOnglet PostgreSQL\nOnglet SSH\n\nCocher Use SSH Tunnel\nSettings\n\nHost/IP: localhost\nPort 22\nUsername: username (ENT)\nPassword: xxxxxxx (ENT)\nCocher Save credentials\n\nJump servers\n\nJump #1 etu-pgsql.math.univ-paris-diderot.fr username Password\nTarget localhost:22 username Password\n\n\n\n\n\nUtiliser une connexion\n\n\nD√©finir et utiliser un projet\n\nConnections\nBookmarks\nDashboards\nDiagrams\nScripts\n\n\n\n√âditeur SQL\n\n\n\n\n\nConnexions ssh (Linux/MacOS)\nPour acc√©der au serveur Postgres (SGBD), il faut d‚Äôabord se connecter √† la machine qui h√©berge ce serveur etu-pgsql.math.univ-paris-diderot.fr.\nPour se connecter √† etu-pgsql.math.univ-paris-diderot.fr, on utilise le protocole ssh, avec son identifiant et son mot de passe ENT.\n$ ssh username@etu-pgsql.math.univ-paris-diderot.fr\n(username@etu-pgsql.math.univ-paris-diderot.fr) Password for username@etu-pgsql.math.univ-paris-diderot.fr:\nLast login: ..................\n....\n....\nThis fortune brought to you by:\n$FreeBSD$\n[username@etu-pgsql ~]$ ...\nAttention : pas d‚Äô√©cho lorsque vous saisissez votre mot de passe.\nOn peut maintenant se connecter au serveur Postgres, toujours avec son identifiant et son mot de passe ENT\nIci, nous proposons d‚Äôutiliser le client pgcli :\n[username@etu-pgsql ~]$ pgcli -d bd_2023-24 \nPassword for username: \nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nuserame@/tmp:bd_2023-24&gt; \n\n\n\n\n\n\nPourquoi pr√©ciser -d bd_2023-24 ?\n\n\n\nbd_2023-24 est un des catalogues h√©berg√©s par le serveur PostGres. bd_2023-24 contient les schemas sur lesquels nous travaillerons.\n\n\nNous sommes maintenant dans une session du serveur\nusername@/tmp:bd_2023-24&gt; \\conninfo\nYou are connected to database \"bd_2023-24\" as user \"username\" on socket \"/tmp\" at port \"None\".\nTime: 0.000s\nPour obtenir de l‚Äôaide, utiliser la commande \\d? et laissez vous guider.\nNous nous int√©resserons en g√©n√©ral √† un ensemble de tables formant un sch√©ma. Ici, nous choisissons comme sch√©ma par d√©faut world et nous affichons les tables du sch√©ma.\nusername@/tmp:bd_2023-24&gt; set search_path to world ;\nSET\nTime: 0.001s\nusername@/tmp:bd_2023-24&gt; \\dt\n+--------+-----------------+-------+-----------+\n| Schema | Name            | Type  | Owner     |\n|--------+-----------------+-------+-----------|\n| world  | city            | table | boucheron |\n| world  | country         | table | boucheron |\n| world  | countrylanguage | table | boucheron |\n+--------+-----------------+-------+-----------+\nSELECT 3\nTime: 0.011s\nusername@/tmp:bd_2023-24&gt; ...\n\n\nConnexions ssh sous windows\n\n\n\nConnexions ssh avec tunnel\n$ ssh -f username@etu-pgsql.math.univ-paris-diderot.fr -L 5436:localhost:5432 -N\n(username@etu-pgsql.math.univ-paris-diderot.fr) Password for username@etu-pgsql.math.univ-paris-diderot.fr:\n$ \n\n\n\n\n\n\nRenvoi de port -L 5436:localhost:5432\n\n\n\n\n\n\n\n\n\n\n\n\nPourquoi -N ?\n\n\n\n\n\n\nOn peut maintenant lancer un client sur sa propre machine (localhost) en pr√©cisant qu‚Äôon s‚Äôadresse au port local 5436 (ou le port que vous choisissez), la requ√™te de conexion au serveur PostGres distant sera transmise par le tunnel : elle sera envoy√©e sur le port officiel 5432 de la machine distante. Une fois la session √©tablie, tout se passsera comme pr√©c√©demment (ou presque).\n$ pgcli -d bd_2023-24 -h localhost -p 5436 -u username\nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nbd_2023-24&gt; \\dn\n+----------------+--------------+\n| Name           | Owner        |\n|----------------+--------------|\n...\n...\n\n\nClient dbeaver\nLe m√©canisme du tunnel ssh peut √™tre utilis√© pour connecter un client plus ambitieux au serveur. Le client dbeaver est particuli√®rement facile √† utiliser."
  },
  {
    "objectID": "computing-access.html",
    "href": "computing-access.html",
    "title": "Moyens de calcul",
    "section": "",
    "text": "Serveur\nLe cours et les TP\n\nServeur PostGreSQL\nMachine d√©di√©e : etu-pgsql.math.univ-paris-diderot.fr\n\n\n\nClients\nEn salle TP, vous pourrez choisir entre trois clients\n\npsql\npgcli\ndbeaver\n\npsql et pgcli sont tr√®s proches. Ce sont des applications qui fonctionnent en mode ligne de commande. pgcli est un peu plus conviviale que psql avec un syst√®me de compl√©tion plus performant. L‚Äôensemble des commandes sp√©ciales propos√©es par pgcli est un peu moins vaste que celui propos√© par psql\ndbeaver est un client graphique qui ne tombe pas dans le cliquodrome. dbeaver permet d‚Äôattaquer une grande famille de SGBDs.\nTous ces clients doivent utiliser des connexions s√©curis√©es ssh.\n\n\nConnexions ssh (Linux/MacOS)\nPour acc√©der au serveur Postgres (SGBD), il faut d‚Äôabord se connecter √† la machine qui h√©berge ce serveur etu-pgsql.math.univ-paris-diderot.fr.\nPour se connecter √† etu-pgsql.math.univ-paris-diderot.fr, on utilise le protocole ssh, avec son identifiant et son mot de passe ENT.\n$ ssh username@etu-pgsql.math.univ-paris-diderot.fr\n(username@etu-pgsql.math.univ-paris-diderot.fr) Password for username@etu-pgsql.math.univ-paris-diderot.fr:\nLast login: ..................\n....\n....\nThis fortune brought to you by:\n$FreeBSD$\n[username@etu-pgsql ~]$ ...\nAttention : pas d‚Äô√©cho lorsque vous saisissez votre mot de passe.\nOn peut maintenant se connecter au serveur Postgres, toujours avec son identifiant et son mot de passe ENT\nIci, nous proposons d‚Äôutiliser le client pgcli ex√©cut√© sur etu-pgsql.math.univ-paris-diderot.fr :\n[username@etu-pgsql ~]$ pgcli -d bd_2023-24 \nPassword for username: \nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nuserame@/tmp:bd_2023-24&gt; \n\n\n\n\n\n\nPourquoi pr√©ciser -d bd_2023-24 ?\n\n\n\nbd_2023-24 est un des catalogues h√©berg√©s par le serveur PostGres. bd_2023-24 contient les schemas sur lesquels nous travaillerons.\n\n\nNous sommes maintenant dans une session du serveur\nusername@/tmp:bd_2023-24&gt; \\conninfo\nYou are connected to database \"bd_2023-24\" as user \"username\" on socket \"/tmp\" at port \"None\".\nTime: 0.000s\nPour obtenir de l‚Äôaide, utiliser la commande \\d? et laissez vous guider.\nNous nous int√©resserons en g√©n√©ral √† un ensemble de tables formant un sch√©ma. Ici, nous choisissons comme sch√©ma par d√©faut world et nous affichons les tables du sch√©ma.\nusername@/tmp:bd_2023-24&gt; set search_path to world ;\nSET\nTime: 0.001s\nusername@/tmp:bd_2023-24&gt; \\dt\n+--------+-----------------+-------+-----------+\n| Schema | Name            | Type  | Owner     |\n|--------+-----------------+-------+-----------|\n| world  | city            | table | boucheron |\n| world  | country         | table | boucheron |\n| world  | countrylanguage | table | boucheron |\n+--------+-----------------+-------+-----------+\nSELECT 3\nTime: 0.011s\nusername@/tmp:bd_2023-24&gt; ...\n\n\n\n\n\n\nPlus pratique\n\n\n\nPour pgcli et psql, il est plus pratique d‚Äôex√©cuter psql et/ou pgcli sur votre machine et de communiquer avec le serveur Postgres via un tunnel ssh. Voir d√©tails pour pgcli et d√©tails pour psql.\n\n\n\n\nConnexions ssh sous windows\nPour acc√©der au serveur Postgres (SGBD), il faut d‚Äôabord se connecter √† la machine qui h√©berge ce serveur etu-pgsql.math.univ-paris-diderot.fr.\nPour se connecter √† etu-pgsql.math.univ-paris-diderot.fr, on utilise le protocole ssh, avec son identifiant et son mot de passe ENT.\nOn lance d‚Äôabord une fen√™tre Powershell.\n$ ssh username@etu-pgsql.math.univ-paris-diderot.fr\n(username@etu-pgsql.math.univ-paris-diderot.fr) Password for username@etu-pgsql.math.univ-paris-diderot.fr:\nLast login: ..................\n....\n....\nThis fortune brought to you by:\n$FreeBSD$\n[username@etu-pgsql ~]$ ...\n Attention : pas d‚Äô√©cho lorsque vous saisissez votre mot de passe.\nOn peut maintenant se connecter au serveur Postgres, toujours avec son identifiant et son mot de passe ENT\nIci, nous proposons d‚Äôutiliser le client pgcli :\n[username@etu-pgsql ~]$ pgcli -d bd_2023-24 \nPassword for username: \nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nuserame@/tmp:bd_2023-24&gt; \n\n\n\n\n\n\nPourquoi pr√©ciser -d bd_2023-24 ?\n\n\n\nbd_2023-24 est un des catalogues h√©berg√©s par le serveur PostGres. bd_2023-24 contient les schemas sur lesquels nous travaillerons.\n\n\nNous sommes maintenant dans une session du serveur\nusername@/tmp:bd_2023-24&gt; \\conninfo\nYou are connected to database \"bd_2023-24\" as user \"username\" on socket \"/tmp\" at port \"None\".\nTime: 0.000s\nPour obtenir de l‚Äôaide, utiliser la commande \\d? et laissez vous guider.\nNous nous int√©resserons en g√©n√©ral √† un ensemble de tables formant un sch√©ma. Ici, nous choisissons comme sch√©ma par d√©faut world et nous affichons les tables du sch√©ma.\nusername@/tmp:bd_2023-24&gt; set search_path to world ;\nSET\nTime: 0.001s\nusername@/tmp:bd_2023-24&gt; \\dt\n+--------+-----------------+-------+-----------+\n| Schema | Name            | Type  | Owner     |\n|--------+-----------------+-------+-----------|\n| world  | city            | table | boucheron |\n| world  | country         | table | boucheron |\n| world  | countrylanguage | table | boucheron |\n+--------+-----------------+-------+-----------+\nSELECT 3\nTime: 0.011s\nusername@/tmp:bd_2023-24&gt; ...\n\n\nConnexions ssh avec tunnel\nVous avez pu constater que les connexions ssh sous MacOS, Linux et Windows sont presque identiques.\nMais utiliser une connexion ssh et un client base de donn√©es qui s‚Äôex√©cute sur etu-pgsql.math.univ-paris-diderot.fr n‚Äôest pas la mani√®re la plus confortable de travailler.\nIl est plus agr√©able d‚Äôutiliser un client base de donn√©es qui s‚Äôex√©cute sur sa propre machine et qui interagit avec le serveur PostGres au travers d‚Äôun tunnel ssh.\n$ ssh -f username@etu-pgsql.math.univ-paris-diderot.fr -L 5436:localhost:5432 -N\n(username@etu-pgsql.math.univ-paris-diderot.fr) Password for username@etu-pgsql.math.univ-paris-diderot.fr:\n$ \n\n\n\n\n\n\nRenvoi de port -L 5436:localhost:5432\n\n\n\nUn serveur PostGres √©coute (attend) d‚Äô√©ventuels clients sur le port officiel 5432. Le serveur que nous utiliserons attend effectivement ses clients sur le port 5432 de la machine qui l‚Äôh√©berge. Notre client local ne va pas s‚Äôadresser directement au port 5432 de etu-pgsql.math.univ-paris-diderot.fr (c‚Äôest interdit). Notre client local s‚Äôadressera au port 5436 de la machine qui h√©berge le client et qui est lui-m√™me renvoy√© via le tunnel ssh vers le port 5432 de la machine qui h√©berge le serveur.\n\n\n\n\n\n\n\n\nPourquoi -N ?\n\n\n\n\n\n\nOn peut maintenant lancer un client sur sa propre machine (localhost) en pr√©cisant qu‚Äôon s‚Äôadresse au port local 5436 (ou le port que vous choisissez), la requ√™te de conexion au serveur PostGres distant sera transmise par le tunnel : elle sera envoy√©e sur le port officiel 5432 de la machine distante. Une fois la session √©tablie, tout se passsera comme pr√©c√©demment (ou presque).\n$ pgcli -d bd_2023-24 -h localhost -p 5436 -u username\nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nbd_2023-24&gt; \\dn\n+----------------+--------------+\n| Name           | Owner        |\n|----------------+--------------|\n...\n...\n\n\nClient dbeaver\nLe m√©canisme du tunnel ssh peut √™tre utilis√© pour connecter un client plus ambitieux au serveur. Le client dbeaver est particuli√®rement facile √† utiliser.\n\n\nClient VS Code + extensions SQLTools\nSi vous √™tes d√©j√† habitu√© √† l‚Äô√©diteur Visual Studio Code (VS Code), vous pouvez utiliser l‚Äôextension SQLToos et son pilote ‚ÄòPostgreSQL/Cockroach‚Äô.\nVotre configuration de connexion devrait ressembler √† :\n{\n  \"label\": \"etu-pgsql\",\n  \"host\": \"localhost\",\n  \"user\": \"&lt;identifiant ENT&gt;\",\n  \"port\": 5436,\n  \"ssl\": false,\n  \"database\": \"bd_2023-24\",\n  \"schema\": \"world\",\n  \"password\": \"Ask on connect\"\n}\nIl faut par ailleurs ouvrir un tunnel SSH dans un terminal\n$ ssh -f username@etu-pgsql.math.univ-paris-diderot.fr -L 5436:localhost:5432 -N\n(username@etu-pgsql.math.univ-paris-diderot.fr) Password for username@etu-pgsql.math.univ-paris-diderot.fr:\n$ \nen rempla√ßant username par votre identifiant ENT.",
    "crumbs": [
      "Support",
      "Acc√®s Informatique"
    ]
  },
  {
    "objectID": "computing-pgcli.html",
    "href": "computing-pgcli.html",
    "title": "Client pgcli",
    "section": "",
    "text": "Note\n\n\n\nQuelques possibilit√©s si vous disposez d‚Äôune machine sur laquelle on peut installer pgcli et sur laquelle on peut √©tablir des tunnels ssh\n\n\n\nInstaller\n√Ä partir de pgcli.com\n\n\nUtiliser\n\n\n\n\n\n\n√âtablissement d‚Äôun tunel SSH sur votre machine (ici sous Linux)\n\n\n\nRemplacer id_ent par votre identifiant ENT dans la suite.\nSaisissez votre mot de passe (attention : pas d‚Äô√©cho)\n$ ssh -f id_ent@etu-pgsql.math.univ-paris-diderot.fr -L 5436:localhost:5432 -N\n(id_ent@etu-pgsql.math.univ-paris-diderot.fr) Password for id_ent@etu-pgsql.math.univ-paris-diderot.fr:\n$\n\n\n\n\n\n\n\n\nConnexion au serveur PostGres, demander la liste des commandes disponibles\n\n\n\nUtilisez votre tunnel SSH pour acc√©der au serveur PostGres. Saisissez √† nouveau votre mot de passe.\n$ pgcli -p 5436 -U id_ent -W -h localhost -d bd_2023-24\nPassword for id_ent: \nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nbd_2023-24&gt; \\?  \nVous √™tes maintenant dans une session sur le serveur PostGres. Vous √™tes connect√© au catalogue bd_2023-24\nVous pouvez utiliser une grande partie des commandes magiques de psql\n\n\n\n\n\n\n\n\nChoisir un sch√©ma par d√©faut (ici world)\n\n\n\nbd_2023-24&gt; SET search_path TO world ;\nSET\nTime: 0.002s\n\n\n\n\n\n\n\n\nLister les tables du sch√©ma par d√©faut\n\n\n\nbd_2023-24&gt; \\d\n+--------+-----------------+-------+-----------+\n| Schema | Name            | Type  | Owner     |\n|--------+-----------------+-------+-----------|\n| world  | city            | table | boucheron |\n| world  | country         | table | boucheron |\n| world  | countrylanguage | table | boucheron |\n+--------+-----------------+-------+-----------+\nSELECT 3\nTime: 0.013s\n\n\n\n\n\n\n\n\nSch√©ma d‚Äôune table\n\n\n\nbd_2023-24&gt; \\d city\n \n+-------------+--------------+-----------+\n| Column      | Type         | Modifiers |\n|-------------+--------------+-----------|\n| id          | integer      |  not null |\n| name        | text         |  not null |\n| countrycode | character(3) |  not null |\n| district    | text         |  not null |\n| population  | integer      |  not null |\n+-------------+--------------+-----------+\nIndexes:\n    \"city_pkey\" PRIMARY KEY, btree (id)\nForeign-key constraints:\n    \"city_country_fk\" FOREIGN KEY (countrycode) REFERENCES country(countrycode) ON UPDATE CASCADE ON DELETE SET NULL DEFE&gt;\nReferenced by:\n    TABLE \"country\" CONSTRAINT \"country_capital_fkey\" FOREIGN KEY (capital) REFERENCES city(id)\n\nTime: 0.025s\n\n\n\n\n\n\n\n\nInformations de connexion\n\n\n\nbd_2023-24&gt; \\conninfo\nYou are connected to database \"bd_2023-24\" as user \"id_end\" on host \"localhost\" at port \"5436\".\nTime: 0.000s\n\n\n\n\n\n\n\n\nEditer, sauvegarder et ex√©cuter des requ√™tes\n\n\n\nbd_2023-24&gt; \\e \n\nSelect an editor.  To change later, run 'select-editor'.\n  1. /bin/nano        &lt;---- easiest\n  2. /usr/bin/vim.basic\n  3. /usr/bin/nvim\n  4. /usr/bin/vim.tiny\n  5. /usr/bin/emacs\n  6. /usr/bin/code\n  7. /bin/ed\nChoose 1-7 [1]: 6\nSous mon √©diteur pr√©f√©r√© (vs code ici), j‚Äôedite une requ√™te\nSELECT *\nFROM world.city ci\nWHERE ci.countrycode='FRA' ;\nsauvegard√©e dans un fichier de chemin d‚Äôacc√®s /tmp/editor-w6qw9gs0.sql\nDans ma session sur bd_2023-24, je peux maintenant inclure et ex√©cuter cette requ√™te.\nbd_2023-24&gt; \\i /tmp/editor-w6qw9gs0.sql\n+------+----------------------+-------------+----------------------+------------+\n| id   | name                 | countrycode | district             | population |\n|------+----------------------+-------------+----------------------+------------|\n| 2974 | Paris                | FRA         | √éle-de-France        | 2125246    |\n| 2975 | Marseille            | FRA         | Provence-Alpes-C√¥te  | 798430     |\n| 2976 | Lyon                 | FRA         | Rh√¥ne-Alpes          | 445452     |\n| 2977 | Toulouse             | FRA         | Midi-Pyr√©n√©es        | 390350     |\n| 2978 | Nice                 | FRA         | Provence-Alpes-C√¥te  | 342738     |\n...\n\n\n\n\n\n\n\n\nJetez un oeil sur les named queries\n\n\n\nDocumentation\n\n\n\n\nRenseignements utiles\nDocumentation pgcli",
    "crumbs": [
      "Support",
      "Client pgcli"
    ]
  },
  {
    "objectID": "computing-psql.html",
    "href": "computing-psql.html",
    "title": "Client psql",
    "section": "",
    "text": "Note\n\n\n\nQuelques possibilit√©s si vous disposez d‚Äôune machine sur laquelle on peut installer psql et sur laquelle on peut √©tablir des tunnels ssh\n\n\n\nInstaller\n\nG√©n√©ra\nWindows\nMacOS\nUbuntu\n\nDocumentation\n\n\nUtiliser\n\n\n\n\n\n\n√âtablissement d‚Äôun tunel SSH sur votre machine (ici sous Linux)\n\n\n\nRemplacer id_ent par votre identifiant ENT dans la suite.\nSaisissez votre mot de passe (attention : pas d‚Äô√©cho)\n$ ssh -f id_ent@etu-pgsql.math.univ-paris-diderot.fr -L 5436:localhost:5432 -N\n(id_ent@etu-pgsql.math.univ-paris-diderot.fr) Password for id_ent@etu-pgsql.math.univ-paris-diderot.fr:\n$\n\n\n\n\n\n\n\n\nConnexion au serveur PostGres, demander la liste des commandes disponibles\n\n\n\nUtilisez votre tunnel SSH pour acc√©der au serveur PostGres. Saisissez √† nouveau votre mot de passe.\n$ psql -p 5436 -U id_ent -W -h localhost -d bd_2023-24\nPassword for id_ent: \nServer: PostgreSQL 13.8\nVersion: 3.5.0\nHome: http://pgcli.com\nbd_2023-24=# \\?  \nVous √™tes maintenant dans une session sur le serveur PostGres. Vous √™tes connect√© au catalogue bd_2023-24\nVous pouvez utiliser une grande partie des commandes magiques de psql\n\n\n\n\n\n\n\n\nChoisir un sch√©ma par d√©faut (ici world)\n\n\n\nbd_2023-24=# SET search_path TO world ;\nSET\n\n\n\n\n\n\n\n\nLister les tables du sch√©ma par d√©faut\n\n\n\nbd_2023-24=# \\d\n+--------+-----------------+-------+-----------+\n| Schema | Name            | Type  | Owner     |\n|--------+-----------------+-------+-----------|\n| world  | city            | table | boucheron |\n| world  | country         | table | boucheron |\n| world  | countrylanguage | table | boucheron |\n+--------+-----------------+-------+-----------+\n(3 rows)\n\n\n\n\n\n\n\n\nSch√©ma d‚Äôune table\n\n\n\nbd_2023-24=# \\d city\n \n+-------------+--------------+-----------+\n| Column      | Type         | Modifiers |\n|-------------+--------------+-----------|\n| id          | integer      |  not null |\n| name        | text         |  not null |\n| countrycode | character(3) |  not null |\n| district    | text         |  not null |\n| population  | integer      |  not null |\n+-------------+--------------+-----------+\nIndexes:\n    \"city_pkey\" PRIMARY KEY, btree (id)\nForeign-key constraints:\n    \"city_country_fk\" FOREIGN KEY (countrycode) REFERENCES country(countrycode) ON UPDATE CASCADE ON DELETE SET NULL DEFE&gt;\nReferenced by:\n    TABLE \"country\" CONSTRAINT \"country_capital_fkey\" FOREIGN KEY (capital) REFERENCES city(id)\n\n\n\n\n\n\n\n\nInformations de connexion\n\n\n\nbd_2023-24=# \\conninfo\nYou are connected to database \"bd_2023-24\" as user \"id_end\" on host \"localhost\"  (address \"127.0.0.1\") at port \"5436\".\n\n\n\n\n\n\n\n\nEditer, sauvegarder et ex√©cuter des requ√™tes\n\n\n\nbd_2023-24=# \\e \n\nSelect an editor.  To change later, run 'select-editor'.\n  1. /bin/nano        &lt;---- easiest\n  2. /usr/bin/vim.basic\n  3. /usr/bin/nvim\n  4. /usr/bin/vim.tiny\n  5. /usr/bin/emacs\n  6. /usr/bin/code\n  7. /bin/ed\nChoose 1-7 [1]: 6\nSous mon √©diteur pr√©f√©r√© (vs code ici), j‚Äôedite une requ√™te\nSELECT ci.name, co.name_country\nFROM \n  world.city ci JOIN \n  world.country co ON (\n    ci.countrycode=co.countrycode AND \n    ci.id = co.capital\n  ) \nORDER BY co.name_country;\nsauvegard√©e dans un fichier de chemin d‚Äôacc√®s /tmp/psql.edit.23866.sql (construit automatiquement)\nDans ma session sur bd_2023-24, je peux maintenant inclure et ex√©cuter cette requ√™te.\nbd_2023-24=# \\i /tmp/psql.edit.23866.sql\n               name                |             name_country              \n-----------------------------------+---------------------------------------\n Kabul                             | Afghanistan\n Tirana                            | Albania\n Alger                             | Algeria\n Fagatogo                          | American Samoa\n Andorra la Vella                  | Andorra\n Luanda                            | Angola\n:\n...\nEntrez q pour sortir du pager\n\n\n\n\n\n\n\n\nUn fichier par TP ?\n\n\n\nIl est commode d‚Äôarchiver le travail d‚Äôune s√©ance de TP dans un fichier *.sql. On peut cr√©er les fichiers avant la session ou en cours de session (ici dans un dialecte d‚ÄôUnix)\nbd_2023-24=# \\! touch tp-x.sql\nbd_2023-24=# -- editer tp-x.sql\nbd_2023-24=# \\e tp-x.sql \nbd_2023-24=# -- charger/ex√©cuter tp-x.sql\nbd_2023-24=# \\i tp-x.sql\n\n\n\n\nRenseignements utiles\nDocumentation psql)",
    "crumbs": [
      "Support",
      "Client psql"
    ]
  },
  {
    "objectID": "cours-equipe.html",
    "href": "cours-equipe.html",
    "title": "√âquipe enseignante",
    "section": "",
    "text": "S. Boucheron Professeur de Math√©matiques √† l‚ÄôUniversit√© Paris Cit√©/Laboratoire de Probabilit√©s, Statistiques et Mod√©lisatiion LPSM.",
    "crumbs": [
      "Informations g√©n√©rales",
      "√âquipe"
    ]
  },
  {
    "objectID": "cours-equipe.html#cours",
    "href": "cours-equipe.html#cours",
    "title": "√âquipe enseignante",
    "section": "",
    "text": "S. Boucheron Professeur de Math√©matiques √† l‚ÄôUniversit√© Paris Cit√©/Laboratoire de Probabilit√©s, Statistiques et Mod√©lisatiion LPSM.",
    "crumbs": [
      "Informations g√©n√©rales",
      "√âquipe"
    ]
  },
  {
    "objectID": "cours-equipe.html#travaux-dirig√©s",
    "href": "cours-equipe.html#travaux-dirig√©s",
    "title": "√âquipe enseignante",
    "section": " Travaux dirig√©s",
    "text": "Travaux dirig√©s\n\n\n\nNom\nHoraire\nSalle\n\n\n\n\nSt√©phane Boucheron\nVendredi 15h45 - 18h15\n2004/5 Sophie Germain\n\n\nCristina Sirangelo\nVendredi 15h45 - 18h15\n2006 Sophie Germain\n\n\nAmine Souiri\nJeudi 13h30 - 16h00\n2006 Sophie Germain\n\n\nSylvain Schmitz\n\n\n\n\nAm√©lie Gheerbrant\n\n\n\n\nAnatole Dahan",
    "crumbs": [
      "Informations g√©n√©rales",
      "√âquipe"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MA15Y030: Introduction aux Bases de Donn√©es",
    "section": "",
    "text": "moodle\n  \n  \n    \n     Github\n  \n\n  \n  \n\n\nLe cours MA15Y030: Introduction aux Bases de Donn√©es\nde la Licence MIASHS (L3) de l‚ÄôUniversit√© Paris Cit√© est une initiation √† l‚Äôusage des donn√©es tabulaires. Ce cours est con√ßu pour des √©tudiantes int√©ress√©es par l‚Äôanalyse de donn√©es au sens large. Cela va de l‚Äôalimentation, la maintenance de bases de donn√©es tabulaires √† la statistique descriptive classique, √† l‚Äôapprentissage machine et √† la statistique pr√©dictive.\n\n\n\nAu travers de ce cours, vous allez\n\nApprendre √† interroger une base de donn√©es relationnelle\nApprendre √† lire un sch√©ma de base de donn√©es\nApprendre √† concevoir une base de donn√©es\nApprendre √† am√©liorer une base de donn√©es\n\n\n\n\nLe cours s‚Äôappuiera sur un serveur PostGres\n\n\n\n\nVous trouverez sur ce site information et mat√©riel\n\nUn syllabus\nL‚Äô√©quipe enseignante\nLes clients utilisables\nLes diapositives du cours magistral\nLes feuilles d‚Äôexercices\nLes corrig√©s\nLes annales d‚Äôexamen",
    "crumbs": [
      "Informations g√©n√©rales",
      "Aper√ßu"
    ]
  },
  {
    "objectID": "project-tips-resources.html",
    "href": "project-tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "R Data Sources for Regression Analysis\nFiveThirtyEight data\nTidyTuesday\n\n\n\n\n\nWorld Health Organization\nThe National Bureau of Economic Research\nInternational Monetary Fund\nGeneral Social Survey\nUnited Nations Data\nUnited Nations Statistics Division\nU.K. Data\nU.S. Data\nU.S. Census Data\nEuropean Statistics\nStatistics Canada\nPew Research\nUNICEF\nCDC\nWorld Bank\nElection Studies"
  },
  {
    "objectID": "project-tips-resources.html#data-sources",
    "href": "project-tips-resources.html#data-sources",
    "title": "Project tips + resources",
    "section": "",
    "text": "R Data Sources for Regression Analysis\nFiveThirtyEight data\nTidyTuesday\n\n\n\n\n\nWorld Health Organization\nThe National Bureau of Economic Research\nInternational Monetary Fund\nGeneral Social Survey\nUnited Nations Data\nUnited Nations Statistics Division\nU.K. Data\nU.S. Data\nU.S. Census Data\nEuropean Statistics\nStatistics Canada\nPew Research\nUNICEF\nCDC\nWorld Bank\nElection Studies"
  },
  {
    "objectID": "project-tips-resources.html#tips",
    "href": "project-tips-resources.html#tips",
    "title": "Project tips + resources",
    "section": "Tips",
    "text": "Tips\n\nAsk questions if any of the expectations are unclear.\nCode: In your write up your code should be hidden (echo = FALSE) so that your document is neat and easy to read. However your document should include all your code such that if I re-knit your qmd file I should be able to obtain the results you presented.\n\nException: If you want to highlight something specific about a piece of code, you‚Äôre welcome to show that portion.\n\nMerge conflicts will happen, issues will arise, and that‚Äôs fine! Commit and push often, and ask questions when stuck.\nMake sure each team member is contributing, both in terms of quality and quantity of contribution (we will be reviewing commits from different team members).\nAll team members are expected to contribute equally to the completion of this assignment and group assessments will be given at its completion - anyone judged to not have sufficient contributed to the final product will have their grade penalized. While different teams members may have different backgrounds and abilities, it is the responsibility of every team member to understand how and why all code and approaches in the assignment works."
  },
  {
    "objectID": "project-tips-resources.html#formatting-communication-tips",
    "href": "project-tips-resources.html#formatting-communication-tips",
    "title": "Project tips + resources",
    "section": "Formatting + communication tips",
    "text": "Formatting + communication tips\n\nSuppress Code, Warnings, & Messages\n\nInclude the following code in a code chunk at the top of your .qmd file to suppress all code, warnings, and other messages. Use the code chunk header {r set-up, include = FALSE} to suppress this set up code.\n\n\n\nHeaders\n\nUse headers to clearly label each section.\nInspect the document outline to review your headers and sub-headers.\n\n\n\nReferences\n\nInclude all references in a section called ‚ÄúReferences‚Äù at the end of the report.\nThis course does not have specific requirements for formatting citations and references.\n\n\n\nAppendix\n\nIf you have additional work that does not fit or does not belong in the body of the report, you may put it at the end of the document in section called ‚ÄúAppendix‚Äù.\nThe items in the appendix should be properly labeled.\nThe appendix should only be for additional material. The reader should be able to fully understand your report without viewing content in the appendix.\n\n\n\nResize figures\nResize plots and figures, so you have more space for the narrative.\n\n\nArranging plots\nArrange plots in a grid, instead of one after the other. This is especially useful when displaying plots for exploratory data analysis and to check assumptions.\nIf you‚Äôre using ggplot2 functions, the patchwork package makes it easy to arrange plots in a grid. See the documentation and examples here.\n\n\nDo a little more to make the plot look professional!\n\nInformative title and axis labels\nFlipped coordinates to make names readable\nArranged bars based on count\nCapitalized manufacturer names\nOptional: Added color - Use a coordinated color scheme throughout paper / presentation\nOptional: Applied a theme - Use same theme throughout paper / presentation\n\n\n\nTables and model output\n\nUse the kable function from the knitr package to neatly output all tables and model output. This will also ensure all model coefficients are displayed.\n\nUse the digits argument to display only 3 or 4 significant digits.\nUse the caption argument to add captions to your table.\n\n\n\n\nGuidelines for communicating results"
  },
  {
    "objectID": "project-tips-resources.html#additional-resources",
    "href": "project-tips-resources.html#additional-resources",
    "title": "Project tips + resources",
    "section": "Additional resources",
    "text": "Additional resources\n\nR for Data Science\nQuarto Documentation"
  },
  {
    "objectID": "slides-listings.html",
    "href": "slides-listings.html",
    "title": "Diapositives",
    "section": "",
    "text": "Les diapositives fournissent le canevas du cours. Vous pouvez les utiliser pour vous familiariser avec le mat√©riel du prochain cours, pour revoir les cours pass√©s et, pour r√©viser.\nLes diapositives marqu√©es par l‚Äôimage  renvoient √† des d√©veloppements effectu√©s en classes.\n\n\n\n\n\n\n\n\n\nMode d‚Äôemploi\n\n\n\nLes diapositives utilisent la biblioth√®que revealjs de . Elles s‚Äôaffichent dans votre navigateur. Vous pouvez acc√©der au mode d‚Äôemploi en tappant \n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Titre\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitre\n\n\nDescription\n\n\n\n\n\n\nSep 13, 2024\n\n\nBD I: Introduction aux SGBD\n\n\nBases de Donn√©es Licences MIASHS et Math√©matiques\n\n\n\n\nSep 13, 2024\n\n\nBD I: Alg√®bre Relationnelle\n\n\nCadre formel pour la manipulation de tables\n\n\n\n\nSep 20, 2024\n\n\nBD II: SQL I\n\n\nLangage Manipulation de Donn√©es 1\n\n\n\n\nSep 20, 2024\n\n\nBD II: SQL II\n\n\nLangage Manipulation de Donn√©es 2 : requ√™tes imbriqu√©es\n\n\n\n\nSep 27, 2024\n\n\nBD IV: SQL III\n\n\nLangage Manipulation de Donn√©es 3 : Aggr√©gation/Fen√™tres/Partitions\n\n\n\n\nOct 4, 2024\n\n\nBD II: SQL LDD\n\n\nD√©finition de donn√©es\n\n\n\n\nOct 11, 2024\n\n\nBD : Contraintes\n\n\nD√©finition de donn√©es: Contraintes\n\n\n\n\nOct 18, 2024\n\n\nFonctions SQL et Vues\n\n\nFonctions SQL. Vues\n\n\n\n\nOct 25, 2024\n\n\nBD VII: Corriger le sch√©ma World\n\n\nD√©finition de donn√©es: Contraintes/Ing√©nieurie\n\n\n\n\nNov 15, 2024\n\n\nMod√©lisation I : Entit√©/Association\n\n\nMod√©lisation Entit√©/Association (ER)\n\n\n\n\nNov 15, 2024\n\n\nMod√©lisation II :\n\n\nTraduction des mod√®les ER: Pattes de corbeaux, Relationnel\n\n\n\n\nNov 22, 2024\n\n\nNormalisation I\n\n\nD√©pendances Fonctionnelles. D√©composition FNBC\n\n\n\n\nNov 29, 2024\n\n\nNormalisation II : D√©composition FN3\n\n\nPertes de D√©pendances Fonctionnelles. D√©composition FN3\n\n\n\n\nJan 31, 2025\n\n\nBD : Fonctions et extension PlpgSQL de SQL\n\n\n¬†\n\n\n\n\nMar 29, 2025\n\n\nBD : Transactions\n\n\n¬†\n\n\n\n\nMar 31, 2025\n\n\nBD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle\n\n\nBases de Donn√©es Licences MIASHS et Math√©matiques\n\n\n\n\n¬†\n\n\nBD V: Administration\n\n\n¬†\n\n\n\n\n¬†\n\n\nBD VII: Administration et Droits\n\n\n¬†\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Diapositives"
    ]
  },
  {
    "objectID": "weeks/week-1.html",
    "href": "weeks/week-1.html",
    "title": "Semaine 1",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi 2 Olympe de Gouges\nVendredi 13 septembre 2024 de 14h √† 15h30\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 1"
    ]
  },
  {
    "objectID": "weeks/week-1.html#cours-magistral-diapositives",
    "href": "weeks/week-1.html#cours-magistral-diapositives",
    "title": "Semaine 1",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nIntroduction aux Bases de Donn√©es\nIntroduction √† l‚Äôalg√®bre relationnelle\n Nous sommes all√©s jusqu`√† la s√©lection",
    "crumbs": [
      "Journal",
      "Semaine 1"
    ]
  },
  {
    "objectID": "weeks/week-1.html#exercices-td-1",
    "href": "weeks/week-1.html#exercices-td-1",
    "title": "Semaine 1",
    "section": "Exercices : TD 1",
    "text": "Exercices : TD 1\nVous pouvez commencer √† aborder les questions de la premi√®re feuille de TD\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 1"
    ]
  },
  {
    "objectID": "weeks/week-1.html#logistique",
    "href": "weeks/week-1.html#logistique",
    "title": "Semaine 1",
    "section": "Logistique",
    "text": "Logistique\n Pensez √† activer votre compte ENT (suivre les instructions sur Moodle). Vous en aurez besoin pour acc√©der au serveur PostGres utilis√© en TP/TD √† partir du 20 octobre.\nIl faut r√©aliser cette activation le plus t√¥t possible, id√©alement avant le 17 septembre.\nSi vous le pouvez, installez sur votre machine un des clients d√©crits sur cette page.\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 1"
    ]
  },
  {
    "objectID": "weeks/week-11.html",
    "href": "weeks/week-11.html",
    "title": "Semaine 11",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 11"
    ]
  },
  {
    "objectID": "weeks/week-11.html#pr√©parer",
    "href": "weeks/week-11.html#pr√©parer",
    "title": "Semaine 11",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir TD 9 TD 9",
    "crumbs": [
      "Journal",
      "Semaine 11"
    ]
  },
  {
    "objectID": "weeks/week-11.html#cours-magistral-diapositives",
    "href": "weeks/week-11.html#cours-magistral-diapositives",
    "title": "Semaine 11",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nNormalisation II",
    "crumbs": [
      "Journal",
      "Semaine 11"
    ]
  },
  {
    "objectID": "weeks/week-11.html#exercices-td-10",
    "href": "weeks/week-11.html#exercices-td-10",
    "title": "Semaine 11",
    "section": "Exercices : TD 10",
    "text": "Exercices : TD 10\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 11"
    ]
  },
  {
    "objectID": "weeks/week-11.html#solutions-du-td-9-semaine-10",
    "href": "weeks/week-11.html#solutions-du-td-9-semaine-10",
    "title": "Semaine 11",
    "section": "Solutions du TD 9 (Semaine 10)",
    "text": "Solutions du TD 9 (Semaine 10)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 11"
    ]
  },
  {
    "objectID": "weeks/week-11.html#travail-personnel",
    "href": "weeks/week-11.html#travail-personnel",
    "title": "Semaine 11",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 11"
    ]
  },
  {
    "objectID": "weeks/week-13.html",
    "href": "weeks/week-13.html",
    "title": "Semaine 13",
    "section": "",
    "text": "Important\n\n\n\n\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-16h45\n Emploi du temps\n   Contr√¥le continu III 17h-18h15 Salle √† d√©terminer",
    "crumbs": [
      "Journal",
      "Semaine 13"
    ]
  },
  {
    "objectID": "weeks/week-13.html#pr√©parer",
    "href": "weeks/week-13.html#pr√©parer",
    "title": "Semaine 13",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir TD 11 TD 11",
    "crumbs": [
      "Journal",
      "Semaine 13"
    ]
  },
  {
    "objectID": "weeks/week-13.html#exercices-td-12",
    "href": "weeks/week-13.html#exercices-td-12",
    "title": "Semaine 13",
    "section": "Exercices : TD 12",
    "text": "Exercices : TD 12\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 13"
    ]
  },
  {
    "objectID": "weeks/week-13.html#solutions-du-td-11-semaine-12",
    "href": "weeks/week-13.html#solutions-du-td-11-semaine-12",
    "title": "Semaine 13",
    "section": "Solutions du TD 11 (Semaine 12)",
    "text": "Solutions du TD 11 (Semaine 12)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 13"
    ]
  },
  {
    "objectID": "weeks/week-13.html#travail-personnel",
    "href": "weeks/week-13.html#travail-personnel",
    "title": "Semaine 13",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 13"
    ]
  },
  {
    "objectID": "weeks/week-3.html",
    "href": "weeks/week-3.html",
    "title": "Semaine 3",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges Vendredi 14h-15h30\nTD/TP Ing√©maths/METIS salle 2006 Etage 2 Sophie Germain Jeudi 13h30-16h00\nTD/TP MIASHS salles 2004-2005-2006 √âtage 2 Sophie Germain Vendredi 15h45-18h15\n Emploi du temps MIASHS\n Emploi du temps Ing√©maths/METIS",
    "crumbs": [
      "Journal",
      "Semaine 3"
    ]
  },
  {
    "objectID": "weeks/week-3.html#pr√©parer",
    "href": "weeks/week-3.html#pr√©parer",
    "title": "Semaine 3",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir requ√™tes du TD 1 TD 1",
    "crumbs": [
      "Journal",
      "Semaine 3"
    ]
  },
  {
    "objectID": "weeks/week-3.html#cours-magistral-diapositives",
    "href": "weeks/week-3.html#cours-magistral-diapositives",
    "title": "Semaine 3",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nIntroduction √† l‚Äôalg√®bre relationnelle\nSQL requ√™tes √©l√©mentaires\nSQL requ√™tes imbriqu√©s",
    "crumbs": [
      "Journal",
      "Semaine 3"
    ]
  },
  {
    "objectID": "weeks/week-3.html#exercices-td-2",
    "href": "weeks/week-3.html#exercices-td-2",
    "title": "Semaine 3",
    "section": "Exercices : TD 2",
    "text": "Exercices : TD 2\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 3"
    ]
  },
  {
    "objectID": "weeks/week-3.html#solutions-du-td-1-semaine-2",
    "href": "weeks/week-3.html#solutions-du-td-1-semaine-2",
    "title": "Semaine 3",
    "section": "Solutions du TD 1 (Semaine 2)",
    "text": "Solutions du TD 1 (Semaine 2)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 3"
    ]
  },
  {
    "objectID": "weeks/week-3.html#travail-personnel",
    "href": "weeks/week-3.html#travail-personnel",
    "title": "Semaine 3",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 3"
    ]
  },
  {
    "objectID": "weeks/week-5.html",
    "href": "weeks/week-5.html",
    "title": "Semaine 5",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps",
    "crumbs": [
      "Journal",
      "Semaine 5"
    ]
  },
  {
    "objectID": "weeks/week-5.html#pr√©parer",
    "href": "weeks/week-5.html#pr√©parer",
    "title": "Semaine 5",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir requ√™tes du TD 4 TD 4",
    "crumbs": [
      "Journal",
      "Semaine 5"
    ]
  },
  {
    "objectID": "weeks/week-5.html#cours-magistral-diapositives",
    "href": "weeks/week-5.html#cours-magistral-diapositives",
    "title": "Semaine 5",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nSQL D√©finition de donn√©es\nMod√©lisation des contraintes\nSQL Fonctions SQL et requ√™tes pr√©par√©es",
    "crumbs": [
      "Journal",
      "Semaine 5"
    ]
  },
  {
    "objectID": "weeks/week-5.html#exercices-td-4",
    "href": "weeks/week-5.html#exercices-td-4",
    "title": "Semaine 5",
    "section": "Exercices : TD 4",
    "text": "Exercices : TD 4\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 5"
    ]
  },
  {
    "objectID": "weeks/week-5.html#solutions-du-td-3-semaine-4",
    "href": "weeks/week-5.html#solutions-du-td-3-semaine-4",
    "title": "Semaine 5",
    "section": "Solutions du TD 3 (Semaine 4)",
    "text": "Solutions du TD 3 (Semaine 4)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 5"
    ]
  },
  {
    "objectID": "weeks/week-5.html#travail-personnel",
    "href": "weeks/week-5.html#travail-personnel",
    "title": "Semaine 5",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 5"
    ]
  },
  {
    "objectID": "weeks/week-7.html",
    "href": "weeks/week-7.html",
    "title": "Semaine 7",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-16h45\n Emploi du temps\n Contr√¥le continu I 17h-18h15 Salle √† d√©terminer",
    "crumbs": [
      "Journal",
      "Semaine 7"
    ]
  },
  {
    "objectID": "weeks/week-7.html#pr√©parer",
    "href": "weeks/week-7.html#pr√©parer",
    "title": "Semaine 7",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir requ√™tes du TD 6 TD 6",
    "crumbs": [
      "Journal",
      "Semaine 7"
    ]
  },
  {
    "objectID": "weeks/week-7.html#cours-magistral-diapositives",
    "href": "weeks/week-7.html#cours-magistral-diapositives",
    "title": "Semaine 7",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nD√©finition de donn√©es\nContraintes I\nContraintes II",
    "crumbs": [
      "Journal",
      "Semaine 7"
    ]
  },
  {
    "objectID": "weeks/week-7.html#exercices-td-6",
    "href": "weeks/week-7.html#exercices-td-6",
    "title": "Semaine 7",
    "section": "Exercices : TD 6",
    "text": "Exercices : TD 6\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 7"
    ]
  },
  {
    "objectID": "weeks/week-7.html#solutions-du-td-5-semaine-6",
    "href": "weeks/week-7.html#solutions-du-td-5-semaine-6",
    "title": "Semaine 7",
    "section": "Solutions du TD 5 (Semaine 6)",
    "text": "Solutions du TD 5 (Semaine 6)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 7"
    ]
  },
  {
    "objectID": "weeks/week-7.html#travail-personnel",
    "href": "weeks/week-7.html#travail-personnel",
    "title": "Semaine 7",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 7"
    ]
  },
  {
    "objectID": "weeks/week-9.html",
    "href": "weeks/week-9.html",
    "title": "Semaine 9",
    "section": "",
    "text": "Important\n\n\n\n\nCours magistral en Amphi. 1 Olympe de Gouges 14h-15h30\nTD/TP 2004-2005-2006 √âtage 2 Sophie Germain 15h45-18h15\n Emploi du temps\n  Contr√¥le continu II 17h-18h15 Salle √† d√©terminer",
    "crumbs": [
      "Journal",
      "Semaine 9"
    ]
  },
  {
    "objectID": "weeks/week-9.html#pr√©parer",
    "href": "weeks/week-9.html#pr√©parer",
    "title": "Semaine 9",
    "section": "Pr√©parer",
    "text": "Pr√©parer\nFinir TD 7 TD 7",
    "crumbs": [
      "Journal",
      "Semaine 9"
    ]
  },
  {
    "objectID": "weeks/week-9.html#cours-magistral-diapositives",
    "href": "weeks/week-9.html#cours-magistral-diapositives",
    "title": "Semaine 9",
    "section": "Cours magistral : diapositives",
    "text": "Cours magistral : diapositives\nMod√©lisation I\nMod√©lisation II",
    "crumbs": [
      "Journal",
      "Semaine 9"
    ]
  },
  {
    "objectID": "weeks/week-9.html#exercices-td-8",
    "href": "weeks/week-9.html#exercices-td-8",
    "title": "Semaine 9",
    "section": "Exercices : TD 8",
    "text": "Exercices : TD 8\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 9"
    ]
  },
  {
    "objectID": "weeks/week-9.html#solutions-du-td-7-semaine-8",
    "href": "weeks/week-9.html#solutions-du-td-7-semaine-8",
    "title": "Semaine 9",
    "section": "Solutions du TD 7 (Semaine 8)",
    "text": "Solutions du TD 7 (Semaine 8)\nhtml pdf",
    "crumbs": [
      "Journal",
      "Semaine 9"
    ]
  },
  {
    "objectID": "weeks/week-9.html#travail-personnel",
    "href": "weeks/week-9.html#travail-personnel",
    "title": "Semaine 9",
    "section": "Travail personnel",
    "text": "Travail personnel\nCC 1 2023-24\n\n\nretour √† Agenda ‚èé",
    "crumbs": [
      "Journal",
      "Semaine 9"
    ]
  },
  {
    "objectID": "workshops/td3.html",
    "href": "workshops/td3.html",
    "title": "TD 3: SQL",
    "section": "",
    "text": "Objectifs de la s√©ance:\nEn plus du sch√©ma world, nous allons utiliser le sch√©ma pagila qui contient des informations utilis√©es par un magasin de location de DVD.\nLe sch√©ma est visible sur ici.\nSous psql ou pgli, vous pouvez aussi inspecter les tables comme d‚Äôhabitude avec"
  },
  {
    "objectID": "workshops/td3.html#requ√™tes-imbriqu√©es",
    "href": "workshops/td3.html#requ√™tes-imbriqu√©es",
    "title": "TD 3: SQL",
    "section": "Requ√™tes imbriqu√©es",
    "text": "Requ√™tes imbriqu√©es\nLes requ√™tes imbriqu√©es permettent d‚Äôutiliser le r√©sultat d‚Äôune requ√™te dans la clause WHERE.\nOn utilisera essentiellement les op√©rateurs suivants: IN, EXISTS, ALL, ANY.\nIN permet de tester la pr√©sence d‚Äôune valeur dans le r√©sultat d‚Äôune requ√™te.\nEXISTS renvoie True si la requ√™te donn√©e est non-vide et False sinon. On peut les combiner avec NOT pour inverser leur comportement: NOT IN et NOT EXISTS. Par exemple, pour conna√Ætre les r√©gions sans monarchie, on pourra √©crire:\nSELECT DISTINCT region \nFROM world.country\nWHERE region NOT IN (\n  SELECT region\n  FROM world.country\n  WHERE governmentform like '%Monarchy%'\n);\nPour conna√Ætre les r√©gions qui ont au moins une langue officielle, on pourra √©crire:\nSELECT DISTINCT region \nFROM world.country AS co\nWHERE EXISTS (\n  SELECT *\n  FROM world.countrylanguage AS cl\n  WHERE co.countrycode = cl.countrycode AND \n    cl.isofficial\n);\nRemarquez que dans ce dernier exemple, la sous-requ√™te fait intervenir des attributs de la requ√™te principale, c‚Äôest pourquoi on parle de requ√™tes imbriqu√©es.\nANY et ALL sont deux autres op√©rateurs. Par exemple\nSELECT * \nFROM table \nWHERE col &lt; ALL(\n  requete\n)\ns√©lectionnera les lignes de table telles que la valeur de col est plus petite que toutes les valeurs retourn√©es par la requ√™te requete. Ainsi, la requ√™te\nSELECT * \nFROM world.country\nWHERE population_country &gt;= ALL(\n  SELECT population_country \n  FROM world.country\n);\nretournera la liste des pays les plus peupl√©s.\nSELECT * \nFROM table \nWHERE col &lt; ANY(\n  requete\n)\ns√©lectionnera les lignes de table telles que la valeur de col est strictement plus petite qu‚Äôau moins une des valeurs retourn√©es par la requ√™te requete.\nPour conna√Ætre les r√©gions o√π l‚Äôon ne trouve qu‚Äôune seule forme de gouvernement, on pourra √©crire:\nSELECT DISTINCT region \nFROM world.country as c1\nWHERE c1.governmentform = ALL(\n  SELECT c2.governmentform \n  FROM world.country as c2\n  WHERE c2.countrycode!=c1.countrycode AND \n    c2.region=c1.region\n);\n\n\n\n\n\n\nOn remarque que dans EXISTS ou IN on peut utiliser des attributs de notre requ√™te globale, ce qui les rend plus puissants que\nWITH ... AS (\n  ...\n)"
  },
  {
    "objectID": "workshops/td3.html#jointure-externe",
    "href": "workshops/td3.html#jointure-externe",
    "title": "TD 3: SQL",
    "section": "Jointure externe",
    "text": "Jointure externe\nLa jointure externe est une jointure un peu particuli√®re. On a vu la semaine derni√®re que lorsqu‚Äôon faisait une jointure, les lignes de la table de droit √©taient recoll√©es aux lignes de la table de gauche. Si une ligne a gauche ne pouvaient pas √™tre recoll√©e, elle disparaissait de la jointure. La jointure ext√©rieure permet de garder ces lignes-l√† malgr√© tout.\nOn utilisera LEFT JOIN et RIGHT JOIN. Par exemple, la requ√™te suivante renvoie la liste des pays et leur langages. Les pays qui ne se trouvent pas dans la table countrylanguage (il y en a, l‚ÄôAntarctique par exemple) seront list√©s quand m√™me et les informations manquantes seront remplies avec des valeurs NULL.\nSELECT * \nFROM world.country AS p LEFT JOIN \n  world.countrylanguage AS l ON \n  p.countrycode = l.countrycode;\nOn peut utiliser cette requ√™te pour trouver les pays qui n‚Äôont pas de langue officielle par exemple:\nSELECT * \nFROM world.country as p LEFT JOIN \n  world.countrylanguage AS l ON \n  p.countrycode = l.countrycode AND l.isofficial\nWHERE l.countrycode IS NULL;"
  },
  {
    "objectID": "workshops/td3.html#requ√™tes",
    "href": "workshops/td3.html#requ√™tes",
    "title": "TD 3: SQL",
    "section": "Requ√™tes",
    "text": "Requ√™tes\nQuels sont les langues qui ne sont officielles dans aucun pays ? (355 lignes)\n√âcrivez une version avec EXCEPT, une avec NOT IN et une autre avec LEFT JOIN.\nQuelles sont les r√©gions o√π au moins deux pays ont la m√™me forme de gouvernement ? (21 lignes)\nQuels sont les films qui n‚Äôont jamais √©t√© lou√©s ? (42 lignes)\n\n\n\n\n\n\nEn calcul relationnel\n\\[\\begin{align*}\n\\Big\\{ f.\\texttt{title} : & \\texttt{film}(f) \\wedge \\\\\n& \\neg \\big( \\exists t, t_1  \\quad \\texttt{inventory}(t)  \\wedge  \\exists t_1  \\quad \\texttt{rental}(t_1)  \\wedge\\\\\n&\\phantom{\\neg\\big(} f.\\texttt{film\\_id}=t.\\texttt{film\\_id}\\wedge t.\\texttt{inventory\\_id}=t_1.\\texttt{inventory\\_id}\\big)\\Big\\}\n\\end{align*}\\]\n\n\n\nCette question est exactement du m√™me type que la pr√©c√©dente. On y r√©pond de la m√™me mani√®re : pour trouver 1 les objets d‚Äôun certain type qui ne poss√®dent pas une propri√©t√©, on cherche dans la base tous les objets de ce type et on fait la diff√©rence avec l‚Äôensemble des objets de ce type qui poss√®dent la propri√©t√© dans la base.\nQuels sont les acteurs qui ont jou√© dans toutes les cat√©gories de film ? (11 lignes)\n\n\n\n\n\n\nCette requ√™te r√©alise une op√©ration sophistiqu√©e de l‚Äôalg√®bre relationnelle la division ou \\(\\div\\). Il ne s‚Äôagit pas d‚Äôune op√©ration primitive comme \\(\\sigma,\\pi, \\times\\).\n\\[\\pi_{\\texttt{actor\\_id},\\texttt{category\\_id}} \\left(\\texttt{film\\_actor} \\bowtie \\texttt{film\\_category}\\right)  \\div \\pi_{\\texttt{category}} (\\texttt{film\\_category})\\]\n\n\n\nExiste-t-il des acteurs qui ne jouent avec aucun autre acteur ? (3 lignes ????)\nNom, pr√©nom des clients install√©s dans des villes sans magasin ? (599 lignes)\nLister les pays pour lesquels toutes les villes ont au moins un magasin. (1 ligne)\nD√©terminer la liste des films disponibles dans toutes les langues.\nUn m√™me dvd (inventory_id) peut bien s√ªr √™tre lou√© plusieurs fois, mais pas simultan√©ment. Proposer une requ√™te qui v√©rifie que les dates de location d‚Äôun dvd donn√© sont compatibles."
  },
  {
    "objectID": "workshops/td3.html#vues",
    "href": "workshops/td3.html#vues",
    "title": "TD 3: SQL",
    "section": "Vues",
    "text": "Vues\nLes vues permettent de donner un nom √† une requ√™te afin de pouvoir l‚Äôappeler plus tard sans la r√©√©crire √† chaque fois. Une vue s‚Äôenregistre dans un sch√©ma. Par exemple, dans le sch√©ma World, on pourrait cr√©er une vue VillesRepublic qui contient toutes les villes de la table city qui sont dans une r√©publique.\nOn cr√©e une vue avec CREATE VIEW nom AS requete. √âtant donn√© que vous ne pouvez √©crire que dans votre sch√©ma personnel, il faudra nommer vos vues entid.nom o√π entid est votre identifiant ENT. Ainsi\nCREATE VIEW entid.VillesRepublic AS\n  SELECT B.* \n  FROM world.country as A NATURAL JOIN world.city as B\n  WHERE A.governmentform like '%Republic%';\ncr√©e une vue dans votre sch√©ma personnel. D√©sormais, si on veut s√©lectionner les villes qui sont dans une r√©publique et dont la population est sup√©rieure √† \\(1000000\\), on pourra simplement √©crire :\nSELECT * \nFROM entid.VillesRepublic \nWHERE population_city&gt;=1000000;\n\n\n\n\n\n\nRemarquez la diff√©rence entre WITH et une vue. WITH nomme une requ√™te temporairement, seulement √† l‚Äô√©chelle de la requ√™te courante tandis qu‚Äôune vue est enregistr√©e de fa√ßon permanente. Cependant, chaque fois que vous appelez votre vue, elle est r√©√©valu√©e par le syst√®me de base de donn√©es.\n\n\n\nNotez aussi que SQL n‚Äôest pas sensible √† la casse. La vue entid.VillesRepublic peut √™tre aussi d√©sign√©e par entid.villesrepublic.\nPour supprimer une vue existante on utilise la commande DROP VIEW suivie du nom de la vue √† supprimer. Par exemple l‚Äôinstruction\nDROP VIEW entid.VillesRepublic ;\nsupprime la vue cr√©√©e pr√©c√©demment.\nDans votre sch√©ma personnel (qui porte le nom de votre identifiant ENT), √©crire une vue film_id_horror qui renvoie la liste des films de cat√©gorie ‚ÄòHorror‚Äô."
  },
  {
    "objectID": "workshops/td3.html#fonctions-sql",
    "href": "workshops/td3.html#fonctions-sql",
    "title": "TD 3: SQL",
    "section": "Fonctions SQL",
    "text": "Fonctions SQL\nDans votre sch√©ma personnel (qui porte le nom de votre identifiant ENT), √©crire une fonction SQL film_id_cat qui prend en param√®tre une cha√Æne de caract√®re s et renvoie la liste des films de cat√©gorie s. On rappelle la syntaxe :\nCREATE OR REPLACE FUNCTION entid.film_id_cat(s TEXT)\nRETURNS TABLE(film_id INTEGER)\nLANGUAGE 'sql' AS\n$$\nrequete\n$$\net l‚Äôusage\nCREATE OR REPLACE FUNCTION entid.film_id_cat(s text)\n RETURNS TABLE(film_id smallint) LANGUAGE sql\nAS $$\nSELECT film_id FROM film_category NATURAL JOIN category\nWHERE category.name=s ;\n$$ ;\nUtilisez votre fonction pour √©crire les requ√™tes suivantes:\nQuels sont les acteurs qui ont d√©j√† jou√© dans un film d‚Äôhorreur (cat√©gorie ‚ÄòHorror‚Äô) ?\nQuels sont les acteurs qui n‚Äôont jamais jou√© dans une com√©die (Comedy) ? (53 lignes)\n\n\n\n\n\n\nAttention ! Cette requ√™te ne r√©pond pas √† la question :\n\n\n\nSELECT DISTINCT ac.*\nFROM pagila.actor ac NATURAL JOIN\n     (SELECT * FROM pagila.film_actor\n      WHERE film_id NOT IN\n        (SELECT * FROM pagila.film_id_cat('Comedy') )\n      ) as X;\nElle r√©pond √† la question : Quels sont les acteurs qui ont jou√© dans un film qui n‚Äôest pas une com√©die ?\n\n\n\n\n\n\n\n\nEn calcul relationnel, en consid√©rant film_id_cat('Comedy') comme une relation (ce qui est coh√©rent avec la d√©finition de la fonction) cette requ√™te s‚Äôexprime\n\\[\\begin{align*}\n  \\left\\{ a.\\texttt{last\\_name,}  \\right. & a.\\texttt{first\\_name}\n  :\n  \\texttt{actor}(a) \\wedge \\\\\n  & \\neg\n  \\left(\\exists \\mathrm{fa}\\quad \\texttt{film\\_actor}(\\mathrm{fa}) \\right.  \\wedge  \\mathrm{fa}.\\texttt{actor\\_id}=a.\\texttt{actor\\_id}  \\\\\n& \\left. \\left.   \\wedge \\texttt{film\\_id\\_cat}(\\mathrm{'Comedy'})(\\mathrm{fa}.\\texttt{film\\_id}) \\right) \\right\\}\n\\end{align*}\\]\nLe calcul relationnel traduit presque litt√©ralement la d√©marche que nous suivons lorsqu‚Äôil faut construire le r√©sultat √† la main : pour trouver les actor_id des acteurs qui n‚Äôont jamais jou√© dans une com√©die, nous examinons toutes les valeurs \\(a\\) de actor_id pr√©sentes dans la table actor (ou film_actor), et pour chacune de ces valeurs, nous verifions qu‚Äôil n‚Äôexiste pas de tuple de la table film_actor o√π l‚Äôattribut actor_id soit √©gal √† \\(a\\) et o√π l‚Äôattribut film_id d√©signe un film qui appara√Æt dans le r√©sultat de film_id_cat('Comedy').\nNous d√©crivons/explicitons ainsi les propri√©t√©s du r√©sultat de la requ√™te Quels sont les acteurs qui n‚Äôont jamais jou√© dans une com√©die (‚ÄòComedy‚Äô) ?.\nSi maintenant nous cherchons √† 1 ce r√©sultat, nous pouvons d‚Äôabord calculer la liste des actor_id des acteurs qui ont jou√© dans une com√©die, calculer la liste de tous les actor_id connus dans le schema et faire la diff√©rence, en alg√®bre relationnelle, cela se r√©sume √†\n\\[\\pi_{\\texttt{actor\\_id}}\\left(\\texttt{film\\_actor}\\right) \\setminus \\pi_{\\texttt{actor\\_id}} \\left( \\texttt{film\\_actor} \\bowtie\\texttt{film\\_id\\_cat}(\\texttt{'Comedy'}) \\right)\\]\n\n\n\nQuels sont les acteurs qui ont jou√© dans un film d‚Äôhorreur (‚ÄòHorror‚Äô) et dans un film pour enfant (‚ÄòChildren‚Äô)? (130 lignes)\n\n\n\n\n\n\nIci l‚Äôerreur la plus fr√©quente consiste √† √©crire\nSELECT actor_id \nFROM pagila.film_actor AS fa\nWHERE fa.film_id IN (\n  SELECT * \n  FROM entid.film_id_cat('Children')\n) AND fa.film_id IN (\n  SELECT * \n  FROM entid.film_id_cat('Horror')\n);\nLe r√©sultat est vide et la requ√™te ne correspond pas √† la question pos√©e. Elle calcule les actor_id des acteurs qui ont dans au moins un film qui rel√®ve simultan√©ment des cat√©gories Horror et Children (ce genre de film est assez rare).\nPour calculer un r√©sultat correct, il faut pour chaque valeur \\(a\\) de actor_id rechercher deux tuples (pas n√©cessairement distincts) de film_actor o√π l‚Äôattribut actor_id vaut \\(a\\) et ou dans un cas film_id d√©signe un film pour enfants et dans l‚Äôautre un film d‚Äôhorreur. En calcul relationnel, cela donne\n\\[\\begin{align*}\n  \\left\\{ a.\\texttt{last\\_name,}  \\right. & a.\\texttt{first\\_name}\n  :\n  \\texttt{actor}(a) \\wedge \\\\\n  &\n  \\left(\\exists \\mathrm{fa}\\quad \\texttt{film\\_actor}(\\mathrm{fa}) \\right.  \\wedge  \\mathrm{fa}.\\texttt{actor\\_id}=a.\\texttt{actor\\_id}  \\\\\n& \\left.   \\wedge \\texttt{film\\_id\\_cat}(\\mathrm{'Children'})(\\mathrm{fa}.\\texttt{film\\_id}) \\right) \\\\\n&  \\left(\\exists \\mathrm{fa}\\quad \\texttt{film\\_actor}(\\mathrm{fa}) \\right.  \\wedge  \\mathrm{fa}.\\texttt{actor\\_id}=a.\\texttt{actor\\_id}  \\\\\n& \\left. \\left.   \\wedge \\texttt{film\\_id\\_cat}(\\mathrm{'Horror'})(\\mathrm{fa}.\\texttt{film\\_id}) \\right)\\right\\}\n\\end{align*}\\]\nEn alg√®bre relationnelle\n\\[\\begin{align*}\n\\pi_{\\texttt{last\\_name,}\\texttt{first\\_name}} \\bigg( &  \\texttt{actor} \\bowtie  \\\\\n     & \\Big(\\pi_{\\texttt{actor\\_id}} \\left( \\texttt{film\\_actor} \\bowtie\n                                 \\texttt{film\\_id\\_cat}(\\texttt{'Children'}) \\right) \\bigcap\\\\\n     & \\; \\pi_{\\texttt{actor\\_id}} \\left( \\texttt{film\\_actor} \\bowtie\n                                 \\texttt{film\\_id\\_cat}(\\texttt{'Horror'}) \\right) \\Big)\n                                 \\bigg)\n\\end{align*}\\]"
  },
  {
    "objectID": "computing-dbeaver.html",
    "href": "computing-dbeaver.html",
    "title": "Client dbeaver",
    "section": "",
    "text": "√Ä partir de Dbeaver community edition",
    "crumbs": [
      "Support",
      "Client dbeaver"
    ]
  },
  {
    "objectID": "computing-dbeaver.html#connections",
    "href": "computing-dbeaver.html#connections",
    "title": "Client dbeaver",
    "section": "Connections",
    "text": "Connections\nVous devrez cr√©er une connection avec le serveur au sein de votre projet. Vous pouvez en cr√©er d‚Äôautres avec d‚Äôautres serveurs, possiblement un serveur PostGres h√©berg√© sur votre propre machine.",
    "crumbs": [
      "Support",
      "Client dbeaver"
    ]
  },
  {
    "objectID": "computing-dbeaver.html#bookmarkssignets",
    "href": "computing-dbeaver.html#bookmarkssignets",
    "title": "Client dbeaver",
    "section": "Bookmarks/Signets",
    "text": "Bookmarks/Signets\nDocumentation sur les signets\n\n\n\n\n\n\nTip\n\n\n\nVous pouvez cr√©er des signets pour retrouver facilement les sch√©mas sur lesquels vous travaillez, ou avez travaill√©.",
    "crumbs": [
      "Support",
      "Client dbeaver"
    ]
  },
  {
    "objectID": "computing-dbeaver.html#diagrammes-er",
    "href": "computing-dbeaver.html#diagrammes-er",
    "title": "Client dbeaver",
    "section": "Diagrammes ER",
    "text": "Diagrammes ER\ndbeaver permet de faire un peu de r√©tro-ing√©nieurie et de visualiser (partiellement) un sch√©ma. Outil utile quand on veut retoucher un sch√©ma ou simplement le comprendre.",
    "crumbs": [
      "Support",
      "Client dbeaver"
    ]
  },
  {
    "objectID": "computing-dbeaver.html#scripts",
    "href": "computing-dbeaver.html#scripts",
    "title": "Client dbeaver",
    "section": "Scripts",
    "text": "Scripts\n\nUn script pour chaque s√©ance de TD/TP\nNommer le script de fa√ßon utile (avec rename)\nCommenter le script\nS√©parer les requ√™tes par des lignes blanches et une ligne de commentaire blanche --\nUtiliser le reformattage pour rendre votre code plus lisible",
    "crumbs": [
      "Support",
      "Client dbeaver"
    ]
  },
  {
    "objectID": "workshops/td-recap-sql.html#sch√©ma-world",
    "href": "workshops/td-recap-sql.html#sch√©ma-world",
    "title": "TD R√©capitulatif SQL",
    "section": "Sch√©ma world",
    "text": "Sch√©ma world\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est le pays qui a le plus de villes recens√©es dans la table world.city? Combien de villes ? (363 villes)\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les pays qui ont \\(3\\) ou plus langues officielles ? (8 lignes)\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les pays dont plus de \\(1.000.000\\) d‚Äôhabitants parlent une langue non officielle ? (72 lignes)\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuelles sont les langues qui sont officielles dans tous les continents o√π au moins une langue est parl√©e ? (1 ligne)\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les pays pour lesquels une langue non officielle est parl√©e par strictement plus de monde (dans le pays) qu‚Äôil n‚Äôy a d‚Äôhabitants dans la capitale ? (118 lignes)\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels est le nombre de villes par region ?"
  },
  {
    "objectID": "workshops/td-recap-sql.html#sch√©ma-pagila",
    "href": "workshops/td-recap-sql.html#sch√©ma-pagila",
    "title": "TD R√©capitulatif SQL",
    "section": "Sch√©ma pagila",
    "text": "Sch√©ma pagila\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est l‚Äôacteur (actor_id) pr√©sent sur le plus de DVD (inventory_id) ?\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est le prix moyen d‚Äôune location de DVD ?\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est le DVD qui a rapport√© le plus d‚Äôargent ? Le film (film_id)?\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les employ√©s (staff_id) qui travaillent dans une autre ville que celle dans laquelle ils vivent ? (4 lignes)"
  },
  {
    "objectID": "workshops/td11.html",
    "href": "workshops/td11.html",
    "title": "TD 11: Normalisation et d√©pendances",
    "section": "",
    "text": "L3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle\n\n\n\n\n\n\n\n\nExercice\nSoit le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H‚ÄÉ \nF ‚Üí CD‚ÄÉ \nD ‚Üí G\n\nAppliquer l‚Äôalgorithme de d√©composition vu en cours pour obtenir une d√©composition de \\(\\mathcal{A}\\) qui respecte la FNBC et est sans perte d‚Äôinformation. D√©terminer quelles DF sont pr√©serv√©es.\nPeut-on, en ajoutant un sous-sch√©ma √† la d√©composition, obtenir une d√©composition FNBC sans perte d‚Äôinformation et sans perte de DF ?\n\n\n\nExercice\nReprendre les questions de l‚Äôexercice pr√©c√©dent pour le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H\nF ‚Üí CD\nD ‚Üí G\nA‚Üí E"
  },
  {
    "objectID": "workshops/td4.html",
    "href": "workshops/td4.html",
    "title": "TD 4: SQL",
    "section": "",
    "text": "Documentation Postgres\nDocumentation Postgres en Fran√ßais"
  },
  {
    "objectID": "workshops/td4.html#count",
    "href": "workshops/td4.html#count",
    "title": "TD 4: SQL",
    "section": "Count",
    "text": "Count\nPour compter les pays en Europe, on √©crira :\nSELECT COUNT(countrycode)\nFROM world.country\nWHERE continent='Europe';\nCette requ√™te renvoie une table ayant une ligne et une colonne contenant le nombre de lignes dans le r√©sultat de la requ√™te."
  },
  {
    "objectID": "workshops/td4.html#sum-max-min-avg",
    "href": "workshops/td4.html#sum-max-min-avg",
    "title": "TD 4: SQL",
    "section": "Sum, Max, Min, Avg",
    "text": "Sum, Max, Min, Avg\nUne autre fonction importante est la fonction SUM(col) qui effectue la somme des valeurs (num√©riques) d‚Äôune colonne :\nSELECT SUM(population_country)\nFROM world.country;\nrenvoie la population mondiale.\nOn peut de m√™me utiliser GROUP BY pour faire des paquets :\nSELECT continent, SUM(population_country)\nFROM world.country\nGROUP BY continent;\nrenvoie la population de chaque continent.\nOn peut m√™me faire des op√©rations sur la colonne √† l‚Äôint√©rieur de SUM. Par exemple: SUM(percentage/100).\n\n√âcrire une requ√™te qui renvoie le nombre de langues officielles par pays"
  },
  {
    "objectID": "workshops/td6.html#contraintes-check.",
    "href": "workshops/td6.html#contraintes-check.",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes CHECK.",
    "text": "Contraintes CHECK.\nCette contrainte permet de v√©rifier que les colonnes d‚Äôune ligne donn√©e v√©rifient une certaine condition. Par exemple, on pourrait vouloir v√©rifier que la valeur de la colonne percentage de la table countrylanguage est inf√©rieure √† 100 ou que la valeur de la colonne return_date de la table rental est soit NULL ou sup√©rieure √† rental_date. Ces contraintes se d√©finissent lors de la cr√©ation de la table. Par exemple :\nCREATE TABLE solde(\n    produit TEXT,\n    reduc_pourcentage INT,\n    CHECK (reduc_pourcentage&lt;=100 AND reduc_pourcentage%10=0)\n);\nOn peut ajouter une contrainte CHECK √† une table qui existe d√©j√†. Par exemple :\nALTER TABLE solde ADD \n    CHECK (reduc_pourcentage &gt;=0);\nou bien en nommant la contrainte :\nALTER TABLE solde \n    ADD CONSTRAINT reduc_positive \n    CHECK (reduc_pourcentage &gt;=0);"
  },
  {
    "objectID": "workshops/td6.html#contraintes-default-not-null-unique",
    "href": "workshops/td6.html#contraintes-default-not-null-unique",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes DEFAULT / NOT NULL / UNIQUE",
    "text": "Contraintes DEFAULT / NOT NULL / UNIQUE\nCes contraintes s‚Äôappliquent √† une colonne en particulier. La contrainte DEFAULT sp√©cifie une valeur par d√©faut pour remplir une colonne lorsque sa valeur n‚Äôest pas sp√©cifi√©e, NOT NULL que la valeur de la colonne ne peut pas √™tre NULL et UNIQUE que deux lignes diff√©rentes de la table ne peuvent pas avoir la m√™me valeur sur les colonnes indiqu√©es. Par exemple:\nCREATE TABLE membre(\n    nom VARCHAR(50) NOT NULL,\n    prenom VARCHAR(50) NOT NULL,\n    date_inscription DATE DEFAULT NOW(),\n    UNIQUE(nom, prenom)  \n);"
  },
  {
    "objectID": "workshops/td6.html#contraintes-primaryforeign-key.",
    "href": "workshops/td6.html#contraintes-primaryforeign-key.",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes PRIMARY/FOREIGN KEY.",
    "text": "Contraintes PRIMARY/FOREIGN KEY.\nFormellement, la contrainte PRIMARY KEY est √©quivalente √† UNIQUE et NOT NULL. C‚Äôest un moyen d‚Äôidentifier de fa√ßon unique chaque ligne. Chaque table est cens√©e avoir une cl√© primaire. La contrainte FOREIGN KEY sp√©cifie que la valeur d‚Äôune (ou de plusieurs) colonne contient des valeurs pr√©sentes dans une autre table. Par exemple, la colonne capital de country contient une valeur qui doit appara√Ætre dans la colonne id de city. Par exemple:\nCREATE TABLE membre(\n    nom VARCHAR(50) NOT NULL, \n    prenom VARCHAR(50) NOT NULL, \n    id INT, \nPRIMARY KEY (id)\n);\n\nCREATE TABLE amis(\n    id1 INT, \n    id2 INT,\n  FOREIGN KEY (id1) REFERENCES membre (id)\n);\nOn peut aussi ajouter une seconde clef √©trang√®re comme ceci :\nALTER TABLE amis ADD \n    FOREIGN KEY (id2) REFERENCES membre;"
  },
  {
    "objectID": "workshops/td6.html#contraintes-exclude.",
    "href": "workshops/td6.html#contraintes-exclude.",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes EXCLUDE.",
    "text": "Contraintes EXCLUDE.\nLes contraintes NOT NULL, DEFAULT, KEY, CHECK portent uniquement sur une ligne tandis que la contrainte UNIQUE permet uniquement de tester des √©galit√©s entre lignes. On veut parfois v√©rifier une condition plus riche sur deux lignes. Par exemple, si notre table contient des r√©servations d‚Äôune salle entre start_date et end_date, on ne veut pas que deux r√©servations se chevauchent. On √©crira:\nCREATE TABLE reservation(\n    start_date DATE, \n    end_date DATE,\n\n    EXCLUDE USING gist (\n        daterange(start_date, end_date) WITH &&)\n);"
  },
  {
    "objectID": "workshops/td9.html",
    "href": "workshops/td9.html",
    "title": "TD 9: Normalisation et d√©pendances",
    "section": "",
    "text": "L3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle\n\n\n\n\n\n\n\n\nD√©finitions\nUne d√©pendance fonctionnelle est une expression de la forme \\[A_1,A_2,\\ldots,A_k \\rightarrow A_{k+1},\\ldots,A_n\\] o√π \\(A_1,A_2,\\ldots,A_k, A_{k+1},\\ldots,A_n\\) sont des attributs (colonnes) d‚Äôune base de donn√©es.\nElle signifie que deux tuples ayant la m√™me valeur sur \\(A_1,\\ldots,A_k\\) doivent avoir la m√™me valeur sur chaque colonnes \\(A_{k+1},\\ldots, A_n\\) (en fran√ßais : \\(A_1,\\ldots,A_k\\) d√©terminent \\(A_{k+1},\\ldots,A_n\\). On dit que les attributs \\(A_{k+1},\\ldots, A_n\\) d√©pendent fonctionnellement de \\(A_1,A_2,\\ldots,A_k\\).\nLa notion de d√©pendance est transitive : si \\(A \\rightarrow B\\) et \\(B \\rightarrow C\\) alors \\(A \\rightarrow C\\).\nUn ensemble de d√©pendances fonctionnelles \\(\\mathcal{F}\\) est 1 si aucune d√©pendance ne peut √™tre d√©duite des autres en utilisant les r√®gles suivantes :\n\ntrivialit√© : si \\(Y\\subseteq X\\) alors \\(X\\rightarrow Y\\)\naugmentation : si \\(X\\rightarrow Y\\) alors \\(X,Z\\rightarrow Y,Z\\) pour toute suite d‚Äôattributs \\(Z\\).\ntransitivit√© : si \\(X\\rightarrow Y\\) et \\(Y\\rightarrow Z\\) alors \\(X\\rightarrow Z\\)\nunion : si \\(X\\rightarrow Y\\) et \\(X\\rightarrow Z\\) alors \\(X\\rightarrow Y,Z\\)\nd√©composition/s√©paration si \\(X\\rightarrow Y\\) et \\(Z\\subseteq Y\\) alors \\(X\\rightarrow Z\\)\n\nLa cl√¥ture transitive des attributs \\(A_1,\\ldots, A_k\\) pour un ensemble de d√©pendances fonctionnelles \\(\\mathcal F\\) est l‚Äôensemble des attributs \\(B_1,\\ldots, B_{\\ell}\\) qui d√©pendent fonctionnellement de \\(A_1,\\ldots, A_k\\).\nOn la note \\[[A_1,\\ldots, A_k]^+_{\\mathcal{F}}\\] en oubliant \\(\\mathcal{F}\\) si le contexte est clair.\nUn ensemble d‚Äôattributs \\(A_1,\\ldots, A_k\\) est une super-cl√© pour une relation \\(R(B_1,\\ldots, B_{\\ell})\\) si ce sont des attributs de \\(R\\) et si sa cl√¥ture transitive contient \\(B_1,\\ldots, B_{\\ell}\\). C‚Äôest une cl√© si elle est minimale, c‚Äôest-√†-dire, aucun sous-ensemble strict de cette super-cl√© n‚Äôest une cl√©.\nUn sch√©ma est en :\n\n\\(\\text{FN}_1\\) si tout attribut est atomique.\n\\(\\text{FN}_2\\) si un attribut ne fait pas partie d‚Äôune clef, il ne peut pas d√©pendre d‚Äôune partie stricte d‚Äôune clef.\n\\(\\text{FN}_3\\) Pour toute d√©pendance fonctionnelle non triviale, le membre de gauche contient une clef ou tout attribut du membre de droit appartient √† une clef.\n\nUn sch√©ma et un ensemble de d√©pendances fonctionnelles peut se d√©composer en une collection de sch√©mas, dans le sens o√π chaque relation \\(R\\) peut se d√©composer en \\(R_1,\\ldots, R_k\\) tels que \\(R_i = \\pi_i(R)\\) pour une certaine projection \\(\\pi_i\\).\nOn dit cette d√©composition si toute relation \\(R\\) du sch√©ma d‚Äôorigine peut √™tre retrouv√©e √† partir des relations \\(R_1,\\ldots, R_k\\) : \\(R = \\pi_1(R) \\bowtie \\ldots \\bowtie \\pi_k(R)\\).\nOn dit que cette d√©composition respecte les d√©pendances fonctionnelles si celles-ci sont toujours satisfaites par la nouvelle d√©composition.\n\n\nExercice\nSoit une relation concernant des personnes en France avec les attributs suivants~:\\ Nom, Num√©ro de s√©curit√© sociale, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone\nQuelles sont les d√©pendances fonctionnelles cens√©es √™tre satisfaites~?\n\n\nExercice\nSoit un sch√©ma d‚Äôattributs \\(A_1, A_2,\\dots A_n\\) et un ensemble de d√©pendances fonctionnelles. Calculer le nombre de super-clefs (en fonction de \\(n\\)) dans les cas suivants~:\n\nLa seule clef est \\(\\{A_1\\}\\).\nLes seules clefs sont \\(\\{A_1\\}\\) et \\(\\{A_2\\}\\).\nLes seules clefs sont \\(\\{A_1,A_2\\}\\) et \\(\\{A_3,A_4\\}\\).\nLes seules clefs sont \\(\\{A_1,A_2\\}\\) et \\(\\{A_1,A_3\\}\\).\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\{ A \\longrightarrow B, B \\longrightarrow C\\} \\]\n\nQuelle est la fermeture \\(\\{A\\}^+\\) de \\(\\{A\\}\\) ?\n\n\nQuelles sont les super-cl√©s ? Les cl√©s ?\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D,E,F\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\Bigl\\{ \\{A,B\\}\\to C, \\{B,C\\}\\to \\{A,D\\}, D\\to E, \\{C,F\\}\\to B \\Bigr\\}\\]\n\nCalculer la fermeture \\(\\{A,B\\}^+\\) de \\(\\{A,B\\}\\).\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(\\{A,B\\}\\to D\\)~?\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(D\\to A\\)~?\n\n\n\nExercice\nMontrer que les assertions suivantes sont fausses~:\n\n\\(A\\to B\\) implique \\(B\\to A\\).\nSi \\(\\{A,B\\}\\to C\\) et \\(A\\to C\\) alors \\(B\\to C\\).\nSi \\(\\{A,B\\}\\to C\\) alors \\(A\\to C\\) ou \\(B\\to C\\).\n\n\n\nExercice\n\nSoit le sch√©ma \\(\\mathcal{A}=\\{A, B,C, D, E, F, G, H\\}\\) et soit \\[\\Sigma = \\{AB \\longrightarrow C; \\ B \\longrightarrow D;  \\ CD \\longrightarrow E;  \\ CE \\longrightarrow GH; \\  G \\longrightarrow A\\} \\] Est-ce que les d√©pendances\n\\(A,B \\longrightarrow E\\)\n\\(B,G \\longrightarrow C\\)\n\\(A,B \\longrightarrow G\\)\n\nsont d√©ductibles de \\(\\Sigma\\)~?\n\n\n\n\nSoit \\[\\Sigma_1 = \\{A \\longrightarrow B ; C,E \\longrightarrow H ; C \\longrightarrow E ; A \\longrightarrow C,H\\}\\] et \\[\\Sigma_2 = \\{A \\longrightarrow B,C ;  C \\longrightarrow E,H\\}\\] Les deux ensembles de d√©pendances fonctionnelles \\(\\Sigma_1\\) et \\(\\Sigma_2\\) sont-ils √©quivalents ?\n\n\n\nExercice : D√©composition et perte d‚Äôinformation\n\nOn consid√®re le sch√©ma de relation \\(\\mathcal{A}=\\{A,B,C\\}\\) et la d√©pendance fonctionnelle suivante:\n\n\\[\\Sigma=\\{  A,B \\longrightarrow C   \\}.\\]\nD√©terminer si la d√©composition suivante est sans perte d‚Äôinformation\n\\[\\mathcal{A}_1=\\{A,B\\} , \\quad \\mathcal{A}_2=\\{B,C\\}\\]\nen √©tudiant le cas de la table suivante :\n\n\n\n\n\nA\nB\nC\n\n\n\n\n1\n2\n3\n\n\n4\n2\n5\n\n\n\n\n\nOn consid√®re le sch√©ma de relation \\(\\mathcal{A}=\\{A,B,C,D,E\\}\\) et les d√©pendances fonctionnelles suivantes:\n\n\\[\\Sigma=\\{  A \\longrightarrow C ; B \\longrightarrow C ; C \\longrightarrow D ; D,E \\longrightarrow C ; C,E \\longrightarrow A    \\}.\\]\nAppliquer l‚Äôalgorithme de poursuite pour d√©terminer si la d√©composition suivante est sans perte d‚Äôinformation :\n\\[ \\mathcal{A}_1=\\{A,D\\} , \\mathcal{A}_2=\\{A,B\\}    , \\mathcal{A}_3=\\{B,E\\} , \\mathcal{A}_4=\\{C,D,E\\}, \\mathcal{A}_5=\\{A,E\\} \\]\nM√™me question pour la d√©composition: \\[ \\mathcal{A}_1=\\{A,D\\}, \\mathcal{A}_2=\\{A,B\\}, \\mathcal{A}_3=\\{B,E\\}, \\mathcal{A}_4=\\{C,D\\}, \\mathcal{A}_5=\\{D,E\\}, \\mathcal{A}_6=\\{A,E\\} \\]\n\n\nExercice\nSoit \\(\\mathcal{A}=\\{A,B,C,D,E\\}\\) un sch√©ma et soit la d√©composition \\(\\{\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3\\}\\) o√π \\[\\mathcal{A}_1=\\{A,B,C\\}\\quad \\mathcal{A}_2=\\{B,C,D\\}\\quad \\mathcal{A}_3=\\{A,C,E\\}\\] Pour chaque ensemble \\(\\Sigma\\) de d√©pendances fonctionnelles ci-dessous, appliquer l‚Äôalgorithme de poursuite pour d√©terminer si la d√©composition est sans perte d‚Äôinformation. Dans le cas o√π il y a perte d‚Äôinformation, donner une relation \\(R\\) de sch√©ma \\(\\mathcal{A}\\) satisfaisant \\(\\Sigma\\) et telle que \\[ \\pi_{\\mathcal{A}_1}(R)\\bowtie\\pi_{\\mathcal{A}_2}(R)\\bowtie\\pi_{\\mathcal{A}_3}(R)\\not\\subset R\\]\n\n\\(\\Sigma=\\{B\\rightarrow E, CE\\rightarrow A\\}\\)\n\\(\\Sigma=\\{AC\\rightarrow E, BC\\to D\\}\\)\n\\(\\Sigma=\\{A\\rightarrow D, D\\to E, B\\to D\\}\\)\n\\(\\Sigma=\\{A\\rightarrow D, CD\\to E, E\\to D\\}\\)\n\n\n\nExercice : Normalisation\nOn consid√®re le sch√©ma de relation R(C,T,H,S,E,N) :\nR(Cours, Enseignant, Horaire, Salle, √âtudiant, Note)\net les d√©pendances fonctionnelles suivantes:\n\\[\\mathcal{F}=\\{  \\texttt{C} \\to \\texttt{T}; \\quad \\texttt{H,S} \\to \\texttt{C}; \\quad \\texttt{H,T} \\to \\texttt{S}; \\quad \\texttt{C,E} \\to \\texttt{N}; \\quad \\texttt{H,E} \\to S \\}. \\]\n\nCalculer une cl√©.\n\n\nMettre en Boyce-Codd Normal Form (BCNF), donner plusieurs r√©sultats possibles."
  },
  {
    "objectID": "slides/DF_norm_1.html#conception-du-mod√®le-relationnel",
    "href": "slides/DF_norm_1.html#conception-du-mod√®le-relationnel",
    "title": "Normalisation I",
    "section": "Conception du mod√®le relationnel",
    "text": "Conception du mod√®le relationnel\nUne premi√®re approche pour concevoir un mod√®le relationnel (l‚Äôensemble des sch√©mas de tables d‚Äôune bd) consiste √† :\n\nIdentifier les attributs d‚Äôint√©r√™t\nR√©partir les attributs dans plusieurs relations\n\n\n\nComment savoir si le mod√®le relationnel est bon ?\n\n\n\n\nSi ce n‚Äôest pas le cas : y a-t-il des techniques pour le transformer en un bon mod√®le?"
  },
  {
    "objectID": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma",
    "href": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma",
    "title": "Normalisation I",
    "section": "Qualit√© d‚Äôun sch√©ma",
    "text": "Qualit√© d‚Äôun sch√©ma\nQuelles sont de bonnes propri√©t√©s d‚Äôun sch√©ma ?\nExemple\nAttributs relatifs √† des vendeurs, produits et livraisons\n\n\nAttribut\nUsage\n\n\n\nV#\nnum√©ro du vendeur\n\n\nVnom\nnom du vendeur\n\n\nVville\nville du vendeur\n\n\nP#\nnum√©ro du produit\n\n\nPnom\nnom du produit\n\n\nPville\nville o√π le produit est stock√©\n\n\nQte\nquantit√© de produit livr√©e au vendeur"
  },
  {
    "objectID": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma-1",
    "href": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma-1",
    "title": "Normalisation I",
    "section": "Qualit√© d‚Äôun sch√©ma",
    "text": "Qualit√© d‚Äôun sch√©ma\nUn sch√©ma relationnel possible : une seule relation R avec tous les attributs\nR(V#, Vnom, Vville, P#, Pnom, Pville, Qte)\n\n\n C‚Äôest une mauvaise mod√©lisation.\n Pourquoi ?"
  },
  {
    "objectID": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma-relationnel",
    "href": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma-relationnel",
    "title": "Normalisation I",
    "section": "Qualit√© d‚Äôun sch√©ma relationnel",
    "text": "Qualit√© d‚Äôun sch√©ma relationnel\n\n\n\n\n\n\nRedondance\n\n\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\n3\nMagicV\nParis\n‚Ä¶\n‚Ä¶\n‚Ä¶\n‚Ä¶\n\n\n3\nMagicV\nParis\n‚Ä¶\n‚Ä¶\n‚Ä¶\n‚Ä¶\n\n\n2\nIdealB\nLyon\n‚Ä¶\n‚Ä¶\n‚Ä¶\n‚Ä¶\n\n\n2\nIdealB\nLyon\n‚Ä¶\n‚Ä¶\n‚Ä¶\n‚Ä¶\n\n\n\nVnom et Vville sont d√©termin√©s parV# :\nsi deux livraisons ont le m√™me V#, elles ont aussi le m√™me Vville et le m√™me Vnom"
  },
  {
    "objectID": "slides/DF_norm_1.html#section",
    "href": "slides/DF_norm_1.html#section",
    "title": "Normalisation I",
    "section": "",
    "text": "Anomalies de mise √† jour\n\nVnom ou Vville pourrait √™tre mis √† jour dans une livraison et pas dans une autre, ce qui donnerait une incoh√©rence. Les mesures pour √©viter cela rendent la mise √† jour est co√ªteuse\n\n\nAnomalies d‚Äôinsertion\n\nOn ne peut pas enregistrer un vendeur s‚Äôil ne re√ßoit pas de livraison\n\n\n\nAnomalies de suppression\n\nSi on supprime toutes les livraisons √† un vendeur, on perd toute l‚Äôinformation sur ce vendeur"
  },
  {
    "objectID": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma-relationnel-1",
    "href": "slides/DF_norm_1.html#qualit√©-dun-sch√©ma-relationnel-1",
    "title": "Normalisation I",
    "section": "Qualit√© d‚Äôun sch√©ma relationnel",
    "text": "Qualit√© d‚Äôun sch√©ma relationnel\n\nUn bon sch√©ma\n\nVendeur(V#, Vnom, Vville)    Clef : V#\nProduit(P#, Pnom, Pville)    Clef : P#\nLivraison(V#, P#, Qte)       Clef : (V#,P#)\n\nPlus d‚Äôanomalie ! Comment y arriver?\n\n\nLa th√©orie de la normalisation des BD relationnelles fournit\n\nla notion de forme normale : propri√©t√©s d‚Äôun sch√©ma qui garantissent l‚Äôabsence de redondance et des anomalies qui en d√©rivent. Ces propri√©t√©s sont d√©finies par rapport √† un ensemble de contraintes\ndes techniques de normalisation : passage d‚Äôun sch√©ma arbitraire (mauvais) √† un sch√©ma en forme normale (obtenu typiquement par d√©composition)"
  },
  {
    "objectID": "slides/DF_norm_1.html#df-exemple-suite",
    "href": "slides/DF_norm_1.html#df-exemple-suite",
    "title": "Normalisation I",
    "section": "DF exemple (suite)",
    "text": "DF exemple (suite)\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\n3\nMagicV\nParis\n322\nmanteau\nLille\n2\n\n\n1\nStarV\nRome\n546\nveste\nRome\n1\n\n\n3\nMagicV\nParis\n322\nmanteau\nLille\n5\n\n\n2\nIdealB\nLyon\n145\njupe\nParis\n7\n\n\n2\nIdealB\nLyon\n234\njupe\nLille\n1\n\n\n\n\n\nR satisfait V# ‚ü∂ Vnom Vville et P# ‚ü∂ Pnom Pville\nR viole V# P# ‚ü∂ Qte"
  },
  {
    "objectID": "slides/DF_norm_1.html#autre-exemple",
    "href": "slides/DF_norm_1.html#autre-exemple",
    "title": "Normalisation I",
    "section": "Autre Exemple",
    "text": "Autre Exemple\nSch√©ma Films(titre, ann√©e, dur√©e, genre, producteur, acteur)\n\n\n\n\n\n\n\n\n\n\ntitre\nann√©e\ndur√©e\ngenre\nproducteur\nacteur\n\n\n\nStar Wars\n1977\n124\nSciFi\nFox\nCarrie Fisher\n\n\nStar Wars\n1977\n124\nSciFi\nFox\nMark Hamill\n\n\nStar Wars\n1977\n124\nSciFi\nFox\nHarrison Ford\n\n\nGone With The Wind\n1939\n231\ndrame\nMGM\nVivien Leigh\n\n\nWayne‚Äôs World\n1992\n95\ncom√©die\nParamount\nDana Carvey\n\n\nWayne‚Äôs World\n1992\n95\ncom√©die\nParamount\nMike Meyers\n\n\n‚Ä¶"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©finition-dune-d√©pendance-fonctionnelle",
    "href": "slides/DF_norm_1.html#d√©finition-dune-d√©pendance-fonctionnelle",
    "title": "Normalisation I",
    "section": "D√©finition d‚Äôune d√©pendance fonctionnelle",
    "text": "D√©finition d‚Äôune d√©pendance fonctionnelle\n\n\n\n\n\n\nD√©finition : D√©pendance fonctionnelle\n\n\nSoit \\(\\mathcal{A}\\) un sch√©ma de relation (\\(\\mathcal{A}\\) est un ensemble d‚Äôattributs)\nUne d√©pendance fonctionnelle sur \\(\\mathcal{A}\\) est une expression de la forme\n\\[X ‚Üí Y\\]\no√π \\(X ‚äÜ \\mathcal{A}\\) et \\(Y ‚äÜ \\mathcal{A}\\)\nUne relation \\(R\\) de sch√©ma \\(\\mathcal{A}\\) satisfait \\(X ‚Üí Y\\) si pour tous tuples \\(s,t ‚àà R\\) on a\n\\[\\bigl(‚àÄ A‚àà X\\ s.A=t.A\\bigr) ‚üπ \\bigl(\\forall A‚àà Y\\ s.A=t.A\\bigr)\\]\n(si \\(s\\) et \\(t\\) co√Øncident sur \\(X\\) alors \\(s\\) et \\(t\\) co√Øncident sur \\(Y\\))\nUne relation \\(R\\), de sch√©ma \\(\\mathcal{A}\\), satisfait un ensemble \\(\\Sigma\\) de DF si \\(R\\) satisfait chaque DF de \\(\\Sigma\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemples",
    "href": "slides/DF_norm_1.html#exemples",
    "title": "Normalisation I",
    "section": "Exemples",
    "text": "Exemples\nDans la base Pagila, relation Actor :\n\nActor_id ‚ü∂ last_name, first_name\ncar Actor_id est une cl√©‚Ä¶"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©pendance-fonctionnelle-triviale",
    "href": "slides/DF_norm_1.html#d√©pendance-fonctionnelle-triviale",
    "title": "Normalisation I",
    "section": "D√©pendance fonctionnelle triviale",
    "text": "D√©pendance fonctionnelle triviale\nUne DF triviale est une DF satisfaite par toute relation\n\n\n\n\n\n\nD√©finition (d√©pendance triviale)\n\n\nSoient \\(X,Y‚äÇ \\mathcal{A}\\)\n\\(X\\rightarrow Y\\) est une d√©pendance triviale si \\(Y ‚äÇ X\\)\n\n\n\n\n\n\n\n\n\n\nExemple\n\n\nNo_insee ‚ü∂ No_insee est triviale"
  },
  {
    "objectID": "slides/DF_norm_1.html#implication-pour-les-df",
    "href": "slides/DF_norm_1.html#implication-pour-les-df",
    "title": "Normalisation I",
    "section": "Implication pour les DF",
    "text": "Implication pour les DF\n\nSoit \\(\\mathcal{A}\\) un sch√©ma de relation ( \\(\\mathcal{A}\\) est un ensemble d‚Äôattributs) et \\(\\Sigma\\) un ensemble de DF sur \\(\\mathcal{A}\\)\nExemple : \\(\\mathcal{A}=\\{A,B,C\\}\\) et \\(\\Sigma=\\{A\\rightarrow B, B\\rightarrow C\\}\\)\nLes DF donn√©es impliquent d‚Äôautres DF additionnelles\n\n\n\n\n\n\n\n\nExemple I\n\n\n\\(A\\rightarrow B\\) et \\(B\\rightarrow C\\) impliquent \\(A\\rightarrow C\\)\nc‚Äôest-√†-dire : toute relation de sch√©ma \\(\\mathcal{A}\\) qui satisfait \\(A\\rightarrow B\\) et \\(B\\rightarrow C\\) satisfait √©galement \\(A\\rightarrow C\\)\n\n\n\n\n\n\n\n\n\n\n\nExemple II\n\n\n\\(A\\rightarrow C\\), \\(BC\\rightarrow D\\), \\(AD\\rightarrow E\\) impliquent \\(AB\\rightarrow E\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#implication-entre-df",
    "href": "slides/DF_norm_1.html#implication-entre-df",
    "title": "Normalisation I",
    "section": "Implication entre DF",
    "text": "Implication entre DF\n\n\n\n\n\n\nD√©finition\n\n\nUn ensemble \\(\\Sigma\\) de DF implique une autre DF \\(X\\rightarrow Y\\) si toute relation qui satisfait \\(\\Sigma\\) satisfait √©galement \\(X\\rightarrow Y\\).\nNotation pour \\(\\Sigma\\) implique \\(X\\rightarrow Y\\) :\n\\[\\Sigma \\models X \\rightarrow Y\\]\n\n\n\n\n\n\n\n\n\n\nExemple\n\n\n\\(\\Sigma=\\{A\\rightarrow B, B\\rightarrow C\\}\\) implique\n\\(A\\rightarrow B\\), \\(B\\rightarrow C\\), \\(A\\rightarrow C\\), \\(A,B\\rightarrow C\\), ‚Ä¶\nmais aussi les DF triviales \\(A\\rightarrow A\\), \\(AB\\rightarrow A\\), ‚Ä¶"
  },
  {
    "objectID": "slides/DF_norm_1.html#preuve",
    "href": "slides/DF_norm_1.html#preuve",
    "title": "Normalisation I",
    "section": "Preuve",
    "text": "Preuve"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemples-1",
    "href": "slides/DF_norm_1.html#exemples-1",
    "title": "Normalisation I",
    "section": "Exemples",
    "text": "Exemples\n\\(\\mathcal{A}=\\{A,B,C,D\\}\\),\n\\(\\Sigma= \\{AB\\rightarrow C, C\\rightarrow A, BC\\rightarrow D\\}\\)|\n\\(\\Sigma'=\\{AB\\rightarrow D\\}\\)\n\\(\\Sigma\\models\\Sigma'\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#question-principale",
    "href": "slides/DF_norm_1.html#question-principale",
    "title": "Normalisation I",
    "section": "Question principale",
    "text": "Question principale\n\nComment v√©rifier si un ensemble \\(\\Sigma\\) de DF implique une DF \\(X\\rightarrow Y\\)~?\n\n\n\nPar les √©quivalences pr√©sent√©es pr√©c√©demment, la question se ram√®ne √† :\n\nComment v√©rifier si un ensemble \\(\\Sigma\\) de DF implique une DF \\(X\\rightarrow A\\) o√π \\(A\\) est un attribut~?"
  },
  {
    "objectID": "slides/DF_norm_1.html#fermeture-dun-ensemble-dattributs-1",
    "href": "slides/DF_norm_1.html#fermeture-dun-ensemble-dattributs-1",
    "title": "Normalisation I",
    "section": "Fermeture d‚Äôun ensemble d‚Äôattributs",
    "text": "Fermeture d‚Äôun ensemble d‚Äôattributs\nSoit \\(X \\subset\\mathcal{A}\\) un sous-ensemble d‚Äôattributs et \\(\\Sigma\\) un ensemble de DF sur \\(\\mathcal{A}\\)\n\n\n\n\n\n\nD√©finition\n\n\nLa fermeture de \\(X\\) par rapport √† \\(\\Sigma\\) est\n\\[X^+=\\{ A\\in\\mathcal{A} \\mid \\Sigma\\models X\\rightarrow A \\}\\]\n\n\n\n\n\nAutrement dit \\(X^+\\) est l‚Äôensemble des attributs d√©termin√©s par \\(X\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemple-de-fermeture",
    "href": "slides/DF_norm_1.html#exemple-de-fermeture",
    "title": "Normalisation I",
    "section": "Exemple de fermeture",
    "text": "Exemple de fermeture\n\n\\(R(ABCDE)\\)\n\\(\\Sigma=\\{AB\\rightarrow C, C\\rightarrow D, E\\rightarrow D\\}\\)\n\\(\\{A,B\\}^+=\\{A,B,C,D\\}\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#section-2",
    "href": "slides/DF_norm_1.html#section-2",
    "title": "Normalisation I",
    "section": "",
    "text": "\\begin{algorithm} \\caption{Fermeture} \\begin{algorithmic} \\Procedure{Fermeture}{$X, Œ£$} \\State $X^c ‚Üê X$ \\Repeat \\State stop ‚Üê \\True \\For{$(Y ‚Üí Z) ‚àà Œ£$} \\If{$Y ‚äÜ Z ‚àß Z ‚äÑ X^c$} \\State $X^c ‚Üê X^c ‚à™ Z$ \\State stop ‚Üê \\False \\EndIf \\EndFor \\Until{stop} \\Return $X^c$ \\EndProcedure \\end{algorithmic} \\end{algorithm}"
  },
  {
    "objectID": "slides/DF_norm_1.html#section-3",
    "href": "slides/DF_norm_1.html#section-3",
    "title": "Normalisation I",
    "section": "",
    "text": "Xc &lt;-  X\n\nwhile (exists Y -&gt; Z in Œ£ with Y ‚äÇ Xc and not Z ‚äÑ Xc) {\n  Xc &lt;- Xc ‚à™ Z\n}\n\nreturn Xc\n\n\n\nXc grandit √† chaque it√©ration\n\nComme \\(\\mathcal{A}\\) est fini, l‚Äôalgorithme se termine en au plus \\(|\\mathcal{A}|\\) it√©rations"
  },
  {
    "objectID": "slides/DF_norm_1.html#preuve-de-la-correction-de-lalgorithme-de-fermeture",
    "href": "slides/DF_norm_1.html#preuve-de-la-correction-de-lalgorithme-de-fermeture",
    "title": "Normalisation I",
    "section": "Preuve de la correction de l‚Äôalgorithme de fermeture",
    "text": "Preuve de la correction de l‚Äôalgorithme de fermeture"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemple-de-calcul-de-fermeture",
    "href": "slides/DF_norm_1.html#exemple-de-calcul-de-fermeture",
    "title": "Normalisation I",
    "section": "Exemple de calcul de fermeture",
    "text": "Exemple de calcul de fermeture\n\\(\\mathcal{A}=\\{ABCDEF\\}\\) \\(\\Sigma=\\{A\\rightarrow C, BC\\rightarrow D, AD\\rightarrow E\\}\\) \\(X=\\{A,B\\}\\)\n\n\\(X_c=\\{A,B\\}\\)\n\\(A\\rightarrow C\\) donc on obtient \\(X_c=\\{A,B,C\\}\\)\n\\(BC\\rightarrow D\\) donc on obtient \\(X_c=\\{A,B,C,D\\}\\)\n\\(AD\\rightarrow E\\) donc on obtient \\(X_c=\\{A,B,C,D, E\\}\\)\nOn obtient \\(X^+=\\{A,B,C,D, E\\}\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#correction-de-lalgorithme-de-fermeture",
    "href": "slides/DF_norm_1.html#correction-de-lalgorithme-de-fermeture",
    "title": "Normalisation I",
    "section": "Correction de l‚Äôalgorithme de fermeture",
    "text": "Correction de l‚Äôalgorithme de fermeture\n\nL‚Äôalgorithme calcule uniquement des attributs dans la fermeture car on a toujours \\(X_c\\subset X^+\\)\nL‚Äôalgorithme calcule tous les attributs dans la fermeture: \\(X_c=X^+\\) quand l‚Äôalgorithme se termine"
  },
  {
    "objectID": "slides/DF_norm_1.html#calcul-de-la-fermeture-transitive-exemple",
    "href": "slides/DF_norm_1.html#calcul-de-la-fermeture-transitive-exemple",
    "title": "Normalisation I",
    "section": "Calcul de la fermeture transitive : exemple",
    "text": "Calcul de la fermeture transitive : exemple\n\n\nSoit \\(R\\) d‚Äôensemble d‚Äôattributs\n\\[\\mathcal{A} =\\{A,B,C,D,E,F,G\\}\\]\nSoit \\(X=\\{B,D\\} \\subset \\mathcal{A}\\)\nEt \\(Œ£\\) l‚Äôensemble de d√©pendances fonctionnelles ci-contre\n\n\n\n\\(\\Sigma\\)\n\n\n\n\\(A,B \\rightarrow C\\)\n\n\n\\(C \\rightarrow A\\)\n\n\n\\(B,C \\rightarrow D\\)\n\n\n\\(A,C,D \\rightarrow B\\)\n\n\n\\(F\\rightarrow A,C\\)\n\n\n\\(D \\rightarrow E,G\\)\n\n\n\\(B,E \\rightarrow C\\)\n\n\n\\(C,G \\rightarrow B,D\\)\n\n\n\\(C,E \\rightarrow A,G\\)\n\n\n\n\nMontrer que \\(X^+=\\{A,B,C,D,E,G\\}\\)\nDonner une clef de \\(R\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#forme-normale-de-boyce-codd-fnbc",
    "href": "slides/DF_norm_1.html#forme-normale-de-boyce-codd-fnbc",
    "title": "Normalisation I",
    "section": "Forme normale de Boyce-Codd (FNBC)",
    "text": "Forme normale de Boyce-Codd (FNBC)\n\n\n\n\n\n\nD√©finition\n\n\nUn sch√©ma \\(\\mathcal{A}\\) est en FNBC par rapport √† un ensemble de d√©pendances fonctionnelles \\(\\Sigma\\) sur \\(\\mathcal{A}\\)\nsi\npour toute DF \\(X\\rightarrow Y\\) impliqu√©e par \\(\\Sigma\\) avec \\(Y\\not\\subset X\\), \\(X\\) est une super-clef\n\n\n\n\n\n\n \\((\\mathcal{A},\\Sigma)\\) est en FNBC si pour toute DF non triviale impliqu√©e par \\(\\Sigma\\), le membre de gauche est une super-clef"
  },
  {
    "objectID": "slides/DF_norm_1.html#fnbc-exemple-1",
    "href": "slides/DF_norm_1.html#fnbc-exemple-1",
    "title": "Normalisation I",
    "section": "FNBC : exemple 1",
    "text": "FNBC : exemple 1\n\nSch√©ma \\(\\mathcal{A}=\\{\\texttt{V\\#, Vnom, Vville, P\\#, Pnom, Pville, Qte}\\}\\)\n\n\nEnsemble de d√©pendances fonctionnelles \\(\\Sigma\\) :\nV# ‚ü∂ Vnom Vville\nP# ‚ü∂ Pnom Pville\nV# P# ‚ü∂ Qte\n\n\\(\\mathcal{A}\\) n‚Äôest pas en FNBC par rapport \\(\\Sigma\\).\nEn effet ni V# ni P# ne sont des super-clefs"
  },
  {
    "objectID": "slides/DF_norm_1.html#fnbc-exemple-2",
    "href": "slides/DF_norm_1.html#fnbc-exemple-2",
    "title": "Normalisation I",
    "section": "FNBC : exemple 2",
    "text": "FNBC : exemple 2\nSch√©ma Films(titre, ann√©e, dur√©e, genre, producteur, acteur)\n\nOn a la d√©pendance suivante titre, ann√©e ‚ü∂ dur√©e, genre, producteur\ntitre, ann√©e, acteur est la seule clef\nLa DF titre, ann√©e ‚ü∂ dur√©e, genre, producteur} viole la condition de FNBC"
  },
  {
    "objectID": "slides/DF_norm_1.html#fnbc-exemple-3",
    "href": "slides/DF_norm_1.html#fnbc-exemple-3",
    "title": "Normalisation I",
    "section": "FNBC : exemple 3",
    "text": "FNBC : exemple 3\nTrois sch√©mas en FNBC :\n\n\nRelation\nClef\n\n\n\nVendeur(V#, Vnom, Vville)\nV#\n\n\nProduit(P#, Pnom, Pville)\nP#\n\n\nLivraison(V#, P#, Qte)\n(V#,P#)"
  },
  {
    "objectID": "slides/DF_norm_1.html#sch√©ma-avec-deux-attributs",
    "href": "slides/DF_norm_1.html#sch√©ma-avec-deux-attributs",
    "title": "Normalisation I",
    "section": "Sch√©ma avec deux attributs",
    "text": "Sch√©ma avec deux attributs\n\n\n\n\n\n\nProposition\n\n\nSoit \\(\\mathcal{A}=\\{A,B\\}\\) un sch√©ma avec deux attributs et \\(\\Sigma\\) un ensemble de DF non triviales.\n\\(\\mathcal{A}\\) est toujours en FNBC par rapport √† \\(\\Sigma\\)\n\n\n\n\n\nPreuve. On distingue 4 cas\n\n\\(\\Sigma=\\emptyset\\)\n\\(\\Sigma=\\{A\\rightarrow B\\}\\)\n\\(\\Sigma=\\{B\\rightarrow A\\}\\)\n\\(\\Sigma=\\{A\\rightarrow B, B\\rightarrow A\\}\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©composition-dun-sch√©ma-de-relation",
    "href": "slides/DF_norm_1.html#d√©composition-dun-sch√©ma-de-relation",
    "title": "Normalisation I",
    "section": "D√©composition d‚Äôun sch√©ma de relation",
    "text": "D√©composition d‚Äôun sch√©ma de relation\n\n\n\n\n\n\nD√©finition\n\n\nSoit \\(\\mathcal{A}\\) un sch√©ma de relation\nUn d√©composition de \\(\\mathcal{A}\\) est un ensemble \\(\\{\\mathcal{A}_1,..., \\mathcal{A}_k\\}\\) de sous-ensembles de \\(\\mathcal{A}\\) tel que\n\\[\\mathcal{A}_i\\not=\\emptyset, 1\\le i\\le k, \\quad \\text{ et } \\quad \\mathcal{A} = \\bigcup_{i=1}^k \\mathcal{A}_i\\]"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemple-de-d√©composition-i",
    "href": "slides/DF_norm_1.html#exemple-de-d√©composition-i",
    "title": "Normalisation I",
    "section": "Exemple de d√©composition I",
    "text": "Exemple de d√©composition I\nVendeur(V#, Vnom, Vville)\nProduit(P#, Pnom, Pville)\nLivraison(V#, P#, Qte)\nest une d√©composition du sch√©ma\nR(V#, Vnom, Vville, P#, Pnom, Pville, Qte)"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemple-de-d√©composition-ii",
    "href": "slides/DF_norm_1.html#exemple-de-d√©composition-ii",
    "title": "Normalisation I",
    "section": "Exemple de d√©composition II",
    "text": "Exemple de d√©composition II\nSch√©ma :\nFilms(titre, ann√©e, dur√©e, genre, producteur, acteur)\n\nUne d√©composition :\nFilms1(titre, ann√©e, dur√©e, genre, producteur)\nFilms2(titre, ann√©e, acteur)\n\n\nFilms1 est FNBC par rapport √† \\(\\Sigma_1=\\{\\texttt{titre, ann√©e ‚ü∂ dur√©e, genre, producteur}\\}\\)\n\n\nFilms2 est en FNBC par rapport √† \\(\\Sigma_2=\\emptyset\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#propri√©t√©s-dune-d√©composition",
    "href": "slides/DF_norm_1.html#propri√©t√©s-dune-d√©composition",
    "title": "Normalisation I",
    "section": "Propri√©t√©s d‚Äôune d√©composition",
    "text": "Propri√©t√©s d‚Äôune d√©composition\nOn ne peut pas d√©composer arbitrairement,\nToutes les d√©compositions ne sont pas int√©ressantes\n‚Äì\nConditions pour une d√©composition raisonnable :\n\nD√©composition sans perte d‚Äôinformation\nD√©composition sans perte de d√©pendance fonctionnelle"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-1",
    "href": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-1",
    "title": "Normalisation I",
    "section": "D√©composition sans perte d‚Äôinformation",
    "text": "D√©composition sans perte d‚Äôinformation\nId√©e : Si on remplace le sch√©ma\n(V#, Vnom, Vville, P#, Pnom, Pville, Qte)\npar les trois sch√©mas\nVendeur(V#, Vnom, Vville)\nProduit(P#, Pnom, Pville)\nLivraison(V#, P#, Qte)\nalors au lieu de stocker une relation R(V#, Vnom, Vville, P#, Pnom, Pville, Qte), on stockera ses projections:\n\\[\\pi_{\\texttt{V\\#,Vnom,Vville}}(\\texttt{R}) \\qquad \\pi_{\\texttt{P\\#,Pnom,Pville}}(\\texttt{R}) \\qquad \\pi_{\\texttt{V\\#,P\\#,Qte}}(\\texttt{R})\\]\n Peut-on retrouver R √† partir de ces trois projections ?"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-2",
    "href": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-2",
    "title": "Normalisation I",
    "section": "D√©composition sans perte d‚Äôinformation",
    "text": "D√©composition sans perte d‚Äôinformation\n\nLa d√©composition doit garantir que pour toute relation R, ses projections contiennent la m√™me information que R au sens que l‚Äôon doit pouvoir reconstruire R √† partir de ses projections\nComment tenter de reconstruire R √† partir de ses projections ?\n\nOn consid√®re la jointure naturelle\n\\[\\pi_{\\texttt{V\\#,Vnom,Vville}}(\\texttt{R}) \\bowtie \\pi_{\\texttt{P\\#,Pnom,Pville}}(\\texttt{R}) \\bowtie \\pi_{\\texttt{V\\#,P\\#,Qte}}(\\texttt{R})\\]"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-3",
    "href": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-3",
    "title": "Normalisation I",
    "section": "D√©composition sans perte d‚Äôinformation",
    "text": "D√©composition sans perte d‚Äôinformation\nLa propri√©t√© souhait√©e s‚Äô√©crit donc\n\\[R = \\pi_{\\texttt{V\\#,Vnom,Vville}}(\\texttt{R}) \\bowtie \\pi_{\\texttt{P\\#,Pnom,Pville}}(\\texttt{R}) \\bowtie \\pi_{\\texttt{V\\#,P\\#,Qte}}(\\texttt{R})\\]\npour toute relation R(V#, Vnom, Vville, P#, Pnom, Pville, Qte) satisfaisant les DF\n\n\nEst ce vrai?\nIntuitivement, oui : √† partir d‚Äôun tuple de Livraison(V#,P#,Qte)\nV# permet de r√©cup√©rer toutes les informations sur le vendeur (V# ‚ü∂ Vnom Vville)\nP# permet de r√©cup√©rer toutes les informations sur le produit (P# ‚ü∂ Pnom Pville)\n La propri√©t√© d‚Äô√™tre sans perte d‚Äôinformation est li√©e √† l‚Äôensemble de DF consid√©r√©"
  },
  {
    "objectID": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-lossless-join",
    "href": "slides/DF_norm_1.html#d√©composition-sans-perte-dinformation-lossless-join",
    "title": "Normalisation I",
    "section": "D√©composition sans perte d‚Äôinformation (lossless join)",
    "text": "D√©composition sans perte d‚Äôinformation (lossless join)\n\n\n\n\n\n\nD√©finition\n\n\nSoit \\(\\mathcal{A}\\) un sch√©ma de relation et \\(\\Sigma\\) un ensemble de DF sur \\(\\mathcal{A}\\).\nUne d√©composition \\(\\{\\mathcal{A}_1,..., \\mathcal{A}_k\\}\\) est sans perte d‚Äôinformation par rapport √† \\(\\Sigma\\) si pour toute relation \\(R\\) de sch√©ma \\(\\mathcal{A}\\) satisfaisant \\(\\Sigma\\) on a\n\\[R= \\pi_{\\mathcal{A}_1}(R) \\bowtie \\pi_{\\mathcal{A}_2}(R) \\bowtie...\\bowtie\\pi_{\\mathcal{A}_k}(R)\\]"
  },
  {
    "objectID": "slides/DF_norm_1.html#exemple-de-d√©composition-avec-perte-dinformation",
    "href": "slides/DF_norm_1.html#exemple-de-d√©composition-avec-perte-dinformation",
    "title": "Normalisation I",
    "section": "Exemple de d√©composition avec perte d‚Äôinformation",
    "text": "Exemple de d√©composition avec perte d‚Äôinformation\n\\(\\mathcal{A}=\\{A,B,C\\} \\quad  \\Sigma=\\{AB\\rightarrow C\\}\\)\nD√©composition \\(\\mathcal{A}_1=\\{A,B\\}  \\quad  \\mathcal{A}_2=\\{B,C\\}\\)\n\n\nSoit \\(R\\) la relation\n\n\nA\nB\nC\n\n\n\n1\n2\n3\n\n\n4\n2\n5\n\n\n\n\n\\(\\pi_{AB}(R)=\\)\n\n\nA\nB\n\n\n\n1\n2\n\n\n4\n2\n\n\n\n\n\\(\\pi_{BC}(R)=\\)\n\n\nB\nC\n\n\n\n2\n3\n\n\n2\n5\n\n\n\n\n\\(\\pi_{AB}(R) \\bowtie \\pi_{BC}(R)=\\)\n\n\nA\nB\nC\n\n\n\n1\n2\n3\n\n\n4\n2\n5\n\n\n1\n3\n5\n\n\n4\n2\n3"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-1",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-1",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite",
    "text": "Algorithme de poursuite\n\nComment d√©terminer si une d√©composition est sans perte d‚Äôinformation?\nSi \\(R\\) est une relation de sch√©ma \\(\\mathcal{A}\\) on a toujours que\n\n\\[R\\subset \\pi_{\\mathcal{A}_1}(R) \\bowtie \\pi_{\\mathcal{A}_2}(R) \\bowtie...\\bowtie\\pi_{\\mathcal{A}_k}(R)\\]\npar d√©finition de la jointure naturelle et de la projection\n\nLe seul probl√®me est que les jointures peuvent g√©n√©rer des tuples suppl√©mentaires\nMais comme \\(R\\) est suppos√©e v√©rifier les DF de \\(\\Sigma\\), l‚Äôinclusion inverse est garantie dans certains cas\n\nPour le savoir, un algorithme simple existe appel√© algorithme de poursuite"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : exemple",
    "text": "Algorithme de poursuite : exemple\nSi on remplace le sch√©ma (V#, Vnom, Vville, P#, Pnom, Pville, Qte) par\nVendeur(V#, Vnom, Vville)}\nProduit(P#, Pnom, Pville)}\nLivraison(V#, P#, Qte)\nA-t-on\n\\[\\pi_{\\texttt{V\\#,Vnom,Vville}}(\\texttt{R}) \\bowtie \\pi_{\\texttt{P\\#,Pnom,Pville}}(\\texttt{R}) \\bowtie \\pi_{\\texttt{V\\#,P\\#,Qte}}(R) \\subset \\texttt{R} \\quad ?\\]"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-1",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-1",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : exemple",
    "text": "Algorithme de poursuite : exemple\nSoit \\(t\\) un tuple dans la jointure\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d\\)\n\\(e\\)\n\\(f\\)\n\\(g\\)\n\n\n\n\\((a, b, c)\\in \\pi_{\\texttt{V\\#,Vnom,Vville}}(\\texttt{R})\\) donc il existe \\(e_1, f_1, g_1\\) tels que \\((a, b, c, d_1, e_1, f_1, g_1) \\in \\texttt{R}\\)\n\\((d,e,f) \\in \\pi_{\\texttt{P\\#,Pnom,Pville}}(\\texttt{R})\\) donc il existe \\(a_2, b_2, c_2, g_2\\) tels que \\((a_2, b_2, c_2, d, e, f, g_2)\\in \\texttt{R}\\)\n\\((a,d,g)\\in \\pi_{\\texttt{V\\#,P\\#,Qte}}(R)\\) donc il existe \\(b_3,c_3,e_3,f_3\\) tels que \\((a,b_3,c_3,d,e_3,f_3,g)\\in \\texttt{R}\\)\nOn peut le repr√©senter comme ceci :\n\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\nVendeur\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d_1\\)\n\\(e_1\\)\n\\(f_1\\)\n\n\nProduit\n\\(a_2\\)\n\\(b_2\\)\n\\(c_2\\)\n\\(d\\)\n\\(e\\)\n\\(f\\)\n\n\nLivraison\n.\\(a\\)\n\n\\(b_3\\)\n\\(c_3\\)\n\\(d\\)\n\\(e_3\\)\n\\(f_3\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-2",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-2",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : exemple",
    "text": "Algorithme de poursuite : exemple\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\nVendeur\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d_1\\)\n\\(e_1\\)\n\\(f_1\\)\n\n\nProduit\n\\(a_2\\)\n\\(b_2\\)\n\\(c_2\\)\n\\(d\\)\n\\(e\\)\n\\(f\\)\n\n\nLivraison\n\\(a\\)\n\\(b_3\\)\n\\(c_3\\)\n\\(d\\)\n\\(e_3\\)\n\\(f_3\\)\n\n\n\n\n\nV# ‚ü∂ Vnom, Vville donc \\(b_3=b\\) et \\(c_3=c\\)\n\n\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\nVendeur\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d_1\\)\n\\(e_1\\)\n\\(f_1\\)\n\n\nProduit\n\\(a_2\\)\n\\(b_2\\)\n\\(c_2\\)\n\\(d\\)\n\\(e\\)\n\\(f\\)\n\n\nLivraison\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d\\)\n\\(e_3\\)\n\\(f_3\\)"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-suite",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-suite",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : exemple (suite)",
    "text": "Algorithme de poursuite : exemple (suite)\n\n\nP#‚ü∂ Pnom, Pville donc \\(e_3=e\\) et \\(f_3=f\\)\n\n\n\n\nV#\nVnom\nVville\nP#\nPnom\nPville\nQte\n\n\n\nVendeur\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d_1\\)\n\\(e_1\\)\n\\(f_1\\)\n\n\nProduit\n\\(a_2\\)\n\\(b_2\\)\n\\(c_2\\)\n\\(d\\)\n\\(e\\)\n\\(f\\)\n\n\nLivraison\n\\(a\\)\n\\(b\\)\n\\(c\\)\n\\(d\\)\n\\(e\\)\n\\(f\\)\n\n\n\n\nOn a obtenu une ligne √©gale au tuple \\(t=(a,b,c,d,e,f,g)\\) donc \\(t\\in \\texttt{R}\\).\n\nOn en d√©duit que la d√©composition est Sans Perte d‚ÄôInformation (SPI)"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-cas-g√©n√©ral",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-cas-g√©n√©ral",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : cas g√©n√©ral",
    "text": "Algorithme de poursuite : cas g√©n√©ral\n\nEntr√©e : un sch√©ma \\(\\mathcal{A}\\), une d√©composition \\(\\{\\mathcal{A}_1,...,\\mathcal{A}_k\\}\\) et un ensemble \\(\\Sigma\\) de DF\nPour chaque attribut de \\(\\mathcal{A}\\), choisir un symbole (par exemple \\(a\\), \\(b\\), \\(c\\),‚Ä¶). La correspondance doit √™tre injective.\nConstruire un tableau dont les colonnes sont les attributs de \\(\\mathcal{A}\\)\n\nLe tableau a une ligne pour chaque \\(\\mathcal{A}_i\\)\nSur la ligne associ√©e √† \\(\\mathcal{A}_i\\), les positions correspondant √† \\(\\mathcal{A}_i\\) sont remplies avec les symboles choisis.\nLes autres positions sont remplies avec les symboles indic√©s par \\(i\\)\n\nR√©p√©ter tant que possible : s‚Äôil existe une DF \\(X\\rightarrow Y\\) dans \\(\\Sigma\\) et deux lignes du tableau en accord sur \\(X\\), √©galiser ces deux lignes sur \\(Y\\)\nSortie : Si on obtient une ligne sans valeur indic√©e, la d√©composition est sans perte d‚Äôinformation, sinon il y a perte d‚Äôinformation"
  },
  {
    "objectID": "slides/DF_norm_1.html#section-5",
    "href": "slides/DF_norm_1.html#section-5",
    "title": "Normalisation I",
    "section": "",
    "text": "Preuve ()."
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-2-1",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-2-1",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : exemple 2",
    "text": "Algorithme de poursuite : exemple 2\nConsid√©rons l‚Äôexemple : \\(\\mathcal{A}=\\{A,B,C,D\\}\\) avec \\(\\mathcal{A}_1=\\{A,B\\}\\), \\(\\mathcal{A}_2=\\{B,C\\}\\) et \\(\\mathcal{A}_3=\\{C,D\\}\\)\nSoit \\(\\Sigma=\\{{C}\\rightarrow{D}; {B}\\rightarrow{A}\\}\\).\nSoit \\(t=(a,b,c,d)\\). Soit \\(t_1,t_2,t_3\\) les tuples de \\(R\\) suivants:\n\n\n\nA\nB\nC\nD\n\n\n\n\\(t_2\\)\n\\(a_2\\)\nb\nc\n\\(d_2\\)\n\n\n\\(t_3\\)\n\\(a_3\\)\n\\(b_3\\)\nc\nd\n\n\n\nOn a pris \\(c_1,d_1, a_2,d_2, a_3,b_3\\) comme valeurs variables et a,b,c,d comme constantes"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite---exemple-2",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite---exemple-2",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite - exemple 2",
    "text": "Algorithme de poursuite - exemple 2\n\n\n\nA\nB\nC\nD\n\n\n\n\\(t_1\\)\na\nb\n\\(c_1\\)\n\\(d_1\\)\n\n\n\\(t_2\\)\n\\(a_2\\)\nb\nc\n\\(d_2\\)\n\n\n\\(t_3\\)\n\\(a_3\\)\n\\(b_3\\)\nc\nd\n\n\n\nPar la d√©pendance \\({B}\\rightarrow{A}\\), il vient :\n\n\n\nA\nB\nC\nD\n\n\n\n\\(t_1\\)\na\nb\n\\(c_1\\)\n\\(d_1\\)\n\n\n\\(t_2\\)\na\nb\nc\n\\(d_2\\)\n\n\n\\(t_3\\)\n\\(a_3\\)\n\\(b_3\\)\nc\nd"
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-2-2",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite-exemple-2-2",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite : exemple 2",
    "text": "Algorithme de poursuite : exemple 2\nPar la d√©pendance \\({C}\\rightarrow{D}\\), il vient :\n\n\n\nA\nB\nC\nD\n\n\n\n\\(t_1\\)\na\nb\n\\(c_1\\)\n\\(d_1\\)\n\n\n\\(t_2\\)\na\nb\nc\nd\n\n\n\\(t_3\\)\n\\(a_3\\)\n\\(b_3\\)\nc\nd\n\n\n\nOn a bien fait appara√Ætre \\(t\\) qui appartient donc √† \\(R\\)."
  },
  {
    "objectID": "slides/DF_norm_1.html#algorithme-de-poursuite---exemple-3",
    "href": "slides/DF_norm_1.html#algorithme-de-poursuite---exemple-3",
    "title": "Normalisation I",
    "section": "Algorithme de poursuite - exemple 3",
    "text": "Algorithme de poursuite - exemple 3\nConsid√©rons toujours l‚Äôexemple : \\(\\mathcal{A}=\\{A,B,C,D\\}\\) avec\n\\(\\mathcal{A}_1=\\{A,B\\}\\), \\(\\mathcal{A}_2=\\{B,C\\}\\) et \\(\\mathcal{A}_3=\\{C,D\\}\\)\nMais avec \\(\\Sigma=\\{{B}\\rightarrow{AD}\\}\\).\n\n\nA\nB\nC\nD\n\n\n\na\nb\n\\(c_1\\)\n\\(d_1\\)\n\n\n\\(a_2\\)\nb\nc\n\\(d_2\\)\n\n\n\\(a_3\\)\n\\(b_3\\)\nc\nd\n\n\n\nDans ce cas, en utilisant la seule DF \\({B}\\rightarrow{AD}\\), on obtient \\(a_2=a\\) et \\(d_1=d_2\\) :\n\n\nA\nB\nC\nD\n\n\n\na\nb\n\\(c_1\\)\n\\(d_1\\)\n\n\na\nb\nc\n\\(d_1\\)\n\n\n\\(a_3\\)\n\\(b_3\\)\nc\nd\n\n\n\n\n\n\n\n\n\nNote\n\n\nMais on ne peut aller plus loin : la jointure des projections contient des tuples qui ne sont pas dans la relation originelle"
  },
  {
    "objectID": "slides/Modelisation_1.html#pourquoi",
    "href": "slides/Modelisation_1.html#pourquoi",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Pourquoi ?",
    "text": "Pourquoi ?\nPour construire/concevoir des bases de donn√©es utiles, il n‚Äôest pas facile d‚Äôutiliser imm√©diatement le Langage de D√©finition de Donn√©es (partie de SQL)\n\nIl est plus raisonnable de s‚Äôappuyer sur\n\n\n\nUn formalisme pour d√©crire les informations √† int√©grer dqns une base\nUn formalisme pour d√©crire les liens entre ses informations\nUn formalisme lisible par les humains\nUn formalisme traduisible dans un Langage de D√©finition de Donn√©es, c‚Äôest-√†-dire dans un langage o√π tout doit se d√©crire √† l‚Äôaide de tables et de contraintes"
  },
  {
    "objectID": "slides/Modelisation_1.html#comment",
    "href": "slides/Modelisation_1.html#comment",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Comment ?",
    "text": "Comment ?\nDepuis les temps originels des Bases de Donn√©es, on a multipli√© les formalismes, les m√©thodes de conception\nLes diff√©rents formalismes sont presque toujours des variations autour du mod√®le dit Entit√©-Association propos√© par Chen en 1976"
  },
  {
    "objectID": "slides/Modelisation_1.html#mod√®le-entit√©-association-eaer",
    "href": "slides/Modelisation_1.html#mod√®le-entit√©-association-eaer",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Mod√®le Entit√©-Association (EA/ER)",
    "text": "Mod√®le Entit√©-Association (EA/ER)\nPeter Chen, the father of ER modeling √©crivait dans le texte fondateur:\n\nThe entity-relationship model adopts the more natural view that the real world consists of entities and relationships. It incorporates some of the important semantic information about the real world.\n\nDans l‚Äôarticle de 1976, Chen distingue explicitement les diagrammes entit√©‚Äìassociations des techniques de mod√©lisation par record:\n\nThe data structure diagram is a representation of the organization of records and is not an exact representation of entities and relationships.\n\n\n\nVoir La S√©mantique selon wikipedia"
  },
  {
    "objectID": "slides/Modelisation_1.html#definition",
    "href": "slides/Modelisation_1.html#definition",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Definition",
    "text": "Definition\n\n\n\n\n\n\nD√©finition\n\n\nUne entit√© est un ensemble d‚Äôobjets apparent√©s. Les √©l√©ments d‚Äôune entite sont appel√©es instances.\n\n\n\n\n\n\n\n\n\nNote\n\n\nTout ensemble d‚Äôobjets n‚Äôest pas n√©cessairement consid√©r√© comme une entit√©.\nC‚Äôest la d√©cision de l‚Äô√©quipe de mod√©lisation qui constitue les entit√©s."
  },
  {
    "objectID": "slides/Modelisation_1.html#exemple-dentit√©s-world",
    "href": "slides/Modelisation_1.html#exemple-dentit√©s-world",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemple d‚Äôentit√©s (world)",
    "text": "Exemple d‚Äôentit√©s (world)\nPour la constitution de la base de donn√©es de g√©ographie politique world, la mod√©lisation choisirait les entit√©s :\n\ncountry: les pays/territoires\ncity: les villes de population urbaine sup√©rieure √† un seuil donn√© lors de la constitution de la base\nlanguage: les langues parl√©es lors de la constitution de la base"
  },
  {
    "objectID": "slides/Modelisation_1.html#exemple-dentit√©s-nycflights",
    "href": "slides/Modelisation_1.html#exemple-dentit√©s-nycflights",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemple d‚Äôentit√©s (nycflights)",
    "text": "Exemple d‚Äôentit√©s (nycflights)\nPour la mod√©lisation du traffic a√©rien civil aux √âtats-Unis, on peut consid√©rer les entit√©s suivantes\n\nairports: les a√©roports (civils, sur le sol des √âtats-Unis)\nairlines: les compagnies a√©riennes\nplanes : les avions (a√©ronefs)"
  },
  {
    "objectID": "slides/Modelisation_1.html#les-noms-et-les-notations-graphiques",
    "href": "slides/Modelisation_1.html#les-noms-et-les-notations-graphiques",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Les noms et les notations graphiques",
    "text": "Les noms et les notations graphiques\nLes entit√©s sont g√©n√©ralement associ√©es √† des noms (substantifs). Une entit√© est en effet une collection d‚Äôobjets apparent√©s (avec des caract√©riques communes)\n\nDans les diagrammes EA, les entit√©s sont repr√©sent√©es par des rectangles. Le nom de l‚Äôentit√© est inscrit au centre du rectangle."
  },
  {
    "objectID": "slides/Modelisation_1.html#instances-et-entit√©s",
    "href": "slides/Modelisation_1.html#instances-et-entit√©s",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Instances et Entit√©s",
    "text": "Instances et Entit√©s\n\n\n\n\n\n\nD√©finition\n\n\nUne instance est un √©l√©ment d‚Äôune entit√©.\n\n\n\n\nDans word, le pays Luxemburg est une instance de country.\nLes instances d‚Äôune entit√© sont discernables (pas d‚Äô√©l√©ments dupliqu√©s)\n\n\n\nLe jargon de la mod√©lisation EA nomme des notions qui sont d√©j√† pr√©sentes dans la th√©orie na√Øve des ensembles (le langage des math√©maticiens)"
  },
  {
    "objectID": "slides/Modelisation_1.html#attributs",
    "href": "slides/Modelisation_1.html#attributs",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Attributs",
    "text": "Attributs\n\n\n\n\n\n\nD√©finition\n\n\nUn attribut est une fonction qui envoie une entit√© dans un domaine (ensemble de valeurs, type)\n\n\n\n\nDans world, l‚Äôattribut name envoie country vers l‚Äôensemble des cha√Ænes de caract√®res. Dans l‚Äô√©galit√© name(Luxemburg) = \"Luxemburg\", √† gauche Luxemburg d√©signe le pays, √† droite, \"Luxemburg\" est une cha√Æne de caract√®res\nL‚Äôattribut population envoie country vers les entiers (positifs)\n\n\nDans les diagrammes EA, les attributs sont repr√©sent√©s par des ellipses. Le nom de l‚Äôattribut est plac√© au centre de l‚Äôellipse\nUn ar√™te relie l‚Äôellipse attribut au rectangle entit√©."
  },
  {
    "objectID": "slides/Modelisation_1.html#attributs-notation-graphique",
    "href": "slides/Modelisation_1.html#attributs-notation-graphique",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Attributs (notation graphique)",
    "text": "Attributs (notation graphique)\n\n\n\n\n\n\nER\n\n\n\ncountry\n\ncountry\n\n\n\ncity\n\ncity\n\n\n\nname1\n\nname\n\n\n\ncity--name1\n\n\n\n\nlanguage\n\nlanguage\n\n\n\nname2\n\nname\n\n\n\nlanguage--name2\n\n\n\n\nname0\n\nname\n\n\n\nname0--country\n\n\n\n\npopulation\n\npopulation\n\n\n\npopulation--country\n\n\n\n\ngovernmentForm\n\ngovernmentForm\n\n\n\ngovernmentForm--country\n\n\n\n\nheadOfState\n\nheadOfState\n\n\n\nheadOfState--country"
  },
  {
    "objectID": "slides/Modelisation_1.html#identifiant",
    "href": "slides/Modelisation_1.html#identifiant",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Identifiant",
    "text": "Identifiant\n\n\n\n\n\n\nD√©finition\n\n\nPour une entit√©, un identifiant est un attribut qui envoie deux instances distinctes vers deux valeurs distinctes du domaine.\n\n\n\n\n\n\n\n\n\nAstuce\n\n\nUn identifiant est un attribut (une fonction) injectif(ve)\nDans un sch√©ma EA, on choisit un attribut injectif et on le d√©signe comme identifiant en soulignant le nom de l‚Äôattribut.\n L‚Äôidentifiant d‚Äôune entit√© n‚Äôest pas le nom de l‚Äôentit√©"
  },
  {
    "objectID": "slides/Modelisation_1.html#identifiant-exemple",
    "href": "slides/Modelisation_1.html#identifiant-exemple",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Identifiant (exemple)",
    "text": "Identifiant (exemple)\nLa norme ISO-3166 associe √† chaque pays un code en deux lettres (alpha-2). Pour le Luxemburg, il s‚Äôagit de LU\nLa norme ISO-3166 associe √† chaque pays un code en trois lettres (alpha-3). Pour le Luxemburg, il s‚Äôagit de LUX\n\n\nNorme ISO 3166 selon Wikipedia"
  },
  {
    "objectID": "slides/Modelisation_1.html#identifiant-repr√©sentation",
    "href": "slides/Modelisation_1.html#identifiant-repr√©sentation",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Identifiant (repr√©sentation)",
    "text": "Identifiant (repr√©sentation)\n\n\n\n\n\n\nER\n\n\n\ncountry\n\ncountry\n\n\n\niso\n\niso3\n\n\n\ncountry--iso\n\n\n\n\ncity\n\ncity\n\n\n\nname1\n\nname\n\n\n\ncity--name1\n\n\n\n\nlanguage\n\nlanguage\n\n\n\nname2\n\nname\n\n\n\nlanguage--name2\n\n\n\n\nname0\n\nname\n\n\n\nname0--country\n\n\n\n\npopulation\n\npopulation\n\n\n\npopulation--country\n\n\n\n\ngovernmentForm\n\ngovernmentForm\n\n\n\ngovernmentForm--country\n\n\n\n\nheadOfState\n\nheadOfState\n\n\n\nheadOfState--country\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nOn singularise les identifiants en les soulignant."
  },
  {
    "objectID": "slides/Modelisation_1.html#section-2",
    "href": "slides/Modelisation_1.html#section-2",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "",
    "text": "D√©finition\n\n\nUne association \\(\\mathcal{A}\\) $entre les entit√©s \\(E_1,E_2, \\ldots, E_k\\), est un sous-ensemble de \\(E_1 \\times E_2 \\times \\ldots \\times E_k\\)\nLes entit√©s \\(E_1,E_2, \\ldots, E_k\\) participent √† l‚Äôassociation \\(A\\).\nLes √©l√©ments de l‚Äôassociation sont (aussi) appel√©s instance\nDans un diagramme EA, une association est repr√©sent√©e par un losange. Le nom de l‚Äôassociation est inscrit au centre du losange. Les rectangles des entit√©s participantes sont reli√©s au losange de l‚Äôassociation par des ar√™tes.\n\n\n\n\n\n\n\n\n\nRemarque\n\n\nUne association porte un nom\nUne association peut poss√©der des attributs qui sont des fonctions de l‚Äôassociation vers un domaine/type."
  },
  {
    "objectID": "slides/Modelisation_1.html#association-exemple",
    "href": "slides/Modelisation_1.html#association-exemple",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Association (exemple)",
    "text": "Association (exemple)\nDans world, on peut d√©finir une association is-in entre les entit√©s city et country."
  },
  {
    "objectID": "slides/Modelisation_1.html#graphique",
    "href": "slides/Modelisation_1.html#graphique",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Graphique",
    "text": "Graphique\n\n\n\n\n\n\nER\n\n\n\ncountry\n\ncountry\n\n\n\niso\n\niso3\n\n\n\ncountry--iso\n\n\n\n\ncity\n\ncity\n\n\n\nname1\n\nname\n\n\n\ncity--name1\n\n\n\n\nid\n\nid\n\n\n\ncity--id\n\n\n\n\nis-in\n\nis-in\n\n\n\ncity--is-in\n\n\n\n\nis-capital\n\nis-capital\n\n\n\ncity--is-capital\n\n\n\n\nlanguage\n\nlanguage\n\n\n\nname2\n\nname\n\n\n\nlanguage--name2\n\n\n\n\nisol\n\niso\n\n\n\nlanguage--isol\n\n\n\n\nis-spoken-in\n\nis-spoken-in\n\n\n\nlanguage--is-spoken-in\n\n\n\n\nname0\n\nname\n\n\n\nname0--country\n\n\n\n\npopulation\n\npopulation\n\n\n\npopulation--country\n\n\n\n\ngovernmentForm\n\ngovernmentForm\n\n\n\ngovernmentForm--country\n\n\n\n\nheadOfState\n\nheadOfState\n\n\n\nheadOfState--country\n\n\n\n\nis-in--country\n\n\n\n\nis-spoken-in--country\n\n\n\n\nis-capital--country"
  },
  {
    "objectID": "slides/Modelisation_1.html#remarques-suite",
    "href": "slides/Modelisation_1.html#remarques-suite",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Remarques (suite)",
    "text": "Remarques (suite)\n\n\n\n\n\n\nNote\n\n\nUne association est repr√©sent√©e par un losange, elle est nomm√©e.\nLe losange est reli√© aux dff√©rentes entit√©s participantes par une ar√™te\nLe nom d‚Äôune association refl√®te (en principe) la signification de cette association.\nLe nom d‚Äôune association renvoie souvent √† un verbe, pas forc√©mment d‚Äôaction\n\n\n\n\n\n\n\n\n\nAvertissement\n\n\nIl n‚Äôest pas toujours √©vident de lire sur le graphique le r√¥le jou√© par les diff√©rentes entit√©s participantes dans une association. Bien nommer aide."
  },
  {
    "objectID": "slides/Modelisation_1.html#attributs-dassociation",
    "href": "slides/Modelisation_1.html#attributs-dassociation",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Attributs d‚Äôassociation",
    "text": "Attributs d‚Äôassociation\nUne association peut poss√©der des attributs.\nGraphiquement, les attributs d‚Äôassociation sont repr√©sent√©s comme les attributs d‚Äôentit√©, par des ellipses. Les ellipses sont reli√©es au losange de l‚Äôassociation par une ar√™te\n\nDans world, l‚Äôassociation is-spoken-in peut √™tre munie d‚Äôun attribut official qui pr√©cise si une langue donn√©e est officielle dans un territoire donn√©."
  },
  {
    "objectID": "slides/Modelisation_1.html#partipations-multiples-√†-une-association",
    "href": "slides/Modelisation_1.html#partipations-multiples-√†-une-association",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Partipations multiples √† une association",
    "text": "Partipations multiples √† une association\n Une m√™me entit√© peut participer plusieurs fois √† une m√™me association\nOn distingue ces participations gr√¢ce √† des r√¥les qui √©tiquettent les ar√™tes qui relient le rectangle entit√© au losange association."
  },
  {
    "objectID": "slides/Modelisation_1.html#exemples-de-r√¥le-dans-une-association-r√©flexive",
    "href": "slides/Modelisation_1.html#exemples-de-r√¥le-dans-une-association-r√©flexive",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemples de r√¥le dans une association r√©flexive",
    "text": "Exemples de r√¥le dans une association r√©flexive\nDans une base de donn√©e g√©n√©alogique, on part d‚Äôune entit√© individu. On d√©finit une auto-association m√®re qui relie l‚Äôentit√© individu avec elle-m√™me.\n\nCette auto-association n‚Äôest pas sym√©trique: quand on √©crit qu‚ÄôElizabeth est m√®re de Charles, Elisabeth et Charles ne jouent pas le m√™me r√¥le.\n\n\nDans une instance \\((x,y)\\) de l‚Äôassociation m√®re \\(x\\) joue le r√¥le de la g√©nitrice, \\(y\\) de l‚Äôenfant.\n\n\nOn peut rendre compte de ces r√¥les en marquant les ar√™tes qui lient l‚Äôentit√© individu √† l‚Äôassociation m√®re (pour est-maman-de)"
  },
  {
    "objectID": "slides/Modelisation_1.html#une-association-darit√©-sup√©rireure-√†-2",
    "href": "slides/Modelisation_1.html#une-association-darit√©-sup√©rireure-√†-2",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Une association d‚Äôarit√© sup√©rireure √† 2",
    "text": "Une association d‚Äôarit√© sup√©rireure √† 2\nPour construire un mod√®le des vols a√©riens (comme dans nycflights13), on d√©finit des entit√©s airline plane, airport et une association quaternaire flight\n\nL‚Äôassociation flight est quaternaire: une instance de flight associe un a√©roport d‚Äôorigine √† un a√©roport de destination (2 ar√™tes entre airport et flight), elle associe aussi une instance de plane et une instance de airline\n\n\nOn distingue les deux participations de airport √† flight par des r√¥les"
  },
  {
    "objectID": "slides/Modelisation_1.html#principe-et-objet",
    "href": "slides/Modelisation_1.html#principe-et-objet",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Principe et objet",
    "text": "Principe et objet\nDans une association entre plusieurs entit√©s, les instances d‚Äôune entit√© peuvent participer a priori 0, 1, ou un nombre illimit√© de fois aux instances de l‚Äôassociation\nPour traduire les associations dans le langage des tables et des contraintes (LDD), il est tr√®s utile d‚Äôencadrer le plus pr√©cis√©ment possible le nombre de participations d‚Äôune instance d‚Äôune entit√© aux instances d‚Äôune associations\nLes cardinalit√©s sont des d√©corations sur les ar√™tes qui relient entit√©s et associations"
  },
  {
    "objectID": "slides/Modelisation_1.html#cas-des-relations-binaires-2-entit√©s",
    "href": "slides/Modelisation_1.html#cas-des-relations-binaires-2-entit√©s",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Cas des relations binaires (2 entit√©s)",
    "text": "Cas des relations binaires (2 entit√©s)"
  },
  {
    "objectID": "slides/Modelisation_1.html#exemples-11",
    "href": "slides/Modelisation_1.html#exemples-11",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemples 1:1",
    "text": "Exemples 1:1\nDans le mod√®le world,\n\nune instance de city appara√Æt 1 et 1 seule fois dans l‚Äôassociation is-in. On dira que is-in est de cardinalit√© 1:1 du c√¥t√© de city. Une ville se situe sur le territoire d‚Äôun pays (et d‚Äôun seul)"
  },
  {
    "objectID": "slides/Modelisation_1.html#exemples-1n",
    "href": "slides/Modelisation_1.html#exemples-1n",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemples 1:n",
    "text": "Exemples 1:n\nDans le mod√®le world,\n\nune instance de country peut appara√Ætre une nombre arbitraire de fois dans l‚Äôassociation ‚Äòis-in‚Äô. On dira que is-in est de cardinalit√© 0:n du c√¥t√© de city. Un territoire peut ne comporter aucune ville de population sup√©rieure √† un seuil. Il n‚Äôy a pas de borne a priori sur le nombre de grandes villes situ√©es sur un territoire"
  },
  {
    "objectID": "slides/Modelisation_1.html#exemples-0n",
    "href": "slides/Modelisation_1.html#exemples-0n",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemples 0:n",
    "text": "Exemples 0:n\nDans le mod√®le world,\n\nune instance de language peut appara√Ætre une nombre arbitraire de fois dans l‚Äôassociation is-spoken-in. On dira que is-spoken-in est de cardinalit√© 0:n du c√¥t√© de language.\nune instance de country peut appara√Ætre une nombre arbitraire de fois dans l‚Äôassociation ‚Äòis-spoken-in‚Äô. On dira que is-spoken-in est de cardinalit√© 0:n du c√¥t√© de country."
  },
  {
    "objectID": "slides/Modelisation_1.html#diagrammes",
    "href": "slides/Modelisation_1.html#diagrammes",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Diagrammes",
    "text": "Diagrammes\nUne indication de cardinalit√© comporte une borne inf√©rieure (0 ou 1) et une borne sup√©rieure (1 ou \\(n\\))\nOn d√©core le lien entit√©-association avec l‚Äôindication de cardinalit√©"
  },
  {
    "objectID": "slides/Modelisation_1.html#repr√©sentation-graphique-des-cardinalit√©s",
    "href": "slides/Modelisation_1.html#repr√©sentation-graphique-des-cardinalit√©s",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Repr√©sentation graphique des cardinalit√©s",
    "text": "Repr√©sentation graphique des cardinalit√©s\n\n\n\n\n\n\nER\n\n\n\ncountry\n\ncountry\n\n\n\niso\n\niso3\n\n\n\ncountry--iso\n\n\n\n\ncity\n\ncity\n\n\n\nname1\n\nname\n\n\n\ncity--name1\n\n\n\n\nid\n\nid\n\n\n\ncity--id\n\n\n\n\nis-in\n\nis-in\n\n\n\ncity--is-in\n\n1:1\n\n\n\nis-capital\n\nis-capital\n\n\n\ncity--is-capital\n\n0:1\n\n\n\nlanguage\n\nlanguage\n\n\n\nname2\n\nname\n\n\n\nlanguage--name2\n\n\n\n\nisol\n\niso\n\n\n\nlanguage--isol\n\n\n\n\nis-spoken-in\n\nis-spoken-in\n\n\n\nlanguage--is-spoken-in\n\n0:n\n\n\n\nname0\n\nname\n\n\n\nname0--country\n\n\n\n\npopulation\n\npopulation\n\n\n\npopulation--country\n\n\n\n\ngovernmentForm\n\ngovernmentForm\n\n\n\ngovernmentForm--country\n\n\n\n\nheadOfState\n\nheadOfState\n\n\n\nheadOfState--country\n\n\n\n\nis-in--country\n\n0:n\n\n\n\nis-spoken-in--country\n\n0:n\n\n\n\nis-capital--country\n\n0:1"
  },
  {
    "objectID": "slides/Modelisation_1.html#repr√©sentation-graphique-des-cardinalit√©s-suite",
    "href": "slides/Modelisation_1.html#repr√©sentation-graphique-des-cardinalit√©s-suite",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Repr√©sentation graphique des cardinalit√©s (suite)",
    "text": "Repr√©sentation graphique des cardinalit√©s (suite)\nOn peut utilement pr√©ciser les cardinalit√©s dans notre sch√©ma des vols.\n\n\n\n\n\n\nER\n\n\n\nairport\n\nairport\n\n\n\nflight\n\nflight\n\n\n\nairport--flight\n\norig\n0:n\n\n\n\nplane\n\nplane\n\n\n\nairline\n\nairline\n\n\n\nflight--airport\n\ndest\n0:n\n\n\n\nflight--plane\n\n0:n\n\n\n\nflight--airline\n\n0:n"
  },
  {
    "objectID": "slides/Modelisation_1.html#d√©finition-6",
    "href": "slides/Modelisation_1.html#d√©finition-6",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "D√©finition",
    "text": "D√©finition\n\n\n\n\n\n\nNote\n\n\nUne entit√© faible \\(E\\) est d√©finie relativement √† une entit√© \\(A\\). C‚Äôest une collection d‚Äôobjets apparent√©s (comme une entit√©), mais chaque instance de \\(E\\) est li√©e (est partie de) √† une et une seule instance de \\(A\\)."
  },
  {
    "objectID": "slides/Modelisation_1.html#exemple",
    "href": "slides/Modelisation_1.html#exemple",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemple",
    "text": "Exemple\nDans world, on peut consid√©rer que les instances de country sont des unit√©s territoriales de niveau 0. Ces unit√©s territoriales de niveau 1 sont parfois d√©coup√©es en unit√©s territoriales de niveau 1 : les r√©gions en France, en Italie, les L√§nder en Allemagne, ‚Ä¶\nChaque unit√© territoriale de niveau 1 est situ√©e dans une et une seule unit√© territoriale de niveau 0, elle fait partie de l‚Äôunit√© territoriale de niveau 0.\nUnit√©s territoriales\n\nNous allons ajouter √† notre mod√®le EA G√©ographie une entit√© faible appel√©e nut1 (pour Nouvelle Unit√© Territoriale de niveau 1)\nL‚Äôentit√© faible nut1 est li√©e √† l‚Äôentit√© forte country par une association faible is-in."
  },
  {
    "objectID": "slides/Modelisation_1.html#diagrammes-pour-les-entit√©s-faibles",
    "href": "slides/Modelisation_1.html#diagrammes-pour-les-entit√©s-faibles",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Diagrammes pour les entit√©s faibles",
    "text": "Diagrammes pour les entit√©s faibles\n\n\n\n\n\n\nER\n\n\n\ncountry\n\ncountry\n\n\n\niso\n\niso3\n\n\n\ncountry--iso\n\n\n\n\ncity\n\ncity\n\n\n\nname1\n\nname\n\n\n\ncity--name1\n\n\n\n\nid\n\nid\n\n\n\ncity--id\n\n\n\n\nis-in\n\nis-in\n\n\n\ncity--is-in\n\n1:1\n\n\n\nis-capital\n\nis-capital\n\n\n\ncity--is-capital\n\n0:1\n\n\n\nlanguage\n\nlanguage\n\n\n\nname2\n\nname\n\n\n\nlanguage--name2\n\n\n\n\nisol\n\niso\n\n\n\nlanguage--isol\n\n\n\n\nis-spoken-in\n\nis-spoken-in\n\n\n\nlanguage--is-spoken-in\n\n0:n\n\n\n\nname0\n\nname\n\n\n\nname0--country\n\n\n\n\npopulation\n\npopulation\n\n\n\npopulation--country\n\n\n\n\ngovernmentForm\n\ngovernmentForm\n\n\n\ngovernmentForm--country\n\n\n\n\nheadOfState\n\nheadOfState\n\n\n\nheadOfState--country\n\n\n\n\nis-in--country\n\n0:n\n\n\n\nis-spoken-in--country\n\n0:n\n\n\n\nis-capital--country\n\n0:1\n\n\n\nnut1\n\n\nnut1\n\n\n\nis-in2\n\n\nis-in\n\n\n\nnut1--is-in2\n\n1:1\n\n\n\nis-in2--country\n\n0:n"
  },
  {
    "objectID": "slides/Modelisation_1.html#identifiant-pour-les-entit√©s-faibles",
    "href": "slides/Modelisation_1.html#identifiant-pour-les-entit√©s-faibles",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Identifiant pour les entit√©s faibles",
    "text": "Identifiant pour les entit√©s faibles\nPour identifier une instance d‚Äôune entit√© faible, on utilise l‚Äôidentifiant de l‚Äôinstance associ√©e de l‚Äôentit√© faible et on le compl√®te √† l‚Äôaide d‚Äôun identifiant relatif.\n Deux instances distinctes d‚Äôune identit√© faible peuvent porter le m√™me identifiant relatif (si elles sont parties de deux instances diff√©rentes de l‚Äôentit√© forte).\n\nNous ajoutons √† notre mod√®le EA un identifiant relatif/faible id pour l‚Äôentit√© faible nut1\nPour identifier une instance de nut1, il faut disposer de son identifiant relatif id et de l‚Äôidentifiant iso3 de l‚Äôinstance associ√©e dans l‚Äôentit√© forte.\nOn dit que l‚Äôassociation faible is-in est identifiante"
  },
  {
    "objectID": "slides/Modelisation_1.html#d√©finition-7",
    "href": "slides/Modelisation_1.html#d√©finition-7",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "D√©finition",
    "text": "D√©finition"
  },
  {
    "objectID": "slides/Modelisation_1.html#exemples",
    "href": "slides/Modelisation_1.html#exemples",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemples",
    "text": "Exemples"
  },
  {
    "objectID": "slides/Modelisation_1.html#association-darit√©-quelconque-en-associations-binaires",
    "href": "slides/Modelisation_1.html#association-darit√©-quelconque-en-associations-binaires",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Association d‚Äôarit√© quelconque en associations binaires",
    "text": "Association d‚Äôarit√© quelconque en associations binaires\nOn d√©finit une entit√© faible de m√™me nom que l‚Äôassociation.\nPour chaque entit√© participant √† l‚Äôassociation, on d√©finit une association faible entre l‚Äôentit√© participante et la nouvelle entit√© faible.\nSi une entit√© participe plusieurs fois √† l‚Äôassociation, on d√©finit autant d‚Äôassociations faibles qu‚Äôon nomme √† l‚Äôaide des r√¥les\nL‚Äôentit√© faible participe aux associations faibles avec une cardinalit√© 1:1\nLes entit√©s participantes sont reli√©es aux associations faibles avec les cardinalit√©s de leur participation √† l‚Äôassociatoin \\(n\\)-aire."
  },
  {
    "objectID": "slides/Modelisation_1.html#transformation-du-diagramme-des-vols",
    "href": "slides/Modelisation_1.html#transformation-du-diagramme-des-vols",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Transformation du diagramme des vols",
    "text": "Transformation du diagramme des vols\nOn d√©finit donc\n\nune entit√© faible flight\nquatre associations faibles dest, orig, operates, uses\n\n\nLes quatre associations faibles sont identifiantes\nPour identifier une instance de l‚Äôentit√© faible flight, il faut disposer des identifiants des instances des entit√©s fortes associ√©es (une par entit√© forte, compte tenu des cardinalit√©s)"
  },
  {
    "objectID": "slides/Modelisation_1.html#d√©finition-8",
    "href": "slides/Modelisation_1.html#d√©finition-8",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "D√©finition",
    "text": "D√©finition\n\n\n\n\n\n\nD√©finition\n\n\nUne association est-un entre une entit√© A et une entit√© B indique que toute instance (√©l√©ment) de A est aussi instance (√©l√©ment) de B (autrement dit en langage ensembliste que A ‚äÜ B)\nOn note graphiquement les associations est-un avec un symbole sp√©cial : un triangle (A ‚óÉ B)\n\n\n\n\n\n\n\n\n\n\nRemarques\n\n\n\nUne association est-un est binaire\nUne entit√© peut participer √† plusieurs associations est-un\nSi A ‚óÉ B on dit (souvent) que A est une sp√©cialisation de B"
  },
  {
    "objectID": "slides/Modelisation_1.html#propri√©t√©",
    "href": "slides/Modelisation_1.html#propri√©t√©",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Propri√©t√©",
    "text": "Propri√©t√©\nPour les associations est-un, il n‚Äôest pas n√©cessaire de pr√©ciser les cardinalit√©s.\n\n\n\n\n\n\nCardinalit√©s des associations est-un\n\n\n\n1:1 du c√¥t√© de l‚Äôentit√© sp√©cialis√©e\n0:1 du c√¥t√© de l‚Äôentit√© g√©n√©rale\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nL‚Äôassociation est identifiante : une instance de l‚Äôentit√© sp√©cialis√©e h√©rite de l‚Äôidentifiant de l‚Äôentit√© g√©n√©rale"
  },
  {
    "objectID": "slides/Modelisation_1.html#exemple-1",
    "href": "slides/Modelisation_1.html#exemple-1",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Exemple",
    "text": "Exemple\nUn m√©decin peut exercer en mode lib√©ral, au sein d‚Äôun cabinet, ou dans une clinique (ou les deux) ou exercer en milieu hospitalier.\nIl est aussi possible qu‚Äôun m√©decin partage son temps entre une activit√© hospitali√®re et une activit√© lib√©rale.\nOn peut d√©finir une entit√© g√©n√©rale m√©decin et deux entit√©s sp√©cialis√©es hospitalier et lib√©ral. Les entit√©s sp√©cialis√©es sont reli√©es √† l‚Äôentit√© g√©n√©rale par une association est-un.\n Une association est-un nous indique qu‚Äôune entit√© (un emsemble) est incluse dans une autre entit√© (un au ensemble)\nTout attribut (fonction) d√©fini sur l‚Äôentit√© g√©n√©rale est d√©fini sur les entit√©s sp√©cialis√©es\nCertains attributs peuvent √™tre d√©finis sur une entit√© sp√©cialis√©e sans √™tre d√©finis sur toute l‚Äôentit√© g√©n√©rale\nPar exemple, on peut d√©finir un attribut h√¥pital pour l‚Äôentit√© hospitalier, et un attribut cabinet pour l‚Äôentit√© lib√©ral."
  },
  {
    "objectID": "slides/Modelisation_1.html#diagramme",
    "href": "slides/Modelisation_1.html#diagramme",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Diagramme",
    "text": "Diagramme\n\n\n\n\n\n\nER\n\n\n\nm√©decin\n\nm√©decin\n\n\n\nmatricule\n\nmatricule\n\n\n\nm√©decin--matricule\n\n\n\n\nhospitalier\n\nhospitalier\n\n\n\nis-a-1\n\nest-un\n\n\n\nhospitalier--is-a-1\n\n\n\n\nlib√©ral\n\nlib√©ral\n\n\n\nis-a-2\n\nest-un\n\n\n\nlib√©ral--is-a-2\n\n\n\n\nis-a-1--m√©decin\n\n\n\n\nis-a-2--m√©decin\n\n\n\n\nh√¥pital\n\nh√¥pital\n\n\n\nh√¥pital--hospitalier\n\n\n\n\ncabinet\n\ncabinet\n\n\n\ncabinet--lib√©ral"
  },
  {
    "objectID": "slides/Modelisation_1.html#compl√©ter-le-sch√©ma",
    "href": "slides/Modelisation_1.html#compl√©ter-le-sch√©ma",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Compl√©ter le sch√©ma",
    "text": "Compl√©ter le sch√©ma"
  },
  {
    "objectID": "slides/Modelisation_1.html#types-de-contraintes",
    "href": "slides/Modelisation_1.html#types-de-contraintes",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Types de contraintes",
    "text": "Types de contraintes\n\nContraintes d‚Äôexclusion\n\nDans nycflights, deux instances de l‚Äôassociation flights portant sur le m√™me a√©ronef ne devraient pas se chevaucher dans le temps\n\nContraintes de sp√©cialisation"
  },
  {
    "objectID": "slides/Modelisation_1.html#contrainte-de-sp√©cialisation-disjointe",
    "href": "slides/Modelisation_1.html#contrainte-de-sp√©cialisation-disjointe",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Contrainte de sp√©cialisation disjointe",
    "text": "Contrainte de sp√©cialisation disjointe"
  },
  {
    "objectID": "slides/Modelisation_1.html#contrainte-de-sp√©cialisation-totale",
    "href": "slides/Modelisation_1.html#contrainte-de-sp√©cialisation-totale",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Contrainte de sp√©cialisation totale",
    "text": "Contrainte de sp√©cialisation totale"
  },
  {
    "objectID": "slides/Modelisation_1.html#contrainte-de-sp√©cialisation-disjointe-et-totale",
    "href": "slides/Modelisation_1.html#contrainte-de-sp√©cialisation-disjointe-et-totale",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Contrainte de sp√©cialisation disjointe et totale",
    "text": "Contrainte de sp√©cialisation disjointe et totale"
  },
  {
    "objectID": "slides/Modelisation_1.html#restructuration-des-sp√©cialisations",
    "href": "slides/Modelisation_1.html#restructuration-des-sp√©cialisations",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Restructuration des sp√©cialisations",
    "text": "Restructuration des sp√©cialisations\nPourquoi ?\n\nPlusieurs mani√®res de proc√©der:\n\n√âliminer les entit√©s m√®res OU\n√âliminer les entit√©s filles"
  },
  {
    "objectID": "slides/Modelisation_1.html#restructuration-des-sp√©cialisations-avec-des-associations",
    "href": "slides/Modelisation_1.html#restructuration-des-sp√©cialisations-avec-des-associations",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Restructuration des sp√©cialisations avec des associations",
    "text": "Restructuration des sp√©cialisations avec des associations"
  },
  {
    "objectID": "slides/Modelisation_1.html#rapport-des-contraintes",
    "href": "slides/Modelisation_1.html#rapport-des-contraintes",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Rapport des contraintes",
    "text": "Rapport des contraintes"
  },
  {
    "objectID": "slides/Modelisation_1.html#sites-et-livres",
    "href": "slides/Modelisation_1.html#sites-et-livres",
    "title": "Mod√©lisation I : Entit√©/Association",
    "section": "Sites et Livres",
    "text": "Sites et Livres\n\nGarcia-Molina, H., Ullman, J. D., & Widom, J. (2002). Database systems-the complete book (International Ed.). Prenctice Hall, Upper Saddle River.\nChen, P. P. S. (1976). The entity-relationship model‚Äîtoward a unified view of data. ACM transactions on database systems (TODS), 1(1), 9-36.\nSilberschatz, A., Korth, H. F., & Sudarshan, S. (2011). Database system concepts."
  },
  {
    "objectID": "slides/LDD_1.html#probl√®me",
    "href": "slides/LDD_1.html#probl√®me",
    "title": "BD : Contraintes",
    "section": "Probl√®me",
    "text": "Probl√®me\n\nLa d√©finition d‚Äôun sch√©ma de base ne s‚Äôarr√™te pas √† la d√©finition des tables, des colonnes et des types des colonnes\n\n\n\nLes contraintes d√©crivent des propri√©t√©s que devront v√©rifier toutes les mises en oeuvre (instances) du sch√©ma durant toute sa dur√©e de vie\n\n\n La d√©finition d‚Äôun sch√©ma de base ne s‚Äôarr√™te pas √† la d√©finition des tables, des colonnes et des types des colonnes\nLes contraintes d√©crivent des propri√©t√©s que devront v√©rifier toutes les mises en oeuvre (instances) du sch√©mas durant toute leur dur√©e de vie\n Pour sp√©cifier une contrainte, il suffit de pr√©ciser que le r√©sultat d‚Äôune certaine requ√™te doit toujours √™tre vide"
  },
  {
    "objectID": "slides/LDD_1.html#famille-de-contraintes",
    "href": "slides/LDD_1.html#famille-de-contraintes",
    "title": "BD : Contraintes",
    "section": "Famille de contraintes",
    "text": "Famille de contraintes\n\n\nContraintes d‚Äôattribut\n\nContrainte de type\n\nContrainte de non-nullit√©\n\n\n\n\n\n\n\nContraintes de tupe\n\nContrainte de v√©rification\n\n\n\n\n\n\n\n\nContraintes de table\n\nContrainte de cl√© primaire\n\nContrainte d‚Äôunicit√©\n\nContrainte d‚Äôunicit√© avanc√©e\n\nContraintes d‚Äôexclusion\n\n\n\n\n\n\n\nContraintes multi-tables\n\nContraintes de cl√© √©trang√®re"
  },
  {
    "objectID": "slides/LDD_1.html#contrainte-de-type",
    "href": "slides/LDD_1.html#contrainte-de-type",
    "title": "BD : Contraintes",
    "section": "Contrainte de type",
    "text": "Contrainte de type\nUne contrainte de type sp√©cifie le type/domaine d‚Äôune colonne\nLes contrainte de type sont les plus simples √† mettre en oeuvre.\n\nAu del√† des types de base varchar, integer, ... PostgreSQL propose des types sophistiqu√©s pour :\n\n\ndates,\n\nles estampilles avec ou sans fuseau horaire,\ndes types intervalles (rangetype),\n\ndes types √©num√©r√©s,\n\ndes types tableaux,\netc"
  },
  {
    "objectID": "slides/LDD_1.html#consulter-la-liste-des-types",
    "href": "slides/LDD_1.html#consulter-la-liste-des-types",
    "title": "BD : Contraintes",
    "section": "Consulter la liste des types",
    "text": "Consulter la liste des types\nhttps://docs.postgresql.fr/docs/current/datatype.html\nIl faut essayer d‚Äôutiliser ces types pour pr√©ciser les contenus des colonnes\n\n\n\n\n\n\nConseil\n\n\nIl faut essayer d‚Äôutiliser autant que possible ces types pour pr√©ciser les contenus des colonnes\nCela permet de contraindre les contenus\nCela permet d‚Äôutiliser une foule de fonctions de manipulation tr√®s pratiques, notamment pour l‚Äôarithm√©tique du temps\n\n\n\n\n\n\n\n\n\n\nMise en garde\n\n\nLes types disponibles diff√®rent d‚Äôun SGBD √† l‚Äôautre (Mysql, Postgres, Oracle, SQL Server, ‚Ä¶)"
  },
  {
    "objectID": "slides/LDD_1.html#contraintes-de-tuple",
    "href": "slides/LDD_1.html#contraintes-de-tuple",
    "title": "BD : Contraintes",
    "section": "Contraintes de tuple",
    "text": "Contraintes de tuple\nUne contrainte de tuple peut √™tre v√©rifi√©e tuple par tuple (ligne par ligne)\n\nLors d‚Äôune insertion ou d‚Äôune modification de tuple, il suffit de v√©rifier que la contrainte est respect√©e par le nouveau tuple"
  },
  {
    "objectID": "slides/LDD_1.html#exemple",
    "href": "slides/LDD_1.html#exemple",
    "title": "BD : Contraintes",
    "section": "Exemple",
    "text": "Exemple\nDans un tuple de Piece, on devrait toujours avoir une valeur du prix positive.\nOn peut imposer cela en ajoutant au sch√©ma de la table Piece une contrainte de type CHECK"
  },
  {
    "objectID": "slides/LDD_1.html#exemple-suite",
    "href": "slides/LDD_1.html#exemple-suite",
    "title": "BD : Contraintes",
    "section": "Exemple (suite)",
    "text": "Exemple (suite)\nCREATE TABLE piece(\n    nomp VARCHAR(20),\n    prix MONEY CHECK (prix&gt;= 0::money), \n    couleur VARCHAR(15)\n);\n\n\n\n\n\n\n\nNote\n\n\nHave a look at PostGres Monetary type"
  },
  {
    "objectID": "slides/LDD_1.html#exemple-world.country",
    "href": "slides/LDD_1.html#exemple-world.country",
    "title": "BD : Contraintes",
    "section": "Exemple world.country\n",
    "text": "Exemple world.country\n\nDans un tuple de country, les colonnes num√©riques ne devraient pas prendre de valeur n√©gative\n\n\nCREATE TABLE world.country (\n    countrycode BPCHAR(3) NOT NULL,\n    name_country TEXT NOT NULL,\n    continent TEXT NOT NULL,\n    region TEXT NOT NULL,\n    surfacearea FLOAT4 CHECK (surfacearea&gt;= 0) NOT NULL, \n    indepyear INT2 NULL,\n    population_country INT4 NOT NULL,\n    lifeexpectancy FLOAT4 CHECK (lifeexpectancy&gt;= 0) NULL, \n    gnp NUMERIC(10, 2) NULL,    \n    gnpold NUMERIC(10, 2) NULL,  \n    localname TEXT NOT NULL,\n    governmentform TEXT NOT NULL,\n    headofstate TEXT NULL,\n    capital INT4 NULL,\n    code2 BPCHAR(2) NOT NULL,\n    CONSTRAINT country_continent_check CHECK (\n        ((continent = 'Asia'::text) OR (continent = 'Europe'::text) OR \n         (continent = 'North America'::text) OR (continent = 'Africa'::text) OR \n         (continent = 'Oceania'::text) OR (continent = 'Antarctica'::text) OR \n         (continent = 'South America'::text))),\n    CONSTRAINT country_pkey PRIMARY KEY (countrycode)\n);"
  },
  {
    "objectID": "slides/LDD_1.html#contrainte-de-v√©rification---exemple-suite",
    "href": "slides/LDD_1.html#contrainte-de-v√©rification---exemple-suite",
    "title": "BD : Contraintes",
    "section": "Contrainte de v√©rification - Exemple (suite)",
    "text": "Contrainte de v√©rification - Exemple (suite)\n\nCREATE TABLE piece(\n    nomp VARCHAR(20),\n    prix moNey CHECK (prix&gt;= 0::money),  \n    prix_promo MONEY CHECK (prix_promo &gt;= 0::MONEY), \n    couleur VARCHAR(15),\n    CHECK(prix &gt; prix_promo) \n); \n\n\nINSERT INTO piece \n  VALUES\n  ('x21', 1.51, 1.61,'rouge');\nERROR:  new row for relation \"piece\" violates check constraint piece_check \n\n\nINSERT INTO piece VALUES('x21', 1.51, null,'rouge');\nest accept√©"
  },
  {
    "objectID": "slides/LDD_1.html#valeurs-nulles-et-contraintes-de-tuple",
    "href": "slides/LDD_1.html#valeurs-nulles-et-contraintes-de-tuple",
    "title": "BD : Contraintes",
    "section": "\n Valeurs nulles et contraintes de tuple",
    "text": "Valeurs nulles et contraintes de tuple\nLes contraintes CHECK sont satisfaites si l‚Äôexpression associ√©e vaut TRUE ou NULL\n\nComme une expression compos√©e vaut parfois NULL si l‚Äôun des op√©randes vaut lui-m√™me NULL, les contraintes CHECK ne suffisent pas √† pr√©venir l‚Äôinsertion de valeurs nulles\n\n\n\n\n\n\n\n\nAstuce\n\n\nIl faut compl√©ter les contraintes de tuple avec des contraintes de non-nullit√©"
  },
  {
    "objectID": "slides/LDD_1.html#pourquoi-imposer-quune-colonne-soit-toujours-renseign√©e",
    "href": "slides/LDD_1.html#pourquoi-imposer-quune-colonne-soit-toujours-renseign√©e",
    "title": "BD : Contraintes",
    "section": "Pourquoi imposer qu‚Äôune colonne soit toujours renseign√©e ?",
    "text": "Pourquoi imposer qu‚Äôune colonne soit toujours renseign√©e ?\n\n\n\n\n\n\nImportant\n\n\nLa pr√©sence possible des valeurs nulles rend beaucoup d‚Äôop√©rations complexes\nIl faut avoir en t√™te que en SQL,\n\nles bool√©ens peuvent avoir trois valeurs : TRUE, FALSE et NULL et que\nle fait qu‚Äôune expression ne vaille pas FALSE ne veut pas dire qu‚Äôelle vaut TRUE ‚Ä¶\n\n\n\n\n\nPour imposer qu‚Äôune colonne soit renseign√©e :\n\npr√©ciser apr√®s le type : NOT NULL"
  },
  {
    "objectID": "slides/LDD_1.html#contrainte-de-non-nullit√©-exemple",
    "href": "slides/LDD_1.html#contrainte-de-non-nullit√©-exemple",
    "title": "BD : Contraintes",
    "section": "Contrainte de non-nullit√© (Exemple)",
    "text": "Contrainte de non-nullit√© (Exemple)\n\nCREATE TABLE piece(\n    nomp VARCHAR(20) NOT NULL,\n    prix MONEY CHECK (prix&gt;= 0::MONEY),  \n    prix_promo MONEY CHECK (prix_promo &gt;= 0::MONEY),  \n    couleur VARCHAR(15),\n    CHECK (prix &gt; prix_promo)   \n);"
  },
  {
    "objectID": "slides/LDD_1.html#contrainte-dunicit√©-1",
    "href": "slides/LDD_1.html#contrainte-dunicit√©-1",
    "title": "BD : Contraintes",
    "section": "Contrainte d‚Äôunicit√©",
    "text": "Contrainte d‚Äôunicit√©\n\nLes contraintes d‚Äôunicit√© garantissent l‚Äôunicit√© des donn√©es contenues dans une colonne ou un groupe de colonnes par rapport √† toutes les lignes de la table\nC‚Äôest une contrainte de table puisqu‚Äôelle fait intervenir tous les tuples de la table"
  },
  {
    "objectID": "slides/LDD_1.html#contrainte-dunicit√©-2",
    "href": "slides/LDD_1.html#contrainte-dunicit√©-2",
    "title": "BD : Contraintes",
    "section": "Contrainte d‚Äôunicit√©",
    "text": "Contrainte d‚Äôunicit√©\n\n\n\n\n\n\nNote\n\n\nLa contrainte d‚Äôunicit√© peut porter sur un groupe de colonnes\n\n\n\n\nCREATE TABLE fournisseur(\n    nomf VARCHAR(20) NOT NULL,\n    villef VARCHAR(20) NOT NULL,\n    UNIQUE(nomf, villef)  \n);\n\n\n\n Il ne peut pas y avoir deux lignes identiques dans la table fournisseur"
  },
  {
    "objectID": "slides/LDD_1.html#clef-primaire-primary-key",
    "href": "slides/LDD_1.html#clef-primaire-primary-key",
    "title": "BD : Contraintes",
    "section": "Clef primaire : PRIMARY KEY\n",
    "text": "Clef primaire : PRIMARY KEY\n\n\n\n\n\n\n\nD√©finition\n\n\nUne contrainte de type clef primaire indique qu‚Äôune colonne, ou un groupe de colonnes, peuvent √™tre utilis√©e comme un identifiant unique de ligne pour cette table.\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nCeci n√©cessite que les valeurs soient √† la fois uniques et NON NULL.\n\n\n\n\n\nLes d√©finitions de table suivantes acceptent de ce fait les m√™mes donn√©es\n\n\nCREATE TABLE fournisseur(\n    nomf VARCHAR(20) NOT NULL,\n    villef VARCHAR(20) NOT NULL,\n    UNIQUE(nomf, villef)  \n);\n\nCREATE TABLE fournisseur(\n    nomf VARCHAR(20),\n    villef VARCHAR(20),\n    PRIMARY KEY (nomf, villef)  \n);\n\n\n\n\n Une table a au plus une clef primaire"
  },
  {
    "objectID": "slides/LDD_1.html#clef-√©trang√®re-1",
    "href": "slides/LDD_1.html#clef-√©trang√®re-1",
    "title": "BD : Contraintes",
    "section": "Clef √©trang√®re",
    "text": "Clef √©trang√®re\n\nUne contrainte de clef √©trang√®re stipule que les valeurs d‚Äôune colonne (ou d‚Äôun groupe de colonnes) doivent correspondre aux valeurs qui apparaissent dans les lignes d‚Äôune autre table.\nOn dit que cela maintient l‚Äôint√©grit√© r√©f√©rentielle entre les deux tables\nSoit les deux tables suivantes\n\n\n\nCREATE TABLE fournisseur(\n    idf INT PRIMARY KEY,\n    nomf VARCHAR(20),\n    villef VARCHAR(20)\n);\n\nCREATE TABLE piece(\n    nomp VARCHAR(20) PRIMARY KEY,\n    prix MONEY CHECK \n        (prix&gt;= 0::MONEY),\n    prix_promo MONEY CHECK \n        (prix_promo &gt;= 0::MONEY),\n    couleur VARCHAR(15),\n    CHECK (prix &gt; prix_promo)\n);"
  },
  {
    "objectID": "slides/LDD_1.html#clef-√©trang√®re-references",
    "href": "slides/LDD_1.html#clef-√©trang√®re-references",
    "title": "BD : Contraintes",
    "section": "Clef √©trang√®re : REFERENCES",
    "text": "Clef √©trang√®re : REFERENCES\n\nSoit √©galement une table livraison qui stocke les livraisons de ces pi√®ces\nIl est int√©ressant de s‚Äôassurer que la table livraison ne contient que des r√©f√©rences de pi√®ces et de fournisseurs qui existent dans la base\n\nPour cela, deux contraintes de clef √©trang√®re sont √©mises par la table des livraisons\n\nUne contrainte r√©f√©rence piece\n\nUne contrainte r√©f√©rence fournisseur\n\n\n\nCREATE TABLE livraison(\n    numliv INT PRIMARY KEY,\n    idf INT REFERENCES fournisseur,   \n    nomp VARCHAR(20) REFERENCES piece,  \n    dateLiv DATE DEFAULT NOW(),\n    quantite INT DEFAULT 1 CHECK (quantite&gt;=0)\n);\n \n\n\n\n\n\n\nIl est d√©sormais impossible de cr√©er des livraisons pour lesquelles les valeurs non NULL de nomp n‚Äôapparaissent pas dans la table piece et les valeurs non NULL de idf n‚Äôapparaissent pas dans la table fournisseur\nOn dit que la table des livraisons est la table qui r√©f√©rence et la table des pi√®ces est la table r√©f√©renc√©e"
  },
  {
    "objectID": "slides/LDD_1.html#d√©finition-de-world.countrylanguage",
    "href": "slides/LDD_1.html#d√©finition-de-world.countrylanguage",
    "title": "BD : Contraintes",
    "section": "D√©finition de world.countrylanguage\n",
    "text": "D√©finition de world.countrylanguage\n\n+-------------+--------------+-------------+\n| Column      | Type         | Modifiers   |\n|-------------+--------------+-------------|\n| countrycode | character(3) |  not null   |\n| language    | text         |  not null   |\n| isofficial  | boolean      |  not null   |\n| percentage  | real         |  not null   |\n+-------------+--------------+-------------+\nIndexes:\n    \"countrylanguage_pkey\" PRIMARY KEY, btree (countrycode, language)"
  },
  {
    "objectID": "slides/LDD_1.html#d√©finition-de-world.country",
    "href": "slides/LDD_1.html#d√©finition-de-world.country",
    "title": "BD : Contraintes",
    "section": "D√©finition de world.country\n",
    "text": "D√©finition de world.country\n\n\n\n+--------------------+---------------+-------------+\n| Column             | Type          | Modifiers   |\n|--------------------+---------------+-------------|\n| countrycode        | character(3)  |  not null   |\n| name_country       | text          |  not null   |\n| continent          | text          |  not null   |\n| region             | text          |  not null   |\n| surfacearea        | real          |  not null   |\n| indepyear          | smallint      |             |\n| population_country | integer       |  not null   |\n| lifeexpectancy     | real          |             |\n| gnp                | numeric(10,2) |             |\n| gnpold             | numeric(10,2) |             |\n| localname          | text          |  not null   |\n| governmentform     | text          |  not null   |\n| headofstate        | text          |             |\n| capital            | integer       |             |\n| code2              | character(2)  |  not null   |\n+--------------------+---------------+-------------+\n\nIndexes:\n    \"country_pkey\" PRIMARY KEY, btree (countrycode)\nCheck constraints:\n    \"country_continent_check\" CHECK\n    (continent = 'Asia'::text OR \n      continent = 'Europe'::text OR \n      continent = 'North America'::text OR \n      continent = 'Africa'::text OR \n      continent = 'Oceania'::text OR \n      continent = 'Antarctica'::text OR \n      continent = 'South America'::text)\nForeign-key constraints:\n    \"country_capital_fkey\" \n        FOREIGN KEY (capital) \n        REFERENCES world.city(id)  \nReferenced by:\n    TABLE \"world.countrylanguage\"\n    CONSTRAINT \"countrylanguage_countrycode_fkey\" \n        FOREIGN KEY (countrycode)\n        REFERENCES country(countrycode)"
  },
  {
    "objectID": "slides/LDD_1.html#foreign-keys-emitted-by-world.country",
    "href": "slides/LDD_1.html#foreign-keys-emitted-by-world.country",
    "title": "BD : Contraintes",
    "section": "Foreign keys emitted by world.country\n",
    "text": "Foreign keys emitted by world.country\n\nALTER TABLE world.country ADD \n    CONSTRAINT country_capital_fkey \n        FOREIGN KEY (capital)   \n        REFERENCES world.city(id);  \n\nALTER TABLE world.country \n    ADD CONSTRAINT country_fk \n        FOREIGN KEY (continent)   \n        REFERENCES world.code_continent(continent);"
  },
  {
    "objectID": "slides/SQL_4.html#pourquoi",
    "href": "slides/SQL_4.html#pourquoi",
    "title": "Fonctions SQL et Vues",
    "section": "Pourquoi ?",
    "text": "Pourquoi ?\nLorsqu‚Äôune collection de requ√™tes de m√™me forme est utilis√©e sur une base de donn√©es, il est pertinent de pr√©parer ces requ√™tes\nLes objectifs de cette pr√©paration sont divers:\n\n√©viter de coder de fa√ßon r√©p√©titive\npermettre une planification en amont des requ√™tes\n√©viter de recalculer des jointures co√ªteuses\n‚Ä¶\n\n\n\nOn cherche √† suivre le principe DRY (Don‚Äôt Repeat Yourself) plut√¥t que la routine WET (Write Everything Twice ou We Enjoy Typing)"
  },
  {
    "objectID": "slides/SQL_4.html#comment",
    "href": "slides/SQL_4.html#comment",
    "title": "Fonctions SQL et Vues",
    "section": "Comment ?",
    "text": "Comment ?\nLes SGBD relationnels offrent une gamme d‚Äôoutils pour combler ces besoins\n\nLes PREPARED STATEMENT\nLes fonctions\nLes vues"
  },
  {
    "objectID": "slides/SQL_4.html#syntaxe-g√©n√©rale-des-fonctions",
    "href": "slides/SQL_4.html#syntaxe-g√©n√©rale-des-fonctions",
    "title": "Fonctions SQL et Vues",
    "section": "Syntaxe g√©n√©rale des fonctions",
    "text": "Syntaxe g√©n√©rale des fonctions\nCREATE OR REPLACE FUNCTION \n  func_name(arg1 arg1_datatype DEFAULT arg1_default)\n\nRETURNS some type | set of some type | TABLE (..) AS\n$$\n\nBODY of function\n\n$$\nLANGUAGE language_of_function\n\n\nlangage_of_function peut prendre diff√©rentes valeurs :\n\n\nSQL (Trusted)\n\nPL/pgSQL (Trusted)\nC\n\nPL/Python (Untrusted)\n‚Ä¶\n\n\nSELECT lanname \nFROM pg_language;\nlanname |\n--------+\ninternal|\nc       |\nsql     |\nplpgsql |"
  },
  {
    "objectID": "slides/SQL_4.html#signature-de-la-fonction",
    "href": "slides/SQL_4.html#signature-de-la-fonction",
    "title": "Fonctions SQL et Vues",
    "section": "Signature de la fonction",
    "text": "Signature de la fonction\nCREATE OR REPLACE FUNCTION \n  &lt;func_name&gt;(&lt;arg1&gt; &lt;arg1_datatype&gt; [DEFAULT &lt;arg1_default&gt;])\n\nRETURNS &lt;some type&gt; | SETOF &lt;some type&gt; | TABLE (..)\nLa signature d‚Äôune fonction est form√©e par:\n\nle nom de la fonction &lt;func_name&gt;\n\nla liste des arguments (nom &lt;arg1&gt; et type attendu )\n\nle type du r√©sultat retourn√© par la fonction"
  },
  {
    "objectID": "slides/SQL_4.html#signature-de-la-fonction-suite",
    "href": "slides/SQL_4.html#signature-de-la-fonction-suite",
    "title": "Fonctions SQL et Vues",
    "section": "Signature de la fonction (suite)",
    "text": "Signature de la fonction (suite)\n\n\n&lt;arg1_datatype&gt;:\n\ntype pr√©d√©fini ou non, voir CREATE TYPE ...\n\ntype de colonne d‚Äôune table : country.countrycode%TYPE\n\ntype des tuples d‚Äôune table : country%ROWTYPE‚Ä¶\n\n\n&lt;arg1_default&gt;: lit√©ral ou expression\n\nType du r√©sultat:\n\ntype pr√©d√©fini ou non\n\nSETOF ... (table)\nTABLE (...)\n\n\n\n\n\nChaque sch√©ma de table d√©finit (implicitement) un type"
  },
  {
    "objectID": "slides/SQL_4.html#types-d√©finis-par-lusager",
    "href": "slides/SQL_4.html#types-d√©finis-par-lusager",
    "title": "Fonctions SQL et Vues",
    "section": "Types d√©finis par l‚Äôusager",
    "text": "Types d√©finis par l‚Äôusager\nCREATE TYPE  type_utilisateur AS (\n  &lt;identifiant&gt; &lt;type d√©fini&gt;\n  [, &lt;identifiant&gt; &lt;type d√©fini&gt;]*\n);\nUsage pour une cr√©ation de table\nCREATE TABLE &lt;nom de table&gt; OF \n  type_utilisateur\n  (CONSTRAINT &lt;nom de contrainte&gt; PRIMARY KEY  (&lt;nom de colonne&gt;));\nPratique pour cr√©er des tables de m√™me sch√©ma\n\n\n\n\n\n\nNote\n\n\nquand on cr√©e une table, PostgreSQL cr√©e automatiquement un type associ√© (bis)"
  },
  {
    "objectID": "slides/SQL_4.html#exemple",
    "href": "slides/SQL_4.html#exemple",
    "title": "Fonctions SQL et Vues",
    "section": "Exemple",
    "text": "Exemple\n\nD√©finition d‚Äôun type\n\nCREATE TYPE basic_user AS (\n  user_name varchar(50), \n  pwd varchar(10)\n);\n\nUsage du type d√©fini par usager\n\nCREATE TABLE super_users OF basic_user \n  (CONSTRAINT pk_su PRIMARY KEY  (user_name));"
  },
  {
    "objectID": "slides/SQL_4.html#annotations",
    "href": "slides/SQL_4.html#annotations",
    "title": "Fonctions SQL et Vues",
    "section": "Annotations",
    "text": "Annotations\nLes d√©finitions de fonctions comportent parfois des qualifications suppl√©mentaires\n\nVOLATILITY: IMMUTABLE, STABLE, VOLATILE (default)\nSECURITY : SECURITY DEFINER, SECURITY INVOKER"
  },
  {
    "objectID": "slides/SQL_4.html#les-fonctions-√©crites-en-langage-sql",
    "href": "slides/SQL_4.html#les-fonctions-√©crites-en-langage-sql",
    "title": "Fonctions SQL et Vues",
    "section": "Les fonctions √©crites en langage SQL",
    "text": "Les fonctions √©crites en langage SQL\nSQL est d‚Äôabord un langage permettant d‚Äô√©mettre des requ√™tes, il peut aussi √™tre utilis√© pour √©crire des fonctions\nDans PostgreSQL, l‚Äôutilisation d‚Äôun morceau de SQL existant est facile :\n\nprenez vos instructions SQL existantes (√©ventuellement plusieurs)\najoutez un en-t√™te et une conclusion fonctionnels\n\net ‚Ä¶ vous avez termin√©"
  },
  {
    "objectID": "slides/SQL_4.html#les-fonctions-√©crites-en-langage-sql-suite",
    "href": "slides/SQL_4.html#les-fonctions-√©crites-en-langage-sql-suite",
    "title": "Fonctions SQL et Vues",
    "section": "Les fonctions √©crites en langage SQL (suite)",
    "text": "Les fonctions √©crites en langage SQL (suite)\nMais cette facilit√© a un prix \nVous ne pouvez pas :\n\nutiliser des structures de contr√¥le (boucles, alternatives) ou des d√©finitions de variables locales\nex√©cuter des instructions SQL dynamiques que vous assemblez √† la vol√©e en utilisant les arguments pass√©s dans la fonction\n\n\nMais, tout de m√™me\n\nle planificateur de requ√™tes peut examiner une fonction SQL et en optimiser l‚Äôex√©cution"
  },
  {
    "objectID": "slides/SQL_4.html#corps-de-la-fonction",
    "href": "slides/SQL_4.html#corps-de-la-fonction",
    "title": "Fonctions SQL et Vues",
    "section": "Corps de la fonction",
    "text": "Corps de la fonction\n La syntaxe du corps de la fonction d√©pend du language_of_function\nDans le cas o√π language_of_function est SQL\n$$\n\nBODY of function\n\n$$"
  },
  {
    "objectID": "slides/SQL_4.html#r√©f√©rences-aux-argument",
    "href": "slides/SQL_4.html#r√©f√©rences-aux-argument",
    "title": "Fonctions SQL et Vues",
    "section": "R√©f√©rences aux argument",
    "text": "R√©f√©rences aux argument\nOn peut faire r√©f√©rences aux arguments en les nommant dans le corps de la fonction\nSi les arguments ne sont pas nomm√©s, vous faites r√©f√©rence aux arguments par leur position dans la signature : $1, $2, $3, etc\n Si vous nommez les arguments, vous pouvez utiliser la notation\nbig_elephant(name =&gt; 'Wooly', ear_size =&gt; 1.2)\nlors des appels √† la fonction"
  },
  {
    "objectID": "slides/SQL_4.html#exemple-1",
    "href": "slides/SQL_4.html#exemple-1",
    "title": "Fonctions SQL et Vues",
    "section": "Exemple",
    "text": "Exemple\nCREATE OR REPLACE FUNCTION \n  write_to_log(param_user_name varchar,\n               param_description text)\nRETURNS integer AS\n$$\nINSERT INTO logs\n   (user_name, description) \n   VALUES($1, $2)\nRETURNING log_id;\n$$\nLANGUAGE 'sql' VOLATILE;\n\nInvocation\nSELECT write_to_log('alex', \n    'Logged in at 11:59 AM.') AS new_id;"
  },
  {
    "objectID": "slides/SQL_4.html#exemple-de-fonction-retournant-un-type-simple",
    "href": "slides/SQL_4.html#exemple-de-fonction-retournant-un-type-simple",
    "title": "Fonctions SQL et Vues",
    "section": "Exemple de fonction retournant un type simple",
    "text": "Exemple de fonction retournant un type simple\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la population maximale parmi les capitales de la r√©gion\nCREATE OR REPLACE \n  FUNCTION username.taille_max_capitale_region(p_region text)\n  RETURNS INTEGER \n  LANGUAGE SQL AS\n$$\nSELECT MAX(population_city) AS max_pop\nFROM world.country c \n  JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region AND\n cc.population_city IS NOT NULL;\n$$ ;"
  },
  {
    "objectID": "slides/SQL_4.html#fonctions-qui-retournent-un-type-compos√©-d√©fini-par-les-lignes-dune-table",
    "href": "slides/SQL_4.html#fonctions-qui-retournent-un-type-compos√©-d√©fini-par-les-lignes-dune-table",
    "title": "Fonctions SQL et Vues",
    "section": "Fonctions qui retournent un type compos√© d√©fini par les lignes d‚Äôune table",
    "text": "Fonctions qui retournent un type compos√© d√©fini par les lignes d‚Äôune table\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la description de la capitale la plus peupl√©e de cette r√©gion\nOn se contente de nommer la table pour indiquer que le r√©sultat doit avoir m√™me structure qu‚Äôune ligne de la table\n  CREATE OR REPLACE FUNCTION username.capitale(p_region text)\n  RETURNS world.city  \n  LANGUAGE SQL AS\n  $$\n  WITH r AS(\n    SELECT cc.*, RANK() OVER (PARTITION BY c.region ORDER BY cc.population_city DESC) AS rnk\n    FROM world.country c JOIN world.city cc ON (c.capital=cc.id)\n    WHERE c.region=p_region)\n  SELECT r.id, r.name_city, r.countrycode, r.district, r.population_city\n  FROM r \n  WHERE r.rnk = 1 ;\n  $$ ;"
  },
  {
    "objectID": "slides/SQL_4.html#fonctions-qui-retournent-une-table",
    "href": "slides/SQL_4.html#fonctions-qui-retournent-une-table",
    "title": "Fonctions SQL et Vues",
    "section": "Fonctions qui retournent une table",
    "text": "Fonctions qui retournent une table\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la table des capitales de la r√©gion"
  },
  {
    "objectID": "slides/SQL_4.html#table-de-sch√©ma-explicite",
    "href": "slides/SQL_4.html#table-de-sch√©ma-explicite",
    "title": "Fonctions SQL et Vues",
    "section": "Table de sch√©ma explicite",
    "text": "Table de sch√©ma explicite\nOn se contente d‚Äôabord de renvoyer le nom de la capitale.\nOn explicite le sch√©ma de la table r√©sultat\nCREATE OR REPLACE FUNCTION username.capitales_region(p_region text)\nRETURNS TABLE (name_capital text) \nLANGUAGE SQL AS\n$$\nSELECT cc.name_city \nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region ;\n$$ ;"
  },
  {
    "objectID": "slides/SQL_4.html#table-de-m√™me-sch√©ma-quune-autre-table",
    "href": "slides/SQL_4.html#table-de-m√™me-sch√©ma-quune-autre-table",
    "title": "Fonctions SQL et Vues",
    "section": "Table de m√™me sch√©ma qu‚Äôune autre table",
    "text": "Table de m√™me sch√©ma qu‚Äôune autre table\nhttps://www.postgresql.org/docs/15/xfunc-sql.html\nOn veut maintenant r√©cup√©rer une table de m√™me sch√©ma que city.\nLa solution est tr√®s simple.\nOn profite de ce qu‚Äô√† chaque table correspond un type de m√™me nom et on utilise le mot-cl√© SETOF.\nCREATE OR REPLACE FUNCTION username.capitales_region_large(p_region text)\nRETURNS SETOF world.city  \nLANGUAGE SQL AS\n$$\nSELECT cc.* \nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region ;\n$$ ;"
  },
  {
    "objectID": "slides/SQL_4.html#autres-langages",
    "href": "slides/SQL_4.html#autres-langages",
    "title": "Fonctions SQL et Vues",
    "section": "Autres langages",
    "text": "Autres langages\n\nPL/pgSQL\nC\nPL/Python\nPL/R\n‚Ä¶"
  },
  {
    "objectID": "slides/SQL_4.html#fonction-reprise-depuis-pagila",
    "href": "slides/SQL_4.html#fonction-reprise-depuis-pagila",
    "title": "Fonctions SQL et Vues",
    "section": "Fonction reprise depuis pagila\n",
    "text": "Fonction reprise depuis pagila\n\nCREATE OR REPLACE FUNCTION user.inventory_held_by_customer(\n    p_inventory_id integer,\n    OUT customer_id int2) AS \n$$\n  SELECT customer_id \n  FROM pagila.rental\n  WHERE return_date IS NULL AND inventory_id = p_inventory_id ;\n$$ LANGUAGE 'sql' ;"
  },
  {
    "objectID": "slides/SQL_4.html#fonctions-de-pagila",
    "href": "slides/SQL_4.html#fonctions-de-pagila",
    "title": "Fonctions SQL et Vues",
    "section": "Fonctions de pagila\n",
    "text": "Fonctions de pagila\n\nCREATE OR REPLACE FUNCTION uname.film_in_stock(\n  p_film_id integer, \n  p_store_id integer, \n  OUT p_film_count integer)\n RETURNS SETOF integer\nAS $$\n     SELECT inventory_id\n     FROM pagila.inventory\n     WHERE film_id = $1\n     AND store_id = $2\n     AND pagila.inventory_in_stock(inventory_id);\n$$ LANGUAGE sql ;"
  },
  {
    "objectID": "slides/SQL_4.html#invocation",
    "href": "slides/SQL_4.html#invocation",
    "title": "Fonctions SQL et Vues",
    "section": "Invocation",
    "text": "Invocation\nSELECT * \nFROM pagila.film_in_stock(12, 1) ;\n\n\np_film_count\n\n\n\n60\n\n\n61\n\n\n62"
  },
  {
    "objectID": "slides/SQL_4.html#section-1",
    "href": "slides/SQL_4.html#section-1",
    "title": "Fonctions SQL et Vues",
    "section": "",
    "text": "Presque tous les SGBD relationnels proposent des vues comme niveau d‚Äôabstraction des tables. Dans une vue, vous pouvez interroger plusieurs tables et pr√©senter des colonnes d√©riv√©es suppl√©mentaires bas√©es sur des calculs complexes.\n\n\nLes vues sont g√©n√©ralement en lecture seule, mais PostgreSQL vous permet de mettre √† jour les donn√©es sous-jacentes en mettant √† jour la vue, √† condition que la vue provienne d‚Äôune seule table.\n\n\nPour mettre √† jour des donn√©es √† partir de vues qui joignent plusieurs tables, vous devez cr√©er une gachette contre la vue.\n\n\nLes vues mat√©rialis√©es mettent en cache les donn√©es afin d‚Äôacc√©l√©rer les requ√™tes les plus courantes, au d√©triment des donn√©es les plus r√©centes."
  },
  {
    "objectID": "slides/SQL_4.html#motivation",
    "href": "slides/SQL_4.html#motivation",
    "title": "Fonctions SQL et Vues",
    "section": "Motivation",
    "text": "Motivation\n\n\n\n\n\n\nAstuce\n\n\nSi vous vous retrouvez √† √©crire tous les jours la m√™me requ√™te, cr√©er une vue !\n\n\n\nUne vue n‚Äôest rien d‚Äôautre qu‚Äôune requ√™te stock√©e de fa√ßon persistante"
  },
  {
    "objectID": "slides/SQL_4.html#vues-sur-une-seule-table",
    "href": "slides/SQL_4.html#vues-sur-une-seule-table",
    "title": "Fonctions SQL et Vues",
    "section": "Vues sur une seule table",
    "text": "Vues sur une seule table\nCREATE OR REPLACE VIEW co_asia AS\nSELECT * \nFROM world.country \nWHERE continent = 'Asia' ;"
  },
  {
    "objectID": "slides/SQL_4.html#interroger-une-vue",
    "href": "slides/SQL_4.html#interroger-une-vue",
    "title": "Fonctions SQL et Vues",
    "section": "Interroger une vue",
    "text": "Interroger une vue\nUne vue s‚Äôinterroge comme une table :\nSELECT region, sum(population_country) AS pop \nFROM co_asia \nGROUP BY region \nORDER BY pop DESC ;\nregion                   |pop       |\n-------------------------+----------+\nEastern Asia             |1507328000|\nSouthern and Central Asia|1490776000|\nSoutheast Asia           | 518541000|\nMiddle East              | 188380700|"
  },
  {
    "objectID": "slides/SQL_4.html#vues-et-manipulation-de-donn√©es",
    "href": "slides/SQL_4.html#vues-et-manipulation-de-donn√©es",
    "title": "Fonctions SQL et Vues",
    "section": "Vues et manipulation de donn√©es",
    "text": "Vues et manipulation de donn√©es\nSi\n\nla vue (VIEW) provient d‚Äôune table unique\nla vue contient la cl√© primaire de la table d‚Äôorigine\n\nAlors\non peut modifier la table au travers de la vue. On peut\n\nins√©rer\nsupprimer\nmettre √† jour\n\n\n\n\n\n\n\nExemple\n\n\n\nLa vue co_asia provient d‚Äôune unique table : world.country\n\nLa vue co_asia contient la cl√© primaire countrycode de la table world.country"
  },
  {
    "objectID": "slides/SQL_4.html#section-2",
    "href": "slides/SQL_4.html#section-2",
    "title": "Fonctions SQL et Vues",
    "section": "",
    "text": "Cette instruction :\nUPDATE co_asia\n  SET continent='Antarctica';\n‚Ä¶ est l√©gale !\n‚Äì\nMais, apr√®s ex√©cution :\n\nla vue co_asia est vide \nles pays d‚ÄôAsie de country sont d√©localis√©s en Antarctique"
  },
  {
    "objectID": "slides/SQL_4.html#pour-√©viter-ca-with-check-option",
    "href": "slides/SQL_4.html#pour-√©viter-ca-with-check-option",
    "title": "Fonctions SQL et Vues",
    "section": "Pour √©viter ca : WITH CHECK OPTION\n",
    "text": "Pour √©viter ca : WITH CHECK OPTION\n\n\nCREATE OR REPLACE VIEW boucheron.co_asia AS\n  SELECT * \n  FROM world.country \n  WHERE continent = 'Asia' \n\nWITH CHECK OPTION ;\n\nAjouter cette modification lors de la cr√©ation de la vue et PostgreSQL s‚Äôopposera √† une tentative d‚Äôinsertion hors de la vue ou √† une tentative de mise √† jour qui placerait des tuples hors de la vue"
  },
  {
    "objectID": "slides/SQL_4.html#section-3",
    "href": "slides/SQL_4.html#section-3",
    "title": "Fonctions SQL et Vues",
    "section": "",
    "text": "CREATE OR REPLACE VIEW pagila.actor_info\nAS SELECT a.actor_id,\n    a.first_name,\n    a.last_name,\n    pagila.group_concat(DISTINCT (c.name::text || ': '::text) || \n        (( SELECT pagila.group_concat(f.title::text) AS group_concat\n           FROM pagila.film f\n             JOIN pagila.film_category fc_1 ON f.film_id = fc_1.film_id\n             JOIN pagila.film_actor fa_1 ON f.film_id = fa_1.film_id\n          WHERE fc_1.category_id = c.category_id AND fa_1.actor_id = a.actor_id\n          GROUP BY fa_1.actor_id))\n        ) AS film_info\n   FROM pagila.actor a\n     LEFT JOIN pagila.film_actor fa ON a.actor_id = fa.actor_id\n     LEFT JOIN pagila.film_category fc ON fa.film_id = fc.film_id\n     LEFT JOIN pagila.category c ON fc.category_id = c.category_id\n  GROUP BY a.actor_id, a.first_name, a.last_name;"
  },
  {
    "objectID": "slides/SQL_4.html#vues-multi-tables-exemple-de-vue-sur-world",
    "href": "slides/SQL_4.html#vues-multi-tables-exemple-de-vue-sur-world",
    "title": "Fonctions SQL et Vues",
    "section": "Vues multi-tables : exemple de vue sur world\n",
    "text": "Vues multi-tables : exemple de vue sur world\n\nCREATE OR REPLACE VIEW country_info AS\n\n  SELECT\n    cn.countrycode, \n    cn.name_country, \n    cn.region,\n    string_agg(DISTINCT ci.name_city::text , ', '::text) AS cities\n\n  FROM world.country cn LEFT JOIN \n       world.city ci \n       ON (cn.countrycode = ci.countrycode)\n\n  GROUP BY cn.countrycode, cn.name_country, cn.region;\nStackoverflow"
  },
  {
    "objectID": "slides/SQL_4.html#insertionmise-√†-joursuppression-sur-les-vues-multi-tables",
    "href": "slides/SQL_4.html#insertionmise-√†-joursuppression-sur-les-vues-multi-tables",
    "title": "Fonctions SQL et Vues",
    "section": "Insertion/Mise √† jour/Suppression sur les vues multi-tables",
    "text": "Insertion/Mise √† jour/Suppression sur les vues multi-tables\nProbl√®me : quelles tables doivent √™tre modifi√©es ?\nDELETE \nFROM boucheron.country_info\nWHERE countrycode = 'FRA' ;\n\nsupprimer les lignes de country ?\nsupprimer les lignes de city ?\n\nDatabase abstraction"
  },
  {
    "objectID": "slides/SQL_4.html#vues-mat√©rialis√©es",
    "href": "slides/SQL_4.html#vues-mat√©rialis√©es",
    "title": "Fonctions SQL et Vues",
    "section": "Vues mat√©rialis√©es",
    "text": "Vues mat√©rialis√©es\nLes vue mat√©rialis√©es cachent les donn√©es r√©cup√©r√©es\nCela se produit\n\nlors de la cr√©ation de la vue et\nlorsque on ex√©cute REFRESH MATERIALIZED VIEW ..."
  },
  {
    "objectID": "slides/SQL_3.html#fonctions-dagr√©gation-en-sql-1",
    "href": "slides/SQL_3.html#fonctions-dagr√©gation-en-sql-1",
    "title": "BD IV: SQL III",
    "section": "\n Fonctions d‚Äôagr√©gation en SQL",
    "text": "Fonctions d‚Äôagr√©gation en SQL\n\nPossibilit√© de compter, de faire des moyennes, de trouver un maximum, ‚Ä¶ en SQL (contrairement √† l‚Äôalg√®bre relationnelle ‚Äúclassique‚Äù)\nPossibilit√© de partitionner les donn√©es"
  },
  {
    "objectID": "slides/SQL_3.html#usages",
    "href": "slides/SQL_3.html#usages",
    "title": "BD IV: SQL III",
    "section": "Usages",
    "text": "Usages\n\nAnalyse commerciale ou Buisiness Analytics,\nStatistique et Data Science"
  },
  {
    "objectID": "slides/SQL_3.html#dans-la-partie-select",
    "href": "slides/SQL_3.html#dans-la-partie-select",
    "title": "BD IV: SQL III",
    "section": "Dans la partie SELECT\n",
    "text": "Dans la partie SELECT\n\n\nSomme des valeurs prises par nomattribut\n\n\nSUM (DISTINCT|ALL &lt;nomattribut&gt;)  \n\n\nMoyenne des valeurs prises par nomattribut\n\n\nAVG (DISTINCT|ALL &lt;nom_attribut&gt;) \n\n\n Le type des attributs doit √™tre un nombre ou un entier (sinon, impossible de faire des sommes‚Ä¶)."
  },
  {
    "objectID": "slides/SQL_3.html#fonctions-dagr√©gation-sum-et-avg",
    "href": "slides/SQL_3.html#fonctions-dagr√©gation-sum-et-avg",
    "title": "BD IV: SQL III",
    "section": "Fonctions d‚Äôagr√©gation : SUM et AVG\n",
    "text": "Fonctions d‚Äôagr√©gation : SUM et AVG\n\n\nLe nombre de pi√®ces ‚Äòx21‚Äô livr√©es.\n\nSELECT SUM (ALL Quantite)  \nFROM Livraison \nWHERE NomP = 'x21';\n\nPrix moyen des pi√®ces livr√©es par la soci√© FastDelivery\n\n\nSELECT AVG (ALL Prix)    \nFROM Livraison L, Piece P \nWHERE L.NomP=P.NomP AND L.NomF = 'FastDelivery';"
  },
  {
    "objectID": "slides/SQL_3.html#fonctions-de-calcul-max-min",
    "href": "slides/SQL_3.html#fonctions-de-calcul-max-min",
    "title": "BD IV: SQL III",
    "section": "Fonctions de calcul : MAX, MIN\n",
    "text": "Fonctions de calcul : MAX, MIN\n\nMAX (&lt;nomattribut&gt;)  \nmaximum des valeurs prises par &lt;nomattribut&gt;\n\nMIN (&lt;nomattribut&gt;)  \nminimum des valeurs prises par &lt;nomattribut&gt;\n\n\n\n\n\n\nMise en garde\n\n\nAttention aux valeurs nulles !\nNULL = MIN(NULL, 3, 100) ou 3 = MIN(NULL, 3, 100) ?\n\n\n\n\n\nQuantit√© maximale livr√©e de pi√®ce ‚Äòx21‚Äô lors d‚Äôune commande.\nSELECT MAX (Quantite)   \nFROM Livraison \nWHERE NomP = 'x21';"
  },
  {
    "objectID": "slides/SQL_3.html#fonctions-de-calcul-count",
    "href": "slides/SQL_3.html#fonctions-de-calcul-count",
    "title": "BD IV: SQL III",
    "section": "Fonctions de calcul : COUNT\n",
    "text": "Fonctions de calcul : COUNT\n\nOn peut aussi compter le nombre de tuples dans un r√©sultat\nCOUNT(* |[ ALL | DISTINCT &lt;nomattribut&gt;])  \nNombre de valeurs prises par le r√©sultat\n\n\n\nDISTINCT : sans les doublons\n\nALL: avec les doublons\n\n* : y compris les valeurs nullles/manquantes\n\nNombre de livraisons de la pi√®ce ‚Äôx21\nSELECT COUNT(*)  \nFROM Livraison\nWHERE NomP = 'x21';"
  },
  {
    "objectID": "slides/SQL_3.html#fonctions-de-calcul-exemples",
    "href": "slides/SQL_3.html#fonctions-de-calcul-exemples",
    "title": "BD IV: SQL III",
    "section": "Fonctions de calcul : exemples",
    "text": "Fonctions de calcul : exemples\nExemple de combinaison de quelques op√©rations et fonctions\nNom des fournisseurs ayant effectu√© plus de \\(10\\) livraisons."
  },
  {
    "objectID": "slides/SQL_3.html#mus√©e-des-horreurs",
    "href": "slides/SQL_3.html#mus√©e-des-horreurs",
    "title": "BD IV: SQL III",
    "section": "Mus√©e des horreurs",
    "text": "Mus√©e des horreurs\nTrouver les r√©gions o√π au moins un pays poss√®de une esp√©rance de vie inf√©rieure √† 50\nSELECT DISTINCT continent, region\nFROM country c \nWHERE (\n  SELECT MIN(d.lifeexpectancy)     \n  FROM country d    \n  WHERE c.region=d.region\n  ) &lt; 50    \nORDER BY continent, region;\n\n\nContinent\nRegion\n\n\n\nAfrica\nCentral Africa\n\n\nAfrica\nEastern Africa\n\n\nAfrica\nNorthern Africa\n\n\nAfrica\nSouthern Africa\n\n\nAfrica\nWestern Africa\n\n\nAsia\nSoutheast Asia\n\n\nAsia\nSouthern and Central Asia\n\n\nNorth America\nCaribbean\n\n\n\n\n\nPourquoi cette requ√™te est-elle horrible ?"
  },
  {
    "objectID": "slides/SQL_3.html#section-2",
    "href": "slides/SQL_3.html#section-2",
    "title": "BD IV: SQL III",
    "section": "",
    "text": "On peut faire plus simple (et plus efficace) dans le case pr√©sent\nSELECT DISTINCT continent, region\nFROM country c \nWHERE c.lifeexpectancy &lt;50 \nORDER BY continent, region;\n\n\nContinent\nRegion\n\n\n\nAfrica\nCentral Africa\n\n\nAfrica\nEastern Africa\n\n\nAfrica\nNorthern Africa\n\n\nAfrica\nSouthern Africa\n\n\nAfrica\nWestern Africa\n\n\nAsia\nSoutheast Asia\n\n\nAsia\nSouthern and Central Asia\n\n\nNorth America\nCaribbean"
  },
  {
    "objectID": "slides/SQL_3.html#fonctions-de-calcul-exemples-1",
    "href": "slides/SQL_3.html#fonctions-de-calcul-exemples-1",
    "title": "BD IV: SQL III",
    "section": "Fonctions de calcul : exemples",
    "text": "Fonctions de calcul : exemples\nUtilisation d‚Äôop√©rateur arithm√©tique entre les diff√©rents attributs d‚Äôun m√™me tuple‚Ä¶\nPrix de revient des commandes livr√©es par le fournisseur FD\nSELECT L.NomP, P.Prix*L.Quantite \nFROM Livraison F, Piece P \nWHERE P.NomP=L.NomP AND\n  L.NomF='FD';"
  },
  {
    "objectID": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes",
    "href": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes",
    "title": "BD IV: SQL III",
    "section": "Partition de r√©sultats de requ√™tes",
    "text": "Partition de r√©sultats de requ√™tes\nGROUP BY &lt;nomattribut1&gt;, ..., &lt;nomattributn&gt;\n\nGROUP BY permet de regrouper selon la valeur de certains attributs l‚Äôensemble des r√©sults d‚Äôune requ√™te\nForme des sous-relations auxquelles on peut appliquer des op√©rateurs (SUM, MAX, ‚Ä¶) renvoyant un r√©sultat par sous-relation\n\nExemple d‚Äôutilisation : regrouper les livraisons par num√©ro de fournisseur et prendre la quantit√© maximum livr√©e par fournisseur."
  },
  {
    "objectID": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-1",
    "href": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-1",
    "title": "BD IV: SQL III",
    "section": "Partition de r√©sultats de requ√™tes",
    "text": "Partition de r√©sultats de requ√™tes\nSch√©ma g√©n√©ral\nSELECT .....  \nFROM Livraison \nGROUP BY NomF    \n\n\n\nNomF\nNomP\nNumLiv\nQuantite\nDateLiv\n\n\n\n\n\n\n\n\n\n\n1\nx21\n1\n20\n15/02/10\n\n\n1\na32\n2\n3\n16/02/10\n\n\n1\nx21\n3\n5\n15/01/10\n\n\n\n\n\n\n\n\n\n2\nb27\n4\n8\n01/02/12\n\n\n2\nc31\n5\n9\n17/09/11\n\n\n\n\n\n\n\n\n\n3\nx 21\n6\n17\n15/03/10"
  },
  {
    "objectID": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-2",
    "href": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-2",
    "title": "BD IV: SQL III",
    "section": "Partition de r√©sultats de requ√™tes",
    "text": "Partition de r√©sultats de requ√™tes\nQuantit√© maximale livr√©e par chaque fournisseur\nSELECT NomF, MAX(Quantite) \nFROM Livraison \nGROUP BY NomF;\nLivraison\n\n\nNomF\nNomP\nNumL\nQuantite\nDateLiv\n\n\n\n1\nx21\n1\n20\n15/02/10\n\n\n1-2\nc31\n5\n9\n17/09/11\n\n\n1\nx21\n6\n17\n15/03/10\n\n\n\nLes op√©rateurs (MAX, SUM, etc) s‚Äôappliquent √† chaque groupe de relations."
  },
  {
    "objectID": "slides/SQL_3.html#exemple",
    "href": "slides/SQL_3.html#exemple",
    "title": "BD IV: SQL III",
    "section": "Exemple",
    "text": "Exemple\nDans le sch√©ma world, quel est le gnp moyen par region sur le continent Europe ?\nSELECT region, \n       ROUND(1000 * SUM(gnp)/SUM(population_country),2) AS avg_gnp,  \n       ROUND(MAX(1000* gnp/population_country),2) AS max_gnp, \n       ROUND(MIN(1000* gnp/population_country),2) AS min_gnp,\n       MIN(lifeexpectancy) AS min_life_exp\nFROM country \nWHERE continent = 'Europe' \nGROUP BY region \nORDER BY avg_gnp DESC;\n\n\nregion\navg_gnp\nmax_gnp\nmin_gnp\nmin_life_exp\n\n\n\nNordic Countries\n28.00\n32.66\n0.00\n76.5\n\n\nWestern Europe\n25.50\n37.46\n22.82\n77.1\n\n\nBritish Islands\n22.94\n23.12\n20.11\n76.8\n\n\nSouthern Europe\n13.91\n20.90\n0.72\n71.5\n\n\nBaltic Countries\n2.96\n3.70\n2.64\n68.4\n\n\nEastern Europe\n2.15\n5.35\n0.36\n64.5"
  },
  {
    "objectID": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-3",
    "href": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-3",
    "title": "BD IV: SQL III",
    "section": "Partition de r√©sultats de requ√™tes",
    "text": "Partition de r√©sultats de requ√™tes\nQuel est le sens de cette requ√™te ?\nSELECT NomP, COUNT(*), SUM(Quantite) \nFROM Livraison \nGROUP BY NomP;"
  },
  {
    "objectID": "slides/SQL_3.html#section-3",
    "href": "slides/SQL_3.html#section-3",
    "title": "BD IV: SQL III",
    "section": "",
    "text": "La requ√™te suivante requ√™te n‚Äôest pas correcte\nSELECT NomF, NomP, MAX(Quantite) \nFROM Livraison \nGROUP BY NomF;\n\n\n\n\n\n\n\nImportant\n\n\nLes attributs pr√©sents dans le SELECT sont forc√©mment pr√©sents dans le GROUP BY."
  },
  {
    "objectID": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-4",
    "href": "slides/SQL_3.html#partition-de-r√©sultats-de-requ√™tes-4",
    "title": "BD IV: SQL III",
    "section": "Partition de r√©sultats de requ√™tes",
    "text": "Partition de r√©sultats de requ√™tes\n\nLa clause HAVING permet de poser une condition portant sur chacune des sous-relations g√©n√©r√©es par le GROUP BY\nLes sous-relations ne v√©rifiant pas la condition sont √©cart√©es du r√©sultat.\n\nListe des fournisseurs qui ont effectu√© plus de 3 livraisons.\nSELECT NomF \nFROM Livraison \nGROUP BY NomF    \nHAVING COUNT(*) &gt;= 3;"
  },
  {
    "objectID": "slides/SQL_3.html#pr√©sentationtri-de-r√©sultats",
    "href": "slides/SQL_3.html#pr√©sentationtri-de-r√©sultats",
    "title": "BD IV: SQL III",
    "section": "Pr√©sentation/tri de r√©sultats",
    "text": "Pr√©sentation/tri de r√©sultats\n\nLa clause ORDER BY permet de trier le r√©sultat de la requ√™te, en fournissant la liste des attributs sur lesquels effectuer le tri et en sp√©cifiant le sens du tri (ascendan ou descendant)\n\nListe des salari√©s tri√©e par ordre d√©croissant salaire\nSELECT * \nFROM Employe \nORDER BY Salaire DESC;"
  },
  {
    "objectID": "slides/SQL_3.html#regroupement-tri-etc-exemple",
    "href": "slides/SQL_3.html#regroupement-tri-etc-exemple",
    "title": "BD IV: SQL III",
    "section": "Regroupement, tri, etc : exemple",
    "text": "Regroupement, tri, etc : exemple\nQue fait cette requ√™te ?\nSELECT Fonction, COUNT(*) \nFROM Employe \nWHERE NumDep IN (\n  SELECT NumDep \n  FROM Departement \n  WHERE NomDept='Financier'\n) \nGROUP BY Fonction \nHAVING AVG(Salaire) &gt;= 10000 \nORDER BY Fonction;\nSur les relations d‚Äôune base employ√© (tables Departement,Employe, ‚Ä¶)"
  },
  {
    "objectID": "slides/SQL_3.html#retour-au-mus√©e-des-horreurs",
    "href": "slides/SQL_3.html#retour-au-mus√©e-des-horreurs",
    "title": "BD IV: SQL III",
    "section": "Retour au mus√©e des horreurs",
    "text": "Retour au mus√©e des horreurs\nSELECT continent, region, MIN(c.lifeexpectancy)\nFROM country c \nGROUP BY continent, region\nHAVING MIN(c.lifeexpectancy) &lt; 50  \nORDER BY continent, region ;   \n\n\nContinent\nRegion\nmax\nmin\n\n\n\nAfrica\nCentral Africa\n65.3\n38.3\n\n\nAfrica\nEastern Africa\n72.7\n37.2\n\n\nAfrica\nNorthern Africa\n75.5\n49.8\n\n\nAfrica\nSouthern Africa\n51.1\n39.3\n\n\nAfrica\nWestern Africa\n76.8\n41.3\n\n\nAsia\nSoutheast Asia\n80.1\n46.0\n\n\nAsia\nSouthern and Central Asia\n71.8\n45.9\n\n\nNorth America\nCaribbean\n78.9\n49.2"
  },
  {
    "objectID": "slides/SQL_3.html#exemple-1",
    "href": "slides/SQL_3.html#exemple-1",
    "title": "BD IV: SQL III",
    "section": "Exemple",
    "text": "Exemple\nDans le sch√©ma world, pr√©senter pour chaque pays dont la r√©gion comprend le motif Countries, l‚Äôesp√©rance de vie, l‚Äôesp√©rance de vie maximale et minimale dans la r√©gion.\n\nSELECT region, name_country, lifeexpectancy, \n       min(lifeexpectancy) OVER (PARTITION BY region),  \n       max(lifeexpectancy) OVER (PARTITION BY region)   \nFROM country \nWHERE region LIKE '%Countries'\nORDER BY region, lifeexpectancy  \nLIMIT 6 ;\n\n\n\nRegion\nName of country\nLife expectancy\nmin\nmax\n\n\n\nBaltic Countries\nLatvia\n68.4\n68.4\n69.5\n\n\nBaltic Countries\nLithuania\n69.1\n68.4\n69.5\n\n\nBaltic Countries\nEstonia\n69.5\n68.4\n69.5\n\n\nNordic Countries\nDenmark\n76.5\n76.5\n79.6\n\n\nNordic Countries\nFinland\n77.4\n76.5\n79.6\n\n\nNordic Countries\nFaroe Islands\n78.4\n76.5\n79.6"
  },
  {
    "objectID": "slides/SQL_3.html#calculer-une-fonction-fen√™tre-sans-invoquer-over-...",
    "href": "slides/SQL_3.html#calculer-une-fonction-fen√™tre-sans-invoquer-over-...",
    "title": "BD IV: SQL III",
    "section": "Calculer une fonction fen√™tre sans invoquer OVER (...)\n",
    "text": "Calculer une fonction fen√™tre sans invoquer OVER (...)\n\nPour calculer ce r√©sultat sans fonctions fen√™tres,\n\non effectue une partition selon la region, une aggr√©gation par groupe pour calculer min(lifeexpectancy) et max(lifeexpectancy). On obtient une table √† trois colonnes.\non calcule une (√©qui)-jointure avec la table country originelle sur la colonne commune region\non projette le r√©sultat sur les cinq colonnes pertinentes.\n\n\n\nWITH R AS (\n  SELECT region, min(lifeexpectancy) AS minlex, max(lifeexpectancy) AS maxlex\n  FROM country\n  WHERE region LIKE '%Countries' AND lifeexpectancy IS NOT NULL \n  GROUP BY region\n)\n\nSELECT region, name_country, lifeexpectancy, minlex, maxlex\nFROM country co NATURAL JOIN R"
  },
  {
    "objectID": "slides/SQL_3.html#variations",
    "href": "slides/SQL_3.html#variations",
    "title": "BD IV: SQL III",
    "section": "Variations",
    "text": "Variations\nSELECT region, name_country, lifeexpectancy, \n    rank() OVER (\n    PARTITION BY region   \n      ORDER BY lifeexpectancy DESC\n  )  \nFROM country \nWHERE region LIKE '%Countries'\nORDER BY region, lifeexpectancy DESC \nLIMIT 6 ;\n\n\nRegion\nName of country\nlife expectancy\nrank\n\n\n\nBaltic Countries\nEstonia\n69.5\n1\n\n\nBaltic Countries\nLithuania\n69.1\n2\n\n\nBaltic Countries\nLatvia\n68.4\n3\n\n\nNordic Countries\nSvalbard and Jan Mayen\n\n1\n\n\nNordic Countries\nSweden\n79.6\n2\n\n\nNordic Countries\nIceland\n79.4\n3\n\n\n\n\n\nQue se passe-t-il avec les valeurs nulles ?"
  },
  {
    "objectID": "slides/SQL_3.html#sommes-cumul√©es-par-groupes-selon-un-ordre",
    "href": "slides/SQL_3.html#sommes-cumul√©es-par-groupes-selon-un-ordre",
    "title": "BD IV: SQL III",
    "section": "Sommes cumul√©es par groupes selon un ordre",
    "text": "Sommes cumul√©es par groupes selon un ordre\nSELECT \n    region, name_country, \n    sum(gnp) OVER (\n    PARTITION BY region  \n        ORDER BY gnp\n)     \nFROM country c \nWHERE region LIKE '%Europe' \nLIMIT 6;\n\n\nRegion\nName Country\nSum\n\n\n\nEastern Europe\nMoldova\n1579.00\n\n\nEastern Europe\nBulgaria\n13757.00\n\n\nEastern Europe\nBelarus\n27471.00\n\n\nEastern Europe\nSlovakia\n48065.00\n\n\nEastern Europe\nRomania\n86223.00\n\n\nEastern Europe\nUkraine\n128391.00"
  },
  {
    "objectID": "slides/SQL_3.html#exemple-2",
    "href": "slides/SQL_3.html#exemple-2",
    "title": "BD IV: SQL III",
    "section": "Exemple",
    "text": "Exemple\nPour chaque continent, afficher les trois pays ayant l‚Äôesp√©rance de vie √† la naissance la plus √©lev√©e\n\nSELECT continent, \n  name_country, \n  lifeexpectancy, \n  pos\nFROM\n  (SELECT continent, \n    name_country, \n    lifeexpectancy,\n    rank() OVER (\n      PARTITION BY continent \n      ORDER BY lifeexpectancy DESC) AS pos\n  FROM country\n  WHERE lifeexpectancy IS NOT NULL\n  ) AS ws\nWHERE pos &lt;= 3;"
  },
  {
    "objectID": "slides/SQL_3.html#avec-with-...-et-les-ctes",
    "href": "slides/SQL_3.html#avec-with-...-et-les-ctes",
    "title": "BD IV: SQL III",
    "section": "Avec WITH ... et les CTEs",
    "text": "Avec WITH ... et les CTEs\nWITH ws AS (\n  SELECT continent, \n    name_country, \n    lifeexpectancy,\n    rank() OVER (\n      PARTITION BY continent \n      ORDER BY lifeexpectancy DESC) AS pos\n  FROM country\n  WHERE lifeexpectancy IS NOT NULL\n) \nSELECT continent, \n  name_country, \n  lifeexpectancy, \n  pos\nFROM ws   \nWHERE pos &lt;= 3;"
  },
  {
    "objectID": "slides/SQL_3.html#exemple-3",
    "href": "slides/SQL_3.html#exemple-3",
    "title": "BD IV: SQL III",
    "section": "Exemple",
    "text": "Exemple\nAfficher le pays le plus peupl√©\n\n\n\nSELECT S.name_country, \n  S.continent, \n  S.population_country\nFROM (\n  SELECT max(population_country) AS mpc \n  FROM country c\n  ) AS R \n  JOIN LATERAL (    \n      SELECT * \n      FROM country c2 \n      WHERE c2.population_country &gt;= R.mpc\n    ) AS S \n  ON (TRUE)\n) ;\n\nSELECT c.name_country, \n       c.continent, \n       c.population_country\nFROM (\n    SELECT max(population_country) AS mpc \n    FROM country c2\n  ) AS S\n  JOIN country c \n  ON (c.population_country &gt;= S.mpc)    \n;\n\nname_country|continent|population_country|\n------------+---------+------------------+\nChina       |Asia     |        1277558000|"
  },
  {
    "objectID": "slides/SQL_3.html#exemple-suite",
    "href": "slides/SQL_3.html#exemple-suite",
    "title": "BD IV: SQL III",
    "section": "Exemple (suite)",
    "text": "Exemple (suite)\nAfficher le pays le plus peupl√©\n\n\nSELECT * \nFROM world.country c  \nWHERE population_country &gt;= ALL(\n  SELECT cc.population_country  \n  FROM world.country  cc\n) ;     \n\nWITH S AS (        \n    SELECT c.*, max(population_country) \n         OVER () AS mpc  \n    FROM world.country c\n)\nSELECT * \nFROM S   \nWHERE population_country &gt;= mpc ;\n\nname_country|continent|population_country|\n------------+---------+------------------+\nChina       |Asia     |        1277558000|"
  },
  {
    "objectID": "slides/SQL_3.html#exemple-4",
    "href": "slides/SQL_3.html#exemple-4",
    "title": "BD IV: SQL III",
    "section": "Exemple",
    "text": "Exemple\nAfficher les 10 pays les plus peupl√©s\n\nWITH S AS (        \n    SELECT c.*, rank() \n    OVER (ORDER BY population_country DESC) AS rpc  \n    FROM world.country c\n)\n\nSELECT name_country, continent, population_country\nFROM S   \nWHERE rpc &lt;= 10 \nORDER BY rpc DESC;\n\n\nname_country      |continent    |population_country|\n------------------+-------------+------------------+\nChina             |Asia         |        1277558000|\nIndia             |Asia         |        1013662000|\nUnited States     |North America|         278357000|\nIndonesia         |Asia         |         212107000|\nBrazil            |South America|         170115000|\nPakistan          |Asia         |         156483000|\nRussian Federation|Europe       |         146934000|\nBangladesh        |Asia         |         129155000|\nJapan             |Asia         |         126714000|\nNigeria           |Africa       |         111506000|"
  },
  {
    "objectID": "slides/SQL_3.html#rollup",
    "href": "slides/SQL_3.html#rollup",
    "title": "BD IV: SQL III",
    "section": "ROLLUP",
    "text": "ROLLUP\n\nSELECT continent, region, max(lifeexpectancy)\nFROM country c \nWHERE continent LIKE '%America'\nGROUP BY ROLLUP  (continent, region)  \nORDER BY continent, region ;\n\n|Continent    |Region         |max |\n|:------------|:--------------|---:|\n|North America|Caribbean      |78.9|\n|North America|Central America|75.8|\n|North America|North America  |79.4|\n|North America|               |79.4|\n|South America|South America  |76.1|\n|South America|               |76.1|\n|             |               |79.4|"
  },
  {
    "objectID": "slides/SQL_3.html#grouping-sets",
    "href": "slides/SQL_3.html#grouping-sets",
    "title": "BD IV: SQL III",
    "section": "GROUPING SETS",
    "text": "GROUPING SETS\n\nSELECT c1, c2, aggregate_function(c3)\nFROM table_name\nGROUP BY GROUPING SETS ((c1, c2), (c1), (c2), ());   \n\n ROLLUP and CUBE are special cases of GROUPING SETS"
  },
  {
    "objectID": "slides/SQL_3.html#grouping-sets-suite",
    "href": "slides/SQL_3.html#grouping-sets-suite",
    "title": "BD IV: SQL III",
    "section": "\nGROUPING SETS (suite)",
    "text": "GROUPING SETS (suite)\nSELECT continent, region, max(lifeexpectancy)\nFROM country c \nWHERE continent LIKE '%America'\nGROUP BY GROUPING SETS  ((continent, region), (continent), ())  \nORDER BY continent, region ;\n|Continent    |Region         |max |\n|:------------|:--------------|---:|\n|North America|Caribbean      |78.9|\n|North America|Central America|75.8|\n|North America|North America  |79.4|\n|North America|               |79.4|\n|South America|South America  |76.1|\n|South America|               |76.1|\n|             |               |79.4|"
  },
  {
    "objectID": "slides/SQL_3.html#cube",
    "href": "slides/SQL_3.html#cube",
    "title": "BD IV: SQL III",
    "section": "CUBE",
    "text": "CUBE\n\nSELECT c1, c2, c3,\n  aggregate (c4) \nFROM table_name\nGROUP BY CUBE (c1, c2, c3);"
  },
  {
    "objectID": "slides/SQL_3.html#section-5",
    "href": "slides/SQL_3.html#section-5",
    "title": "BD IV: SQL III",
    "section": "",
    "text": "|Continent    |Region       |Governmentf   |cnt|max |\n|:------------|:------------|:-------------|:--|:---|\n|             |               |                             | 51|79.4|\n|South America|South America  |Republic                     |  9|75.7|\n|North America|Central America|Republic                     |  6|75.8|\n|North America|Caribbean      |Constitutional Monarchy      |  8|75.2|\n|North America|Caribbean      |                             | 24|78.9|\n|South America|South America  |                             | 14|76.1|\n|North America|Central America|                             |  8|75.8|\n|South America|               |                             | 14|76.1|\n|North America|               |                             | 37|79.4|\n|             |Caribbean      |Constitutional Monarchy      |  8|75.2|\n|             |South America  |Republic                     |  9|75.7|\n|             |Central America|Republic                     |  6|75.8|\n|             |South America  |                             | 14|76.1|\n|             |Central America|                             |  8|75.8|\n|             |Caribbean      |                             | 24|78.9|\n|North America|               |Constitutional Monarchy      |  9|75.2|\n|North America|               |Republic                     | 10|75.8|\n|South America|               |Republic                     |  9|75.7|\n|North America|               |Dependent Territory of the UK|  6|78.9|\n|             |               |Republic                     | 19|75.8|\n|             |               |Constitutional Monarchy      |  9|75.2|\n|             |               |Dependent Territory of the UK|  7|78.9|"
  },
  {
    "objectID": "slides/SQL_3.html#compter-les-formes-de-gouvernement-et-les-r√©gion-dans-les-am√©riques",
    "href": "slides/SQL_3.html#compter-les-formes-de-gouvernement-et-les-r√©gion-dans-les-am√©riques",
    "title": "BD IV: SQL III",
    "section": "Compter les formes de gouvernement et les r√©gion dans les Am√©riques",
    "text": "Compter les formes de gouvernement et les r√©gion dans les Am√©riques\n\nSELECT  \n       region, \n       governmentform, \n       count(*) AS cnt, \n       max(lifeexpectancy)\nFROM country c \nWHERE continent LIKE '%America'\nGROUP BY CUBE   (region, governmentform)   \nHAVING COUNT(*) &gt; 0\nORDER BY region, cnt DESC;"
  },
  {
    "objectID": "slides/SQL_3.html#compter-les-formes-de-gouvernement-et-les-r√©gion-dans-les-am√©riques-1",
    "href": "slides/SQL_3.html#compter-les-formes-de-gouvernement-et-les-r√©gion-dans-les-am√©riques-1",
    "title": "BD IV: SQL III",
    "section": "Compter les formes de gouvernement et les r√©gion dans les Am√©riques",
    "text": "Compter les formes de gouvernement et les r√©gion dans les Am√©riques\nregion         |governmentform                              |cnt|max |\n---------------+--------------------------------------------+---+----+\nCaribbean      |                                            | 24|78.9|\nCaribbean      |Constitutional Monarchy                     |  8|75.2|\nCaribbean      |Dependent Territory of the UK               |  5|78.9|\nCaribbean      |Republic                                    |  4|73.4|\n...            |                                            |   |    |\n               |Republic                                    | 19|75.8|\n               |Constitutional Monarchy                     |  9|75.2|\n               |Dependent Territory of the UK               |  7|78.9|\n               |Federal Republic                            |  5|77.1|\n               |Overseas Department of France               |  3|78.3|\n..."
  },
  {
    "objectID": "slides/SQL_3.html#portrait-robot-dune-requ√™te",
    "href": "slides/SQL_3.html#portrait-robot-dune-requ√™te",
    "title": "BD IV: SQL III",
    "section": "Portrait robot d‚Äôune requ√™te",
    "text": "Portrait robot d‚Äôune requ√™te\nSELECT &lt;attributs&gt;           -- les colonnes de la table r√©sultat\n\nFROM &lt;relations&gt;             -- la/les table/s qui √©mettent les donn√©es\n\n[WHERE &lt;condition&gt; ]         -- filtre\n\n[GROUP BY &lt;attributs de partitionnement&gt;   -- d√©coupage en groupes\n\n[HAVING &lt;condition&gt;]]      -- filtrage des groupes\n\n[ORDER BY &lt;critere&gt;]       -- trier \n\n\nSELECT : attributs du r√©sultat (avec agr√©gats √©ventuels)\n\nWHERE : condition de s√©lection ind√©pendante du GROUP BY\n\n\nHAVING : condition de s√©lection portant sur les groupes"
  },
  {
    "objectID": "slides/SQL_3.html#ordre-dex√©cution-des-√©l√©ments-dune-requ√™te",
    "href": "slides/SQL_3.html#ordre-dex√©cution-des-√©l√©ments-dune-requ√™te",
    "title": "BD IV: SQL III",
    "section": "Ordre d‚Äôex√©cution des √©l√©ments d‚Äôune requ√™te",
    "text": "Ordre d‚Äôex√©cution des √©l√©ments d‚Äôune requ√™te\n\nRassembler les donn√©es mentionn√©es dans la clause FROM\nFilter les lignes selon la clause WHERE\nRegrouper les lignes selon la clause GROUP BY\nFiltrer les groupes selon la clause HAVING\nSpecifier les colonnes du r√©sultat selon la clause SELECT\nTrier le r√©sultat final selon la clause ORDER BY"
  },
  {
    "objectID": "slides/BD_intro.html#situation-du-cours-bases-de-donn√©es-ma15y030-dans-la-licence-miashs",
    "href": "slides/BD_intro.html#situation-du-cours-bases-de-donn√©es-ma15y030-dans-la-licence-miashs",
    "title": "BD I: Introduction aux SGBD",
    "section": "Situation du cours Bases de Donn√©es (MA15Y030) dans la Licence MIASHS\n",
    "text": "Situation du cours Bases de Donn√©es (MA15Y030) dans la Licence MIASHS\n\n\nTroisi√®me cours tourn√© vers l‚Äôinformatique\n\n\nInitiation (L1, S1)\n\nAlgorithmes et Programmation (L2, S3)\n\n\nUn cours tourn√© vers les donn√©es avant Science des Donn√©es (L3, S6)"
  },
  {
    "objectID": "slides/BD_intro.html#le-d√©luge-des-donn√©es-une-mode",
    "href": "slides/BD_intro.html#le-d√©luge-des-donn√©es-une-mode",
    "title": "BD I: Introduction aux SGBD",
    "section": "Le d√©luge des donn√©es : une mode ?",
    "text": "Le d√©luge des donn√©es : une mode ?"
  },
  {
    "objectID": "slides/BD_intro.html#rien-de-neuf-sous-le-soleil",
    "href": "slides/BD_intro.html#rien-de-neuf-sous-le-soleil",
    "title": "BD I: Introduction aux SGBD",
    "section": "Rien de neuf sous le soleil ‚Ä¶",
    "text": "Rien de neuf sous le soleil ‚Ä¶\n\n De qui sont ces lignes ? Quand furent-elles √©crites ?\n\n\nJe croyais que le go√ªt de la statistique √©tait particulier aux administrateurs de nos jours¬†; mais je me trompais. Vers la fin de l‚Äôancien r√©gime, on envoie souvent √† l‚Äôintendant de petits tableaux tout imprim√©s qu‚Äôil n‚Äôa plus qu‚Äô√† faire remplir par ses subd√©l√©gu√©s et par les syndics des paroisses. Le contr√¥leur-g√©n√©ral se fait faire des rapports sur la nature des terres, sur leur culture, l‚Äôesp√®ce et la quantit√© des produits, le nombre des bestiaux, l‚Äôindustrie et les m≈ìurs des habitants. Les renseignements ainsi obtenus ne sont gu√®re moins circonstanci√©s ni plus certains que ceux que fournissent en pareils cas de nos jours les sous-pr√©fets et les maires. Le jugement que les subd√©l√©gu√©s portent, √† cette occasion, sur le caract√®re de leurs administr√©s, est en g√©n√©ral peu favorable. Ils reviennent souvent sur cette opinion que ¬´¬†le paysan est naturellement paresseux, et ne travaillerait pas s‚Äôil n‚Äôy √©tait oblig√© pour vivre.¬†¬ª\n\n\nC‚Äôest l√† une doctrine √©conomique qui para√Æt fort r√©pandue chez ces administrateurs."
  },
  {
    "objectID": "slides/BD_intro.html#les-donn√©es-int√©ressent",
    "href": "slides/BD_intro.html#les-donn√©es-int√©ressent",
    "title": "BD I: Introduction aux SGBD",
    "section": "Les donn√©es int√©ressent",
    "text": "Les donn√©es int√©ressent\n\nles sciences\nles administrations\nles entreprises\nles citoyennes (et les citoyens)\n‚Ä¶"
  },
  {
    "objectID": "slides/BD_intro.html#les-donn√©es-en-sciences-sociales",
    "href": "slides/BD_intro.html#les-donn√©es-en-sciences-sociales",
    "title": "BD I: Introduction aux SGBD",
    "section": "Les donn√©es en Sciences Sociales",
    "text": "Les donn√©es en Sciences Sociales\n\n\n\nPourquoi ?\nDe quoi sont faites les donn√©es ?\nComment les accumuler ?\nComment les interroger ?\nComment les conserver ? les √©diter ?\n\n\n\n\nBN Salle ovale"
  },
  {
    "objectID": "slides/BD_intro.html#sources-et-usages-des-donn√©es",
    "href": "slides/BD_intro.html#sources-et-usages-des-donn√©es",
    "title": "BD I: Introduction aux SGBD",
    "section": "Sources et usages des donn√©es",
    "text": "Sources et usages des donn√©es\n\n\nQuelques r√©f√©rences\n\n\nData humanities with R. Arnold and Tilton\n\nQuantitative tour at social sciences edited by Gelman and Cortina, 2009\n Relational databses on slideshare\n\nQuelques probl√®mes\n\nConstitution (archivage, etc)\nAcquisition/organisation\nUsage(s)\nMaintenance"
  },
  {
    "objectID": "slides/BD_intro.html#les-donn√©es-de-lentreprisedes-administrations",
    "href": "slides/BD_intro.html#les-donn√©es-de-lentreprisedes-administrations",
    "title": "BD I: Introduction aux SGBD",
    "section": "Les donn√©es de l‚Äôentreprise/des administrations",
    "text": "Les donn√©es de l‚Äôentreprise/des administrations\n\n\n\nLa comptabilit√©\nLes stocks (ERP)\nLa client√®le (CRM)\n‚Ä¶"
  },
  {
    "objectID": "slides/BD_intro.html#la-vie-des-donn√©es-en-r√©sum√©",
    "href": "slides/BD_intro.html#la-vie-des-donn√©es-en-r√©sum√©",
    "title": "BD I: Introduction aux SGBD",
    "section": "La vie des donn√©es (en r√©sum√©)",
    "text": "La vie des donn√©es (en r√©sum√©)\n\n\n\n Saisie/Alimentation\n Traitement(s)\n Usage(s)\n Archivage\n Maintenance\n\n\n\n\npipelines"
  },
  {
    "objectID": "slides/BD_intro.html#avant-hier",
    "href": "slides/BD_intro.html#avant-hier",
    "title": "BD I: Introduction aux SGBD",
    "section": "Avant-hier",
    "text": "Avant-hier\n\n\nLes entreprises et les administrations ont toujours cultiv√© une m√©moire sous forme de fichiers plus ou moins m√©canis√©s et formatt√©s.\nCes collections de fichiers m√©canis√©es r√©pondaient √† des exigences de fiabilit√©, de convenance (facilit√© de la recherche, de la maintenance)\n\n\n\nFrom https://www.ibm.com/history/punched-card"
  },
  {
    "objectID": "slides/BD_intro.html#aujourdhui",
    "href": "slides/BD_intro.html#aujourdhui",
    "title": "BD I: Introduction aux SGBD",
    "section": "Aujourd‚Äôhui",
    "text": "Aujourd‚Äôhui\n\n\n\nExplosion des volumes\nExplosion des d√©bits\nUsages (tr√®s) divers"
  },
  {
    "objectID": "slides/BD_intro.html#syst√®mes-dinformation-1",
    "href": "slides/BD_intro.html#syst√®mes-dinformation-1",
    "title": "BD I: Introduction aux SGBD",
    "section": "Syst√®mes d‚Äôinformation",
    "text": "Syst√®mes d‚Äôinformation\n\nUn syst√®me d‚Äôinformation (SI) est un ensemble de composants qui fonctionnent ensemble pour collecter, traiter, stocker et diffuser des informations.\n\n\n\nLes syst√®mes d‚Äôinformation ont des objectifs (tr√®s) divers.\n\n\nPar exemple : les syst√®mes de traitement des transactions (TPS), les syst√®mes d‚Äôinformation de gestion (MIS), les syst√®mes d‚Äôaide √† la d√©cision (DSS) et les syst√®mes de planification des ressources de l‚Äôentreprise (ERP)."
  },
  {
    "objectID": "slides/BD_intro.html#d√©composition-des-si",
    "href": "slides/BD_intro.html#d√©composition-des-si",
    "title": "BD I: Introduction aux SGBD",
    "section": "D√©composition des SI",
    "text": "D√©composition des SI\nUn syst√®me d‚Äôinformation comprend en g√©n√©ral les √©l√©ments suivants:\n\n\nMat√©riel informatique (ou pas) : dispositifs physiques utilis√©s pour collecter, stocker et traiter l‚Äôinformation (ordinateurs, serveurs, stockage, r√©seau, ‚Ä¶).\nLogiciels : Les programmes ex√©cut√©s sur le mat√©riel pour g√©rer les donn√©es et effectuer des t√¢ches sp√©cifiques (OS, SGBD, Logiciels applicatifs).\nDonn√©es\nPersonnes : Les usagers du syst√®me d‚Äôinformation\nProcessus : Les flux de travail et les r√®gles r√©gissant la mani√®re dont les donn√©es sont collect√©es, trait√©es et distribu√©es, conform√©ment aux objectifs."
  },
  {
    "objectID": "slides/BD_intro.html#syst√®mes-dinformation-si-et-bases-de-donn√©es-bd-sgbd-sgbdr",
    "href": "slides/BD_intro.html#syst√®mes-dinformation-si-et-bases-de-donn√©es-bd-sgbd-sgbdr",
    "title": "BD I: Introduction aux SGBD",
    "section": "Syst√®mes d‚Äôinformation (SI) et Bases de Donn√©es (BD, SGBD, SGBDR)",
    "text": "Syst√®mes d‚Äôinformation (SI) et Bases de Donn√©es (BD, SGBD, SGBDR)\nAu coeur des syst√®mes d‚Äôinformation (modernes) on trouve (presque toujours) les bases de donn√©es\n\n\n\n\n\n\nMise en garde\n\n\nToutes les bases de donn√©es ne sont pas relationnelles"
  },
  {
    "objectID": "slides/BD_intro.html#des-propri√©t√©s-d√©sirables-acid",
    "href": "slides/BD_intro.html#des-propri√©t√©s-d√©sirables-acid",
    "title": "BD I: Introduction aux SGBD",
    "section": "Des propri√©t√©s d√©sirables (ACID)",
    "text": "Des propri√©t√©s d√©sirables (ACID)\n\n\n\n\n\n\nAtomicit√©\n\n\nChaque ajout/modification d‚Äôinformation doit former un tout coh√©rent\nSi tout se passe correctement, les actions de la transaction sont toutes valid√©es, sinon on retourne √† l‚Äô√©tat initial\n\n\n\n\n\n\n\n\n\n\nCoh√©rence\n\n\nLe contenu de la base de donn√©es doit rester conforme √† des contraintes d√©finies lors de la conception\n\n\n\n\n\n\n\n\n\n\n\nIsolation\n\n\nLa bases de donn√©es doit pouvoir √™tre utilis√©e concurremment par plusieurs usagers\n\n\n\n\n\n\n\n\n\n\n\nDurabilit√©\n\n\nLa vie d‚Äôune base de donn√©es s‚Äô√©tale sur plusieurs dizaines d‚Äôann√©es"
  },
  {
    "objectID": "slides/BD_intro.html#bases-de-donn√©es",
    "href": "slides/BD_intro.html#bases-de-donn√©es",
    "title": "BD I: Introduction aux SGBD",
    "section": "\n Bases de donn√©es\n",
    "text": "Bases de donn√©es\n\n\nQu‚Äôest-ce que c‚Äôest (plus pr√©cis√©ment) ?\n\n\nCe sont des logiciels interm√©diaires (middleware) entre :\n\nSyst√®mes de gestion de fichiers/Syst√®mes d‚Äôexploitation   ‚Ä¶\nApplications (CRM, ERP, CMS, ‚Ä¶)    ‚Ä¶\n\n\n\nLes bases de donn√©es ne sont pas (simplement) un langage (comme JAVA, , )"
  },
  {
    "objectID": "slides/BD_intro.html#collection-de-tablesdata-frames",
    "href": "slides/BD_intro.html#collection-de-tablesdata-frames",
    "title": "BD I: Introduction aux SGBD",
    "section": "\n Collection de tables/data frames",
    "text": "Collection de tables/data frames\nCaricaturalement :\n\nUne base de donn√©es relationnelle est une collection de tables\n\n\nLes tables s‚Äôincarnent de plusieurs fa√ßons en informatique\nR, Pandas, les tableurs (Excel ‚Ä¶), offrent un environnement interactif de manipulation de donn√©es et un environnement de d√©finition de donn√©es"
  },
  {
    "objectID": "slides/BD_intro.html#data-frame",
    "href": "slides/BD_intro.html#data-frame",
    "title": "BD I: Introduction aux SGBD",
    "section": "\n Data frame",
    "text": "Data frame\n\n\n\nUn dataframe est une liste de vecteurs (colonnes)\nLes vecteurs (colonnes) d‚Äôun dataframe sont tous de m√™me longueur\nLes √©l√©ments d‚Äôun vecteur sont d‚Äôun m√™me type de base\nChaque vecteur a un nom et son propre type"
  },
  {
    "objectID": "slides/BD_intro.html#autres-environments-excel-java-python",
    "href": "slides/BD_intro.html#autres-environments-excel-java-python",
    "title": "BD I: Introduction aux SGBD",
    "section": "Autres environments (Excel, JAVA, Python)",
    "text": "Autres environments (Excel, JAVA, Python)\n\n\nLes spreadsheet des tableurs \nLes Dataframes de Pandas  \nLes tableaux d‚Äôobjets en JAVA\n\npermettent de repr√©senter ce que les dataframes repr√©sentent en R"
  },
  {
    "objectID": "slides/BD_intro.html#les-sgbd-vont-au-del√†",
    "href": "slides/BD_intro.html#les-sgbd-vont-au-del√†",
    "title": "BD I: Introduction aux SGBD",
    "section": "Les SGBD vont au del√† :",
    "text": "Les SGBD vont au del√† :\nIls offrent:\n\n\n\n\n\n\nPersistance\n\n\nEntre deux sessions, les donn√©es sont confi√©es au syst√®me de fichiers de l‚Äôordinateur\n\n\n\n\n\n\n\n\n\n\nInt√©grit√©\n\n\nLes donn√©es confi√©es au syst√®me de fichiers ne peuvent pas √™tre alt√©r√©es par d‚Äôautres logiciels\n\n\n\n\n\n\n\n\n\n\n\nConcurrence\n\n\nLes donn√©es peuvent √™tre manipul√©es/consult√©es/mises √† jour de mani√®re concurrente par plusieurs voire par une grande quantit√© d‚Äô utilisateurs."
  },
  {
    "objectID": "slides/BD_intro.html#usages",
    "href": "slides/BD_intro.html#usages",
    "title": "BD I: Introduction aux SGBD",
    "section": "Usages",
    "text": "Usages\n\nSites web dynamiques  \nLogiciels personnels\n\nDerri√®re certaines applications (gestion de photos, de carnet d‚Äôadresses, ‚Ä¶), on trouve des bases de donn√©es l√©g√®res (SQLITE)\n\n\nPartout\n\nsmartphones, tablettes, ‚Ä¶\nweb, r√©seaux sociaux\nadministrations (APOGEE, ‚Ä¶)\nentreprises (Stocks Supply Chain, Customer Relationship Management, ‚Ä¶)\nNSA"
  },
  {
    "objectID": "slides/BD_intro.html#lid√©e-cl√©-codd-1970",
    "href": "slides/BD_intro.html#lid√©e-cl√©-codd-1970",
    "title": "BD I: Introduction aux SGBD",
    "section": "L‚Äôid√©e cl√© (Codd, 1970)",
    "text": "L‚Äôid√©e cl√© (Codd, 1970)\nOrganiser les informations en tables ou relations\nD√©velopper et formaliser un langage de manipulation de tables : l‚Äôalg√®bre relationnelle (langage SQL, Structured Query Language)\n\nL‚Äôusager peut d√©finir l‚Äôorganisation des donn√©es\nIl peut interroger celles-ci (par des requ√™tes)\n\nLe langage est d√©claratif :\n\nOn d√©crit ce que l‚Äôon veut obtenir (quoi mais pas comment)\nLe syst√®me fait le reste‚Ä¶\n\n\nL‚Äô√©valuation de toutes les requ√™tes s‚Äôarr√™te (au moins en th√©orie : si on y met les moyens‚Ä¶)\nL‚Äôalg√®bre relationnelle/SQL n‚Äôest pas un langage complet (diff√©rence avec JAVA, C, Python, etc)"
  },
  {
    "objectID": "slides/BD_intro.html#quelques-acteurs",
    "href": "slides/BD_intro.html#quelques-acteurs",
    "title": "BD I: Introduction aux SGBD",
    "section": "Quelques acteurs",
    "text": "Quelques acteurs\n\n\nServeurs\n\nORACLE (commercial)\nDB2 (IBM commercial)\nSQLSERVER (Microsoft commercial)\nMySQL (open source)\nPostGres (open source)\nHana (commercial)\n\n\nClients\n\npsql\npgcli\ndbeaver\nPgAdmin\n‚Ä¶"
  },
  {
    "objectID": "slides/BD_intro.html#postgres-postgresql",
    "href": "slides/BD_intro.html#postgres-postgresql",
    "title": "BD I: Introduction aux SGBD",
    "section": "PostGres (PostgreSQL)",
    "text": "PostGres (PostgreSQL)\n\nUn serveur : etu-pgsql\nUn catalogue : bd_2023-24\nDes sch√©mas: world, pagila, nycflights13, ..."
  },
  {
    "objectID": "slides/BD_intro.html#un-exemple-de-sch√©ma-world",
    "href": "slides/BD_intro.html#un-exemple-de-sch√©ma-world",
    "title": "BD I: Introduction aux SGBD",
    "section": "Un exemple de sch√©ma world\n",
    "text": "Un exemple de sch√©ma world\n\nUn schema\nDes sch√©mas de table\n\ncontinent : association nom de continent (texte)-code de continent (entier)\ncountry : chaque tuple porte sur un √©tat/territoire\ncity : chaque tuple porte sur une ville (d√©isgn√©e par id) qui appartient √† un √©tat/territoire d√©sign√© par countrycode\ncountrylanguage : chaque tuple indique la part de la population d‚Äôun √©tat/territoire (d√©sign√© par countrycode) qui parle/conna√Æt une langue (d√©sign√©e par language) et pr√©cise si la langue est officielle dans cet √©tat/territoire."
  },
  {
    "objectID": "slides/BD_intro.html#d√©tails-du-schema-world",
    "href": "slides/BD_intro.html#d√©tails-du-schema-world",
    "title": "BD I: Introduction aux SGBD",
    "section": "D√©tails du schema world\n",
    "text": "D√©tails du schema world\n\n\n\nImage World\n\n\n\nUn sch√©ma de table : la donn√©e des noms des colonnes et des types des colonnes"
  },
  {
    "objectID": "slides/BD_intro.html#quelques-questions-et-propri√©t√©s-typiques",
    "href": "slides/BD_intro.html#quelques-questions-et-propri√©t√©s-typiques",
    "title": "BD I: Introduction aux SGBD",
    "section": "Quelques questions et propri√©t√©s typiques",
    "text": "Quelques questions et propri√©t√©s typiques\n\nExtraire de l‚Äôinformation\n\nAssurer de la coh√©rence apr√®s modification\n\nFaire en sorte que chaque √©tat/territoire soit identifi√© par un num√©ro unique\nFaire en sorte que chaque ville soit identifi√©e par un num√©ro unique\nNe pas proposer de donn√©es sur des villes/territoires/√©tats qui n‚Äôexistent pas\n\n\n\n\n\n\nPropager l‚Äôinformation\n\nHistoriciser le sch√©ma"
  },
  {
    "objectID": "slides/BD_intro.html#objectifs-du-cours",
    "href": "slides/BD_intro.html#objectifs-du-cours",
    "title": "BD I: Introduction aux SGBD",
    "section": "Objectifs du cours",
    "text": "Objectifs du cours\n\nComp√©tences d‚Äôun usager de BD relationnelles\nExprimer des requ√™tes en alg√®bre relationnelle et en SQL\nSQL D√©finition, manipulation et contr√¥le des donn√©es\nConcevoir un Mod√®le Conceptuel de Donn√©es (Entit√©s/Associations)\nD√©terminer les d√©pendances fonctionnelles et normaliser une relation"
  },
  {
    "objectID": "slides/BD_intro.html#plan-du-cours",
    "href": "slides/BD_intro.html#plan-du-cours",
    "title": "BD I: Introduction aux SGBD",
    "section": "Plan du cours",
    "text": "Plan du cours\n\nAlg√®bre et calcul relationnels\nSQL (alg√®bre relationnelle stricte)\nSQL sous-requ√™tes\nSQL agr√©gation\nSQL requ√™tes param√©tr√©es\nD√©finition de donn√©es/Conception\nNormalisation"
  },
  {
    "objectID": "slides/BD_intro.html#entrep√¥ts-de-donn√©es-fin-des-ann√©es-1980",
    "href": "slides/BD_intro.html#entrep√¥ts-de-donn√©es-fin-des-ann√©es-1980",
    "title": "BD I: Introduction aux SGBD",
    "section": "Entrep√¥ts de donn√©es (Fin des ann√©es 1980)",
    "text": "Entrep√¥ts de donn√©es (Fin des ann√©es 1980)\n\n\n\n\n\n\nDatawarehouse\n\n\n\nUn Data Warehouse est une technologie qui regroupe des donn√©es structur√©es provenant d‚Äôune ou de plusieurs sources afin qu‚Äôelles puissent √™tre compar√©es et analys√©es.\n\n\n\n\n\nEntrep√¥t_de_donn√©es sur Wikipedia"
  },
  {
    "objectID": "slides/BD_intro.html#lacs-de-donn√©es-2010",
    "href": "slides/BD_intro.html#lacs-de-donn√©es-2010",
    "title": "BD I: Introduction aux SGBD",
    "section": "Lacs de donn√©es (2010)",
    "text": "Lacs de donn√©es (2010)\n\n\n\n\n\n\nDatalake\n\n\nLe concept de Data Lake a √©t√© √©voqu√© pour la premi√®re fois, en 2010, par James Dixon, comme une solution pour le stockage de donn√©es sans pr√©-traitement et sans conna√Ætre pr√©cis√©ment l‚Äôusage futur qui en sera fait. L‚Äôimage du lac, permettant d‚Äôexpliquer, que diff√©rentes sources peuvent l‚Äôalimenter de mani√®re naturelle et brute, et que les utilisateurs peuvent y plonger pour l‚Äôexplorer et en rapporter des √©chantillons √† examiner"
  },
  {
    "objectID": "slides/BD_intro.html#au-del√†-du-relationnel-no-sql",
    "href": "slides/BD_intro.html#au-del√†-du-relationnel-no-sql",
    "title": "BD I: Introduction aux SGBD",
    "section": "Au del√† du relationnel: No SQL",
    "text": "Au del√† du relationnel: No SQL\n\nCe sont les grandes entreprises du web qui ont √©t√© les premi√®res confront√©es aux limitations intrins√®ques des SGBD relationnels traditionnels. Ces syst√®mes fond√©s sur une application stricte des propri√©t√©s ACID et g√©n√©ralement con√ßus pour fonctionner sur des ordinateurs uniques ont rapidement pos√© des probl√®mes d‚Äôextensibilit√©.\n\n\n\nAfin de r√©pondre √† ces limites, ces entreprises ont commenc√© √† d√©velopper leurs propres syst√®mes de gestion de bases de donn√©es pouvant fonctionner sur des architectures mat√©rielles distribu√©es et permettant de traiter des volumes de donn√©es importants.\n\n\n\n\nLes syst√®mes propri√©taires qui en ont r√©sult√©, Google (BigTable), Amazon (Dynamo (en)), LinkedIn (Voldemort), Facebook (Cassandra puis HBase), SourceForge.net (MongoDB), Ubuntu One (CouchDB), Baidu (Hypertable) ont √©t√© les pr√©curseurs du mod√®le NoSQL."
  },
  {
    "objectID": "slides/BD_intro.html#lire-plus",
    "href": "slides/BD_intro.html#lire-plus",
    "title": "BD I: Introduction aux SGBD",
    "section": "Lire plus",
    "text": "Lire plus\nGuy Harrison. Next Generation Databases. NoSQL, NewSQL, Big Data"
  },
  {
    "objectID": "slides/BD_admin_2.html#les-lois-des-tables",
    "href": "slides/BD_admin_2.html#les-lois-des-tables",
    "title": "BD VII: Administration et Droits",
    "section": "Les lois des tables",
    "text": "Les lois des tables\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n\n\nCodd‚Äôs Twelve Principles\n\n\n\nInformation is represented logically in tables\n\nData must be logically accessible by table, primary key, and column.\n\nNull values must be uniformly treated as ‚Äúmissing information,‚Äù not as empty strings, blanks, or zeros.\nMetadata (data about the database) must be stored in the database just as regular data is\nA single language must be able to define data, views, integrity constraints, authorization, transactions, and data manipulation\n\nViews must show the updates of their base tables and vice versa\nA single operation must be available to do each of the following operations: retrieve data, insert data, update data, or delete data\nBatch and end-user operations are logically separate from physical storage and access methods\nBatch and end-user operations can change the database schema without having to recreate it or the applications built upon it\n\nIntegrity constraints must be available and stored in the metadata, not in an application program\nThe data manipulation language of the relational system should not care where or how the physical data is distributed and should not require alteration if the physical data is centralized or distributed\nAny row processing done in the system must obey the same integrity rules and constraints that set-processing operations do"
  },
  {
    "objectID": "slides/BD_admin_2.html#probl√®me",
    "href": "slides/BD_admin_2.html#probl√®me",
    "title": "BD VII: Administration et Droits",
    "section": "Probl√®me",
    "text": "Probl√®me\nUn serveur de BD met √† la disposition d‚Äôune collectivit√© d‚Äôusagers un multitude de bases form√©es d‚Äôune collection de tables, de vues, de routines‚Ä¶\n\nLes usagers ne sont pas tous √©gaux‚Ä¶\n\n‚Äì\nCertains utilisateurs doivent pouvoir cr√©er des bases, d‚Äôautres les mettre √† jour, d‚Äôautres les consulter\n‚Äì\n\n\n Le contr√¥le de l‚Äôacc√®s‚Ä¶\n\nPeut √™tre motiv√© par un d√©sir de maintenir l‚Äôint√©grit√© ou la confidentialit√© des donn√©es.\nLe niveau de contr√¥le (granularit√©) d√©sirable peut varier : base, schema, table, colonne, ligne‚Ä¶."
  },
  {
    "objectID": "slides/BD_admin_2.html#confidentialit√©-et-s√©curit√©",
    "href": "slides/BD_admin_2.html#confidentialit√©-et-s√©curit√©",
    "title": "BD VII: Administration et Droits",
    "section": "Confidentialit√© et s√©curit√©",
    "text": "Confidentialit√© et s√©curit√©\nObjectif :\nProt√©ger les donn√©es g√©r√©es contre tout acc√®s (malveillant ou accidentel) non autoris√©\n\n\nQuels outils ?\n\nUn syst√®me de privil√®ges impl√©ment√© dans SQL pour d√©finir l‚Äôacc√®s des usagers et plus g√©n√©ralement des r√¥les aux diff√©rents objets"
  },
  {
    "objectID": "slides/BD_admin_2.html#commandes",
    "href": "slides/BD_admin_2.html#commandes",
    "title": "BD VII: Administration et Droits",
    "section": "Commandes",
    "text": "Commandes\nPour octroyer ou retirer des droits d‚Äôacc√®s (par exemple sur une relation ou une vue) :\nGRANT et REVOKE\nLes droits d‚Äôacc√®s donnent la possibilit√© d‚Äôex√©cuter des requ√™tes SQL\n Le propri√©taire (cr√©ateur) d‚Äôune relation √† tous les droits sur cette relation et on ne peut lui les retirer"
  },
  {
    "objectID": "slides/BD_admin_2.html#les-commandes",
    "href": "slides/BD_admin_2.html#les-commandes",
    "title": "BD VII: Administration et Droits",
    "section": "Les commandes",
    "text": "Les commandes\nD√©pendent du type d‚Äôobjet auquel on s‚Äôint√©resse.\nPour une table ou une vue :\n\n\nSyntaxe :\nGRANT {ALL PRIVILEGES |\n   privilege {,privilege*}\nON {[TABLE] table_name [, ...]\n    | ALL TABLES IN SCHEMA schema_name}\nTO role-specification [, ...]\n[WITH GRANT OPTION]\n\nrole-specification :\nrole_name, PUBLIC, ...\n\nprivilege :\nSELECT, DELETE, INSERT,\nUPDATE [(nom-attribut\n    {, nom-attribut})],\nREFERENCES [(nom-attribut\n     {, nom-attribut})]\n\n *WITH GRANT OPTION:] si sp√©cifi√©, donne le droit de transmettre les droits obtenus\n voir : https://www.postgresql.org/docs/current/sql-grant.html"
  },
  {
    "objectID": "slides/BD_admin_2.html#les-commandes-suite-granularit√©",
    "href": "slides/BD_admin_2.html#les-commandes-suite-granularit√©",
    "title": "BD VII: Administration et Droits",
    "section": "Les commandes (suite) : granularit√©",
    "text": "Les commandes (suite) : granularit√©\nOn peut aller plus loin et sp√©cifier le droit d‚Äôacc√®s √† seulement une ou plusieurs colonnes d‚Äôune table\nPour d‚Äôautres objets, comme les domaines, fonction, bases de donn√©es, sch√©mas ou r√¥les d‚Äôautres types de droits sont pertinents:\n\nle droit de cr√©er une BD ou un sch√©ma dans une BD existante\nle droit de se connecter √† une BD existante\nle droit d‚Äôex√©cuter une fonction\nle droit d‚Äôusage d‚Äôun sch√©ma (i.e.¬†d‚Äôen voir les objets existants)\nle droit d‚Äôattribuer des r√¥les √† des utilisateurs"
  },
  {
    "objectID": "slides/BD_admin_2.html#r√©voquer-des-droits",
    "href": "slides/BD_admin_2.html#r√©voquer-des-droits",
    "title": "BD VII: Administration et Droits",
    "section": "R√©voquer des droits",
    "text": "R√©voquer des droits\nvia le mot cl√© REVOKE\nSyntaxe (simplifi√©e) :\nREVOKE [ GRANT OPTION FOR ]\n{ { SELECT | INSERT | UPDATE | DELETE }\n| ALL [ PRIVILEGES ] }\n\nON { [ TABLE ] table_name [, ...]\n      | ALL TABLES IN SCHEMA schema_name }\n\nFROM role_spec [, ...]\n[ GRANTED BY role_spec ]\n[ CASCADE | RESTRICT ]\n *syntaxe compl√®te:] voir https://www.postgresql.org/docs/current/sql-revoke.html\nCommentaire\n\nGRANT OPTION FOR\nCASCADE\nRESTRICT"
  },
  {
    "objectID": "slides/BD_admin_2.html#exemples",
    "href": "slides/BD_admin_2.html#exemples",
    "title": "BD VII: Administration et Droits",
    "section": "Exemples",
    "text": "Exemples\nGRANT USAGE\nON SCHEMA durand\nTO thomas007\n\nGRANT SELECT\nON ALL TABLES IN SCHEMA durand\nTO thomas007\n\n\nOn peut se mettre ‚Äú√† la place‚Äù de l‚Äôutilisateur thomas007 par la commande :\nset role thomas007\n\n\nREVOKE SELECT\nON ALL TABLES IN SCHEMA durand\nFROM thomas007\nREVOKE USAGE\nON SCHEMA durand\nFROM thomas007\nOn pouvait donner directement les m√™mes droits √† tous les utilisateurs d‚Äôun m√™me r√¥le etudiant par exemple plut√¥t qu‚Äôun seul utilisateur\n\nUSAGE\nSELECT\nEXECUTE"
  },
  {
    "objectID": "slides/BD_admin_2.html#exemples-suite",
    "href": "slides/BD_admin_2.html#exemples-suite",
    "title": "BD VII: Administration et Droits",
    "section": "Exemples (suite)",
    "text": "Exemples (suite)\nSupposons que le schema durand contiennent une table resultat dont une des colonnes se nomme identifiant.\nQue peut faire (et ne pas faire) l‚Äôutilisateur thomas007 apr√®s ces trois commandes ?\n\nGRANT INSERT (identifiant) ON TABLE durand.resultat TO thomas007;\nGRANT USAGE ON SCHEMA durand  TO thomas007\nGRANT SELECT ON TABLE durand.resultat TO thomas007;\n\n\nIl peut selectionner les infos de la table resultat, inserer un tuple avec une valeur pour l‚Äôattribut identifiant et null pour les autres attributs\nIl ne peut pas effacer son insertion‚Ä¶"
  },
  {
    "objectID": "slides/BD_admin_2.html#politique-de-droits",
    "href": "slides/BD_admin_2.html#politique-de-droits",
    "title": "BD VII: Administration et Droits",
    "section": "Politique de droits",
    "text": "Politique de droits\n\nLors de la conception d‚Äôune base de donn√©es, on anticipe le fait que tous les utilisateurs ne vont pas avoir les m√™mes droits\nIl peut y avoir plusieurs niveaux d‚Äôadministrateurs aussi\nL‚Äôarchitecture des droits doit √™tre pens√©e le plus finement possible pour √©viter les probl√®mes de s√©curit√©\nSQL permet d‚Äôimpl√©menter directement cela (et ne pas le laisser √† la couche applicative au dessus)\n\nRenvoyer aux principes de Codd"
  },
  {
    "objectID": "slides/BD_admin_2.html#administrer-utilisation-dune-m√©tabase",
    "href": "slides/BD_admin_2.html#administrer-utilisation-dune-m√©tabase",
    "title": "BD VII: Administration et Droits",
    "section": "Administrer : utilisation d‚Äôune ‚Äúm√©tabase‚Äù",
    "text": "Administrer : utilisation d‚Äôune ‚Äúm√©tabase‚Äù\n\n\nLes SGBD relationnels contiennent des sch√©mas particuliers qui d√©crivent totalement l‚Äô√©tat des bases :\n\nsch√©ma existants,\ntables,\ncolonnes,\nutilisateurs,\nfonction stock√©es,\ncontraintes,\netc\n\n\nCes sch√©mas constituent une m√©tabase\nOn peut utiliser SQL pour interroger ces tables et donc (presque) tout savoir de l‚Äô√©tat du SGBD sans faire appel √† un langage ext√©rieur\nOn peut aussi apporter des modifications en utilisant les instructions SQL classiques INSERT, UPDATE, DELETE, etc"
  },
  {
    "objectID": "slides/BD_admin_2.html#administrer-utilisation-dune-m√©ta-base",
    "href": "slides/BD_admin_2.html#administrer-utilisation-dune-m√©ta-base",
    "title": "BD VII: Administration et Droits",
    "section": "Administrer : utilisation d‚Äôune ‚Äúm√©ta-base‚Äù",
    "text": "Administrer : utilisation d‚Äôune ‚Äúm√©ta-base‚Äù\nDeux sch√©mas jouent un r√¥le essentiel dans l‚Äôadministration de Postgres (situation similaire dans tous les SGBD)\ninformation_schema\n\nles d√©finitions de tables, de vues, de colonnes, les contraintes, ‚Ä¶\nil est form√© de tables et surtout de (tr√®s nombreuses) vues\ncomme pour les autres tables, les instructions, CREATE, ALTER, DROP modifient le contenu de ce sch√©ma (une seule instruction ALTER TABLE peut engendrer en cascade plusieurs mises √† jours dans les tables de information_schema)\ncontient, en th√©orie, des informations compatibles avec le standard SQL (identique sur tout SGBD respectant la norme)\n\npg_catalog\n\nContient des informations de nature similaire √† information_schema mais sp√©cifiques √† l‚Äôorganisation de Postgres"
  },
  {
    "objectID": "slides/BD_admin_2.html#quelques-tables-et-vues-de-information_schema",
    "href": "slides/BD_admin_2.html#quelques-tables-et-vues-de-information_schema",
    "title": "BD VII: Administration et Droits",
    "section": "Quelques tables et vues de information_schema\n",
    "text": "Quelques tables et vues de information_schema\n\n Une liste compl√®te des tables et vues de information_schema se trouve ici :\nhttps://www.postgresql.org/docs/current/information-schema.html\nQuelques exemples:\n\nschemata contient la liste des sch√©mas, leurs propri√©taires, leurs catalogue d‚Äôappartenance, etc\ntables contient la liste des noms de toutes les tables et vues et, entre autres, leurs BD et sch√©mas d‚Äôappartenance\ncolumns contient les noms de colonnes, les tables (et donc sch√©mas et BD) auxquels elles appartiennent.\nrole_table_grants contient la liste de tous les droits allou√©s, √† qui, par qui etc"
  },
  {
    "objectID": "slides/BD_admin_2.html#quelques-tables-et-vues-de-pg_catalog",
    "href": "slides/BD_admin_2.html#quelques-tables-et-vues-de-pg_catalog",
    "title": "BD VII: Administration et Droits",
    "section": "Quelques tables et vues de pg_catalog\n",
    "text": "Quelques tables et vues de pg_catalog\n\nUne liste compl√®te des tables et vues de pg_catalog se trouve ici :\n https://www.postgresql.org/docs/current/catalogs.html\nQuelques exemples:\n\npg_user contient la liste des utilisateurs, leur id syst√®me\npg_tables contient des informations similaires √† information_schema.tables\npg_views contient la liste des vues\npg_roles contient la liste des roles\npg_auth_members met en relation les r√¥les entre eux (quel r√¥le est contenu dans tel autre)"
  },
  {
    "objectID": "slides/BD_admin_2.html#exemples-1",
    "href": "slides/BD_admin_2.html#exemples-1",
    "title": "BD VII: Administration et Droits",
    "section": "Exemples",
    "text": "Exemples\nSELECT *\nFROM information_schema.tables;\nSELECT table_name\nFROM information_schema.tables\nWHERE table_type='VIEW' AND table_schema='durand';\n    +------------------+\n    | table_name       |\n    |------------------|\n    | listevuecc1      |\n    | notescc1         |\n    | listevuecc1_isif |\n    | q4               |\n    | q5               |\n    | q6               |\n    | defi1            |\n    | q1               |\n    | q2               |\n    | q3               |\n    +------------------+"
  },
  {
    "objectID": "slides/BD_admin_2.html#exemple-repr√©sentation-des-droits-dans-la-metabase",
    "href": "slides/BD_admin_2.html#exemple-repr√©sentation-des-droits-dans-la-metabase",
    "title": "BD VII: Administration et Droits",
    "section": "Exemple : Repr√©sentation des droits dans la metabase",
    "text": "Exemple : Repr√©sentation des droits dans la metabase\nSELECT table_schema, table_name, privilege_type\nFROM information_schema.role_table_grants\nWHERE grantee='durand'\n +----------------+--------------------+------------------+\n | table_schema   | table_name         | privilege_type   |\n |----------------+--------------------+------------------|\n | gestion_2022   | etudiantsmiashs    | INSERT           |\n | gestion_2022   | etudiantsmiashs    | SELECT           |\n | gestion_2022   | etudiantsmiashs    | UPDATE           |\n | gestion_2022   | etudiantsmiashs    | DELETE           |\n | gestion_2022   | etudiantsmiashs    | TRUNCATE         |\n | gestion_2022   | etudiantsmiashs    | REFERENCES       |\n | gestion_2022   | etudiantsmiashs    | TRIGGER          |"
  },
  {
    "objectID": "slides/BD_admin_2.html#information_schema.table_privileges",
    "href": "slides/BD_admin_2.html#information_schema.table_privileges",
    "title": "BD VII: Administration et Droits",
    "section": "information_schema.table_privileges",
    "text": "information_schema.table_privileges\nThe view table_privileges identifies all privileges granted on tables or views to a currently enabled role or by a currently enabled role.\nThere is one row for each combination of table, grantor, and grantee.\n\nLe role PUBLIC dispose du privil√®ge de SELECT sur les tables de pg_catalog et de information_schema"
  },
  {
    "objectID": "slides/SQL_2.html#op√©rateurs-ensemblistes-capcupsetminus",
    "href": "slides/SQL_2.html#op√©rateurs-ensemblistes-capcupsetminus",
    "title": "BD II: SQL II",
    "section": "Op√©rateurs ensemblistes: \\(\\cap,\\cup,\\setminus\\)",
    "text": "Op√©rateurs ensemblistes: \\(\\cap,\\cup,\\setminus\\)\n Les deux tables doivent avoir des sch√©mas identiques\n\nIntersection ( \\(\\cap\\) ) : les tuples qui sont √† la fois dans la requ√™te 1 et dans la requ√™te 2\n\n&lt;requete1&gt; INTERSECT &lt;requete2&gt;\n\n\nUnion ( \\(\\cup\\) ) : les tuples de la requ√™te 1 et ceux de la requ√™te 2\n\n&lt;requete1&gt; UNION &lt;requete2&gt;\n\n\n\nDiff√©rence ( \\(\\backslash\\) ) : les tuples de la requ√™te 1 qui ne sont pas des tuples de la requ√™te 2\n\n&lt;requete1&gt; EXCEPT &lt;requete2&gt;"
  },
  {
    "objectID": "slides/SQL_2.html#exemple-pour-except",
    "href": "slides/SQL_2.html#exemple-pour-except",
    "title": "BD II: SQL II",
    "section": "Exemple pour EXCEPT",
    "text": "Exemple pour EXCEPT\n`Fournisseur (NomF, VilleF, AdresseF)` \n\n`Piece(NomP, Prix, Couleur)`\n\n`Livraison(NumLiv, NomP, NomF, DateLiv, Quantite)`\nFournisseurs qui ont livr√© la pi√®ce x22 mais pas la pi√®ce x21\nSELECT NomF \nFROM Livraison \nWHERE NomP='x22'\n\nEXCEPT \n\nSELECT NomF\nFROM Livraison \nWHERE NomP='x21';"
  },
  {
    "objectID": "slides/SQL_2.html#requ√™tes-imbriqu√©es-in-exists-all-any-lateral",
    "href": "slides/SQL_2.html#requ√™tes-imbriqu√©es-in-exists-all-any-lateral",
    "title": "BD II: SQL II",
    "section": "Requ√™tes imbriqu√©es IN, EXISTS, ALL, ANY, LATERAL",
    "text": "Requ√™tes imbriqu√©es IN, EXISTS, ALL, ANY, LATERAL\n\nLe r√©sultat d‚Äôune requ√™te SQL est un ensemble de tuples‚Ä¶ donc une relation.\n Dans la clause WHERE d‚Äôune requ√™te, on peut utiliser une fonction d‚Äôune autre requ√™te, appel√©e sous-requ√™te\nIN, EXISTS, ALL, ANY sont des fonctions qui prennent une sous-requ√™te (une relation) en argument.\nDans une sous-requ√™te, on peut se r√©f√©rer √† des attributs des tables de la clause FROM.\nPour chaque ligne d‚Äôun item FROM qui fournit la colonne r√©f√©renc√©e, l‚Äôitem LATERAL est √©valu√© en utilisant cette ligne. Les lignes du r√©sultat sont jointes avec la ligne qui a servi √† les calculer.\nOn peut utiliser ces r√©sultats comme donn√©es d‚Äôune autre requ√™te\n Moyens : utiliser des fonctions de table dans la clause WHERE."
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : IN",
    "text": "Utilisation de sous-requ√™tes : IN\n\nOp√©rateur IN d√©j√† vu pour exprimer que l‚Äôattribut est √† valeur dans une certaine liste\nNouvelle utilisation de IN avec des sous-requ√™tes.\n\n&lt;attribut&gt; [NOT] IN (&lt;sous-requete&gt;)\nEvalu√©e √† vraie si  appartient au r√©sultat de la sous-requ√™te"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-1",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-1",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : IN",
    "text": "Utilisation de sous-requ√™tes : IN\nLister les villes de fournisseurs qui ont livr√© la pi√®ce ‚Äòx21‚Äô.\n\n\nSELECT DISTINCT VilleF \n\nFROM Fournisseur \n\nWHERE NomF IN ( \n  SELECT NomF  \n  FROM Livraison \n  WHERE NomP = 'x21'\n) ;  \n\nest √©quivalente √† :\nSELECT DISTINCT F.VilleF \n\nFROM Fournisseur F, Livraison L \n\nWHERE (F. NomF = L. NomF) AND \n  (L. NomP = 'x21');"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-2",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-2",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : IN",
    "text": "Utilisation de sous-requ√™tes : IN\nLister les couleurs de pi√®ces livr√©es par des fournisseurs de Paris\nSELECT DISTINCT Couleur \nFROM Piece\nWHERE NomP IN (   \n    SELECT NomP  #&lt;&lt; \n  FROM Livraison  #&lt;&lt; \n    WHERE NomF IN (\n    SELECT NomF   #&lt;&lt;\n    FROM Fournisseur   #&lt;&lt;\n    WHERE VilleF='Paris'\n    )  #&lt;&lt;\n  );  \n\nest √©quivalente √†\nSELECT DISTINCT P.Couleur\n\nFROM Piece P, Livraison L, Fournisseur F\n\nWHERE \n  P.NomP = L.NomP AND\n  L.NomF = F.NomF AND   \n  VilleF = 'Paris'  ;"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-3",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-3",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : IN",
    "text": "Utilisation de sous-requ√™tes : IN\n\nUtilisation ci-dessus pas tr√®s utile mais‚Ä¶\nPratique √† utiliser sous la forme NOT IN\n\nLister les noms de pi√®ces qui n‚Äôont jamais √©t√© livr√©es.\nSELECT NomP\nFROM Piece P \nWHERE NomP NOT IN  (\n  SELECT NomP   #&lt;&lt;\n  FROM  Livraison  #&lt;&lt;\n);\nEquivalence en alg√®bre relationnelle :\n\\[\\pi_{\\text{NomP}}(\\text{Piece}) - \\pi_{\\text{NomP}}(\\text{Livraison})\\]\n‚Ä¶. Une des fa√ßons de coder la diff√©rence en SQL"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-4",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-in-4",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : IN",
    "text": "Utilisation de sous-requ√™tes : IN\nLes capitales dont la population est plus grande que la moiti√© de la population du pays\nSELECT name_city FROM city\nWHERE id IN (\n  SELECT capital \n  FROM country\n  WHERE population_city&gt;=population_country*.5\n);\n\nest √©quivalente √† :\nSELECT name_city \nFROM country JOIN city \n  ON capital=id\nWHERE population_city&gt;=population_country*.5;"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : ANY, ALL",
    "text": "Utilisation de sous-requ√™tes : ANY, ALL\nDeux nouveaux op√©rateurs manipulant des sous-requ√™tes : ANY, ALL\n&lt;attributs&gt; =|&lt;&gt;|&lt;=|&lt;|&gt;|=&gt; ANY (&lt;sous-requete&gt;)\n√©valu√©e √† vraie si au moins un des r√©sultats de la sous requ√™te v√©rifie la comparaison avec &lt;attributs&gt;\n\n&lt;attributs&gt; =|&lt;&gt;|&lt;=|&lt;|&gt;|=&gt; ALL (&lt;sous-requete&gt;)\n√©valu√©e √† vraie si tous les r√©sultats de la sous-requ√™te v√©rifient la comparaison avec &lt;attributs&gt;\n\n\n\n&lt;attributs&gt;: peut √™tre une liste d‚Äôattributs"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-1",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-1",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : ANY, ALL",
    "text": "Utilisation de sous-requ√™tes : ANY, ALL\nAlternative au IN\nlister les noms de fournisseurs qui ont livr√© la pi√®ce ‚Äòx21‚Äô.\nSELECT NomF\nFROM Fournisseur\nWHERE NomF = ANY (\n    SELECT NomF\n    FROM Livraison\n    WHERE NomP = 'x21' \n);"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-2",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-2",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : ANY, ALL",
    "text": "Utilisation de sous-requ√™tes : ANY, ALL\nInformation sur la commande dont la quantit√© de i√®ces livr√©es √©tait la plus importante.\nSELECT *\nFROM Livraison\nWHERE Quantite &gt;= ALL (\n    SELECT Quantite \n  FROM Livraison\n);"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-3",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-3",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : ANY, ALL",
    "text": "Utilisation de sous-requ√™tes : ANY, ALL\nNoms et prix des pi√®ces livr√©es les plus ch√®res\nSELECT P.NomP, P.Prix \nFROM Livraison L, Piece P\nWHERE L.NomP = P.NomP AND \n  P.Prix&gt;=ALL (\n    SELECT Prix \n    FROM Piece\n);"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-4",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-any-all-4",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : ANY, ALL",
    "text": "Utilisation de sous-requ√™tes : ANY, ALL\nLa ville la plus peupl√©e de chaque pays\nSELECT c1.name_city \nFROM city as c1\nWHERE population_city &gt;= ALL (\n  SELECT c2.population_city \n  FROM city as c2\n  WHERE c1.countrycode=c2.countrycode\n);"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-exists",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-exists",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : EXISTS",
    "text": "Utilisation de sous-requ√™tes : EXISTS\n[NOT] EXISTS (&lt;sous-requete&gt;)\nest √©valu√©e √† vraie si la sous-requ√™te renvoie au moins un r√©sultat.\n\nNom et prix des pi√®ces qui ont √©t√© livr√©es\nSELECT NomP, Prix \nFROM Piece P \nWHERE EXISTS (\n  SELECT * \n  FROM Livraison \n  WHERE Livraison.NomP = P.NomP\n);\n\n\n Diff√©rence avec ANY\nL‚Äôutilisation de EXISTS s‚Äôapparente √† une condition bool√©enne.\nPas de test sur la valeur d‚Äôun attribut particulier."
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-exists-1",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-exists-1",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : EXISTS",
    "text": "Utilisation de sous-requ√™tes : EXISTS\nNom des Fournisseurs ayant livr√© la pi√®ce x21 mais qui n‚Äôont jamais livr√© la pi√®ce a22.\nSELECT DISTINCT NomF \nFROM Livraison L \nWHERE L.NomP='x21' AND \n  NOT EXISTS (\n    SELECT * \n    FROM Livraison L1 \n    WHERE L2.NomP='a22' AND L2.NomF=L.NomF\n  );"
  },
  {
    "objectID": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-exists-2",
    "href": "slides/SQL_2.html#utilisation-de-sous-requ√™tes-exists-2",
    "title": "BD II: SQL II",
    "section": "Utilisation de sous-requ√™tes : EXISTS",
    "text": "Utilisation de sous-requ√™tes : EXISTS\nLes r√©gions qui ont au moins une langue officielle :\nSELECT DISTINCT region \nFROM world.country AS co\nWHERE EXISTS (\n  SELECT * \n  FROM world.countrylanguage AS cl\n  WHERE co.countrycode = cl.countrycode  AND cl.isofficial\n);"
  },
  {
    "objectID": "slides/SQL_2.html#requ√™tes-imbriqu√©es-lateral",
    "href": "slides/SQL_2.html#requ√™tes-imbriqu√©es-lateral",
    "title": "BD II: SQL II",
    "section": "Requ√™tes imbriqu√©es : LATERAL",
    "text": "Requ√™tes imbriqu√©es : LATERAL\n\n\n\n\n\n\nImportant\n\n\nLes sous-requ√™tes d‚Äôune clause FROM peuvent √™tre pr√©c√©d√©es du mot-cl√© LATERAL\nOn peut alors faire r√©f√©rence √† des colonnes des √©l√©ments pr√©c√©dents de la clause FROM"
  },
  {
    "objectID": "slides/SQL_2.html#pour-les-fonction-tables",
    "href": "slides/SQL_2.html#pour-les-fonction-tables",
    "title": "BD II: SQL II",
    "section": "Pour les fonction-tables ‚Ä¶",
    "text": "Pour les fonction-tables ‚Ä¶\nLes arguments de la fonction peuvent contenir des r√©f√©rences √† des colonnes des items pr√©c√©dents de la clause FROM."
  },
  {
    "objectID": "slides/SQL_2.html#evaluation",
    "href": "slides/SQL_2.html#evaluation",
    "title": "BD II: SQL II",
    "section": "Evaluation",
    "text": "Evaluation\nPour chaque ligne d‚Äôun item FROM qui fournit la colonne r√©f√©renc√©e, l‚Äôitem LATERAL est √©valu√© en utilisant cette ligne. Les lignes du r√©sultat sont jointes avec la ligne qui a servi √† les calculer\nOn peut parler de sous-requ√™te param√©tr√©e"
  },
  {
    "objectID": "slides/SQL_2.html#un-exemple-de-lusage-de-lateral",
    "href": "slides/SQL_2.html#un-exemple-de-lusage-de-lateral",
    "title": "BD II: SQL II",
    "section": "Un exemple de l‚Äôusage de LATERAL",
    "text": "Un exemple de l‚Äôusage de LATERAL\nSELECT name_country, name_city \nFROM country, LATERAL (  \n  SELECT name_city       \n  FROM city              \n  WHERE city.countrycode=country.countrycode\n) ss   \nORDER BY name_country;\n√©quivalent √†\nSELECT name_country, name_city \nFROM country NATURAL JOIN city\nORDER BY name_country;\n LATERAL est surtout utilis√© quand la colonne r√©f√©renc√©e est n√©cessaire au calcul des lignes √† joindre"
  },
  {
    "objectID": "slides/SQL_2.html#lateral-en-action-sur-world",
    "href": "slides/SQL_2.html#lateral-en-action-sur-world",
    "title": "BD II: SQL II",
    "section": "LATERAL en action sur world",
    "text": "LATERAL en action sur world\n\n\nSELECT name_country, name_city \n\nFROM country, LATERAL ( \n  SELECT name_city  \n  FROM city  \n  WHERE city.countrycode=country.countrycode\n  ) ss  \n\nORDER BY name_city \n\nLIMIT 10 ;\n\n\n\n\nname_country\nname_city\n\n\n\n\nSpain\nA Coru√±a (La Coru√±a)\n\n\nGermany\nAachen\n\n\nDenmark\nAalborg\n\n\nNigeria\nAba\n\n\nIran\nAbadan\n\n\nBrazil\nAbaetetuba\n\n\nRussian Federation\nAbakan\n\n\nCanada\nAbbotsford\n\n\nNigeria\nAbeokuta\n\n\n‚Ä¶\n‚Ä¶"
  },
  {
    "objectID": "slides/SQL_2.html#syntaxe-des-clauses-with",
    "href": "slides/SQL_2.html#syntaxe-des-clauses-with",
    "title": "BD II: SQL II",
    "section": "Syntaxe des clauses WITH",
    "text": "Syntaxe des clauses WITH\nWITH r AS (\n  SELECT ...\n  FROM ...\n  WHERE ...\n), s AS (\n  SELECT ...\n  FROM ...\n  WHERE ...     -- possible reference to r \n)\nSELECT ...\nFROM   ... -- possible reference to r, s \nWHERE"
  },
  {
    "objectID": "slides/SQL_2.html#section",
    "href": "slides/SQL_2.html#section",
    "title": "BD II: SQL II",
    "section": "‚Ä¶",
    "text": "‚Ä¶\nWITH better_off AS (\n  SELECT countrycode, name_country, lifeexpectancy, capital\n  FROM country\n  WHERE gnpold &gt;0 AND gnp / gnpold &gt; 1.1\n),\nbig_capital AS (\n  SELECT id, countrycode\n  FROM city \n  WHERE population &gt; 2000000\n)\nSELECT bo.countrycode, name_country, lifeexpectancy\nFROM better_off bo JOIN big_capital bc ON\n  (bo.countrycode=bc.countrycode AND bc.id=bo.capital) ;"
  },
  {
    "objectID": "slides/SQL_0.html#un-peu-de-formalisation",
    "href": "slides/SQL_0.html#un-peu-de-formalisation",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Un peu de formalisation",
    "text": "Un peu de formalisation\nRappel sur la notion de relation (au sens classique)\n\n\n\n\n\n\nDefinition : Domaine\n\n\nUn ensemble d‚Äô√©l√©ments\n\n\n\n\nExemples : entiers \\(\\mathbb{Z}\\), flottants, chaines de caract√®res \\(\\mathcal{A}^*\\), date, ‚Ä¶\nLes types d‚Äôun langage de programmation comme C, Java, ‚Ä¶"
  },
  {
    "objectID": "slides/SQL_0.html#remarque",
    "href": "slides/SQL_0.html#remarque",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Remarque",
    "text": "Remarque\n\n\nUn domaine peut se d√©finir :\n\nen extension (en donnant la liste de toutes les valeurs possibles) ou\nen intention (en donnant une propri√©t√© caract√©ristique)."
  },
  {
    "objectID": "slides/SQL_0.html#produit-cart√©sien",
    "href": "slides/SQL_0.html#produit-cart√©sien",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Produit cart√©sien",
    "text": "Produit cart√©sien\n\n\n\n\n\n\nD√©finition : Produit cart√©sien\n\n\nLe Produit cart√©sien d‚Äôune liste de domaines \\(D_1, D_2, \\dots, D_k\\), not√©\n\\[D_1 \\times D_2 \\times \\dots \\times D_k\\]\nest l‚Äôensemble\n\\[\\Bigl\\{(t_1,t_2,\\dots,t_k);\\ t_i\\in D_i \\text{ pour } i=1,\\dots,k\\Bigr\\}\\]\nUn √©l√©ment \\(t=(t_1,t_2,\\dots,t_k)\\in D_1 \\times D_2 \\times \\dots \\times  D_k\\) est appel√© \\(k\\) -uplet"
  },
  {
    "objectID": "slides/SQL_0.html#exemple",
    "href": "slides/SQL_0.html#exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemple",
    "text": "Exemple\n\n\nDeux domaines\n\\[D_1=\\left\\{1,2,5\\right\\} \\quad\\text{et}\\quad D_2=\\left\\{2,4\\right\\}\\]\nUn produit cart√©sien\n\\[D_1 \\times D_2 = \\left\\{(1,2),(1,4),(2,2),(2,4),(5,2),(5,4)\\right\\}\\]\nUne relation\n\\[R =\\left\\{(1,2),(1,4),(5,2),(5,4)\\right\\}\\]\nUne relation est un (sous-) ensemble (d‚Äôun produit cart√©sien)\n\nOn peut repr√©senter \\(R\\) par le tableau :\n\n\n\n\\(X_1\\)\n\\(X_2\\)\n\n\n\n1\n2\n\n\n1\n4\n\n\n5\n2\n\n\n5\n4\n\n\n\n\nChaque ligne de la table correspond √† un √©l√©ment de la relation \\(R\\)"
  },
  {
    "objectID": "slides/SQL_0.html#relations-classiques",
    "href": "slides/SQL_0.html#relations-classiques",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Relations (classiques)",
    "text": "Relations (classiques)\nDans ce cours, toutes les relations ont un nombre fini d‚Äô√©l√©ments !"
  },
  {
    "objectID": "slides/SQL_0.html#relations-et-sch√©mas",
    "href": "slides/SQL_0.html#relations-et-sch√©mas",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Relations et sch√©mas",
    "text": "Relations et sch√©mas\n\nUne relation (classique) peut se voir comme une table √† deux dimensions :\n\nchaque ligne correspond alors √† un \\(k\\)-uplet (si la relation est d‚Äôarit√© \\(k\\)),\nchaque √©l√©ment d‚Äôune colonne est √† valeur dans un domaine.\nUn domaine peut appara√Ætre plusieurs fois dans la d√©finition d‚Äôune relation."
  },
  {
    "objectID": "slides/SQL_0.html#sch√©ma-dune-relation",
    "href": "slides/SQL_0.html#sch√©ma-dune-relation",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Sch√©ma d‚Äôune relation",
    "text": "Sch√©ma d‚Äôune relation\n\n\n\n\n\n\nD√©finition : sch√©ma\n\n\nLe Sch√©ma d‚Äôune relation \\(R\\) est la donn√©e des attributs et domaines de la relation\n\n\n\nLe sch√©ma peut se noter\n\\[R(A_1\\! :\\! D_1,A_2\\! :\\! D_2,\\dots,A_k\\! :\\! D_k)\\]\no√π \\(A_i\\) : attribut et \\(D_i\\) : domaine."
  },
  {
    "objectID": "slides/SQL_0.html#exemple-de-sch√©ma-table-bebes-dans-babynames",
    "href": "slides/SQL_0.html#exemple-de-sch√©ma-table-bebes-dans-babynames",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemple de sch√©ma : table bebes dans babynames\n",
    "text": "Exemple de sch√©ma : table bebes dans babynames\n\n\n\nbd_2023-24&gt; \\dt\n+-----------+-------+-------+-----------+\n| Schema    | Name  | Type  | Owner     |\n|-----------+-------+-------+-----------|\n| babynames | bebes | table | boucheron |\n+-----------+-------+-------+-----------+\n\nbd_2023-24&gt; \\d bebes\n+--------+------------------------+-----------+\n| Column | Type                   | Modifiers |\n|--------+------------------------+-----------|\n| sexe   | integer                |           |\n| prenom | character varying(500) |           |\n| annee  | integer                |           |\n| nombre | integer                |           |\n+--------+------------------------+-----------+\n\\[\\left((\\textsf{sexe}, \\mathbb{Z}), (\\textsf{prenom}, \\texttt{char}), (\\texttt{annee}, \\mathbb{Z}), (\\texttt{nombre}, \\mathbb{Z})\\right)\\]\n\nDonn√©es INSEE. Une ligne de la table b√©b√©s nous informe qu‚Äôen France (h√©xagone?), pendant une annee, le nombre de naissances de sexe sexe, ayant re√ßu le pr√©nom prenom est donn√©e par la colonne nombre.\nbd_2023-24&gt; SELECT * \nFROM bebes \nWHERE sexe=1 AND annee=2000 AND prenom='TH√âO' ;\n\n+------+--------+-------+--------+\n| sexe | prenom | annee | nombre |\n|------+--------+-------+--------|\n| 1    | TH√âO   | 2000  | 7961   |\n+------+--------+-------+--------+\nL‚Äôarit√© de bebes est \\(4\\), sa cardinalit√© est \\(648 614\\)."
  },
  {
    "objectID": "slides/SQL_0.html#formalisation-alternative",
    "href": "slides/SQL_0.html#formalisation-alternative",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Formalisation alternative",
    "text": "Formalisation alternative\n\nEn BD, l‚Äôordre des √©l√©ments et l‚Äôordre des colonnes n‚Äôa pas d‚Äôimportance (on d√©signe les membres d‚Äôun \\(k\\)-uplet par leur nom plut√¥t que par leur position/rang)\nLa d√©finition formelle diff√®re donc de celle d‚Äôune relation classique\nSoient \\(\\{A_1,...,A_k\\}\\) un ensemble fini et \\(D_1,...,D_k\\) suite de domaines.\n\n\n\n\n\n\n\nNotation\n\n\nUne relation \\(R\\) de sch√©ma \\(R(A_1\\! :\\! D_1,A_2\\! :\\! D_2,\\dots,A_k\\! :\\! D_k)\\) est la donn√©e d‚Äôun ensemble d‚Äô√©l√©ments, not√© \\(\\mathcal{R}\\) et de \\(k\\) fonctions \\(\\mathcal{A}_1: \\mathcal{R}\\rightarrow D_1\\), ‚Ä¶, \\(\\mathcal{A}_k: \\mathcal{R}\\rightarrow D_k\\).\nPour tout \\(t\\in \\mathcal{R}\\) et \\(i\\leq k\\), on note \\(t.A_i=\\mathcal{A}_i(t)\\) l‚Äôimage par \\(\\mathcal{A}_i\\) de \\(t\\).\nUn √©l√©ment \\(t\\) de \\(\\mathcal{R}\\) est appel√© tuple de la relation \\(R\\)"
  },
  {
    "objectID": "slides/SQL_0.html#relations-et-sch√©mas-formalisation",
    "href": "slides/SQL_0.html#relations-et-sch√©mas-formalisation",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Relations et sch√©mas : formalisation",
    "text": "Relations et sch√©mas : formalisation\n\n\nbd_2023-24&gt; SELECT * \nFROM bebes \nWHERE sexe=1 AND \n  annee&gt; 1960 AND \n  prenom LIKE 'THEODULE' ;\n+------+----------+-------+--------+\n| sexe | prenom   | annee | nombre |\n|------+----------+-------+--------|\n| 1    | THEODULE | 1961  | 4      |\n| 1    | THEODULE | 1962  | 4      |\n| 1    | THEODULE | 1965  | 4      |\n| 1    | THEODULE | 1969  | 4      |\n+------+----------+-------+--------+\n\nQuatre tuples de bebes : \\(t_1, t_2, t_3, t_4\\).\n\\[\\begin{align*}\nt_1.\\text{sexe} & =  1 \\\\\nt_1.\\text{prenom} & = \\texttt{THEODULE} \\\\\nt_1.\\text{annee} & = 1961 \\\\\nt_1.\\text{nombre} & = 4\n\\end{align*}\\]"
  },
  {
    "objectID": "slides/SQL_0.html#r√©sum√©-informel",
    "href": "slides/SQL_0.html#r√©sum√©-informel",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "R√©sum√© informel",
    "text": "R√©sum√© informel\n\nRELATION ‚ÜîÔ∏é TABLE √Ä DEUX DIMENSIONS\n(NOM DE) COLONNE ‚ÜîÔ∏é ATTRIBUT\nEN-T√äTE DU TABLEAU ‚ÜîÔ∏é SCHEMA DE LA RELATION\nLIGNE ‚ÜîÔ∏é TUPLE\nENSEMBLE DES LIGNES ‚ÜîÔ∏é CONTENU DE LA RELATION"
  },
  {
    "objectID": "slides/SQL_0.html#langage-de-manipulation-de-donn√©es",
    "href": "slides/SQL_0.html#langage-de-manipulation-de-donn√©es",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Langage de manipulation de donn√©es",
    "text": "Langage de manipulation de donn√©es\nL‚Äôalg√®bre relationnelle est un syst√®me de calcul sur les tables\nElle est form√©e d‚Äôune collection d‚Äôop√©rateurs qui prennent en argument des tables et retournent des tables\n\n\n\n\n\n\nRemarque:\n\n\nLes op√©rateurs prennent en g√©n√©ral des arguments suppl√©mentaires qui ne sont pas des tables. La notion d‚Äôalg√®bre relationnelle est inspir√©e par les structures alg√©briques comme les groupes, les anneaux, les corps o√π des op√©rations internes op√®rent sur une ensemble (par exemple \\((\\mathbb{R}, +, \\times)\\)), mais elle ne rentre pas exactement dans le cadre.\n\n\n\nL‚Äôalg√®bre n‚Äôest pas aussi expressive qu‚Äôun langage de programmatoin classique (comme Python). C‚Äôest cela qui rend ce mod√®le de calcul int√©ressant : il permet de faire des choses pas triviales, mais il est plus facile √† utiliser qu‚Äôun langage de programmation."
  },
  {
    "objectID": "slides/SQL_0.html#op√©rateurs-de-base",
    "href": "slides/SQL_0.html#op√©rateurs-de-base",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Op√©rateurs de base",
    "text": "Op√©rateurs de base\n\n\n\n\n\n\nListe des op√©rateurs\n\n\nL‚Äôalg√®bre relationnelle est d‚Äôabord un *Langage de Manipulation de Donn√©es& (LMD)}.\n\nUnion: \\(\\Large{\\cup}\\)\nIntersection: \\(\\Large{\\cap}\\)\nDiff√©rence: \\(\\Large{\\backslash}\\)\nProjection: \\(\\Large{\\Pi}\\)\nS√©lection: \\(\\Large{\\sigma}\\)\nProduit cart√©sien: \\(\\Large{\\times}\\)\nRenommage: \\(\\Large{\\rho}\\)\n\ns‚Äôappliquent √† des relations pour produire d‚Äôautres relations (le r√©sultat)."
  },
  {
    "objectID": "slides/SQL_0.html#union-cup-et-intersection-cap",
    "href": "slides/SQL_0.html#union-cup-et-intersection-cap",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Union \\(\\cup\\) et intersection \\(\\cap\\)\n",
    "text": "Union \\(\\cup\\) et intersection \\(\\cap\\)\n\n\n\n\n\n\n\nD√©finition\n\n\n\nL‚Äôunion et l‚Äôintersection sont des op√©rations portant sur deux relations \\(R_1\\) et \\(R_2\\) de m√™me sch√©ma\n\\(T=R_1\\cup R_2\\) est constitu√©e des tuples appartenant √† \\(R_1\\) ou √† \\(R_2\\).\n\\(T=R_1\\cap R_2\\) est constitu√©e des tuples appartenant √† \\(R_1\\) et √† \\(R_2\\).\nLes Sch√©mas de \\(R_1\\cup R_2\\), \\(R_1\\cap R_2\\) sont les m√™mes que ceux de \\(R_1\\) et \\(R_2\\)"
  },
  {
    "objectID": "slides/SQL_0.html#union-exemple",
    "href": "slides/SQL_0.html#union-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Union : exemple",
    "text": "Union : exemple\n\n\n\n-- THEO_1900\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEOBALD  | 1900  | 6      |\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEOPHILE | 1900  | 309    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n| 1    | THEOPHANE | 1900  | 3      |\n+------+-----------+-------+--------+\n\n-- THEO_2000\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEO      | 2000  | 6      |\n| 1    | THAO      | 2000  | 4      |\n| 1    | TH√âO      | 2000  | 7961   |\n| 1    | TH√âO-PAUL | 2000  | 3      |\n| 1    | THEODOR   | 2000  | 3      |\n| 1    | THEOPHANE | 2000  | 47     |\n| 1    | THEODORE  | 2000  | 149    |\n| 1    | THEOPHILE | 2000  | 336    |\n| 1    | THEOPHYLE | 2000  | 4      |\n| 1    | THEOS     | 2000  | 3      |\n| 1    | THEOTIM   | 2000  | 4       |\n| 1    | THEOTIME  | 2000  | 73     |\n+------+-----------+-------+--------+\n\nTHEO_1900 ‚à™ THEO_2000\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEODOR   | 2000  | 3      |\n| 1    | THAO      | 2000  | 4      |\n| 1    | TH√âO      | 2000  | 7961   |\n| 1    | TH√âO-PAUL | 2000  | 3      |\n| 1    | THEOBALD  | 1900  | 6      |\n| 1    | THEO      | 2000  | 6      |\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n| 1    | THEODORE  | 2000  | 149    |\n| 1    | THEOPHANE | 1900  | 3      |\n| 1    | THEOPHANE | 2000  | 47     |\n| 1    | THEOPHILE | 1900  | 309    |\n| 1    | THEOTIME  | 2000  | 73     |\n| 1    | THEOPHILE | 2000  | 336    |\n| 1    | THEOPHYLE | 2000  | 4      |\n| 1    | THEOS     | 2000  | 3      |\n| 1    | THEOTIM   | 2000  | 4      |\n+------+-----------+-------+--------+"
  },
  {
    "objectID": "slides/SQL_0.html#intersection-exemple",
    "href": "slides/SQL_0.html#intersection-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Intersection : exemple",
    "text": "Intersection : exemple\n\n\n-- THEO_1900\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEOBALD  | 1900  | 6      |\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEOPHILE | 1900  | 309    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n| 1    | THEOPHANE | 1900  | 3      |\n+------+-----------+-------+--------+\n\n-- THEOD_1900\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n+------+-----------+-------+--------+\n\nTHEO_1900 ‚à© THEOD_1900\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n+------+-----------+-------+--------+\ncar THEOD_1900 ‚äÇ THEO_1900"
  },
  {
    "objectID": "slides/SQL_0.html#diff√©rence",
    "href": "slides/SQL_0.html#diff√©rence",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Diff√©rence",
    "text": "Diff√©rence\n\n\n\n\n\n\nD√©finition\n\n\n\nLa diff√©rence de deux relations \\(R_1\\) et \\(R_2\\) (de m√™me sch√©ma) est une relation \\(T\\)\nde m√™me sch√©ma que \\(R_1\\) et \\(R_2\\)\nconstitu√©e des tuples appartenant √† \\(R_1\\) et n‚Äôappartenant pas √† \\(R_2\\).\nOn note \\(T = R_1 - R_2\\).\n\n\n\n\n\n\n\n\n\n\n\nOp√©ration non commutative !\n\n\n\\(R_1 - R_2\\neq  R_2 - R_1\\) (en g√©n√©ral)."
  },
  {
    "objectID": "slides/SQL_0.html#diff√©rence-exemple",
    "href": "slides/SQL_0.html#diff√©rence-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Diff√©rence : exemple",
    "text": "Diff√©rence : exemple\n\n\n-- THEO_1900\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEOBALD  | 1900  | 6      |\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEOPHILE | 1900  | 309    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n| 1    | THEOPHANE | 1900  | 3      |\n+------+-----------+-------+--------+\n\n-- THEOD_1900\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n+------+-----------+-------+--------+\n\nTHEO_1900 ‚àñ THEOD_1900\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEOBALD  | 1900  | 6      |\n| 1    | THEOPHILE | 1900  | 309    |\n| 1    | THEOPHANE | 1900  | 3      |\n+------+-----------+-------+--------+"
  },
  {
    "objectID": "slides/SQL_0.html#produit-cart√©sien-1",
    "href": "slides/SQL_0.html#produit-cart√©sien-1",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Produit Cart√©sien",
    "text": "Produit Cart√©sien\n\n\n\n\n\n\nD√©finition\n\n\n\n\nSoient:\n\n\n\\(R_1\\) de sch√©ma \\(R_1(A_1,A_2,...,A_k)\\)\n\n\n\\(R_2\\) de sch√©ma \\(R_2(B_1,B_2,...,B_\\ell)\\)\n\navec \\(A_i\\neq B_j\\), pour tout \\(i=1,...,k\\), \\(j=1,..,\\ell\\)\n\n\n\nDans le contexte ‚Äúclassique‚Äù : \\(R_1 \\times R_2= \\{(e_1,e_2): e_1\\in R_1, e_2\\in R_2\\}\\)\n\\(R=R_1 \\times R_2\\) de sch√©ma \\(R(A_1,A_2,...,A_k,B_1,B_2,...,B_\\ell)\\). Le sch√©ma de \\(R\\) est l‚Äôunion des sch√©mas de \\(R_1\\) et \\(R_2\\)\n\n\n\n\n\n\n\n\n\n\nAttention\n\n\nEn alg√®bre relationnelle, cette op√©ration est commutative ( \\(R_1\\times R_2 = R_2\\times R_1\\) ) et associative"
  },
  {
    "objectID": "slides/SQL_0.html#produit-cart√©sien-2",
    "href": "slides/SQL_0.html#produit-cart√©sien-2",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Produit cart√©sien :",
    "text": "Produit cart√©sien :\n\n\n\n\n\n\nD√©finition formelle\n\n\n\\(R=R_1\\times R_2\\) est la relation de sch√©ma \\(R(A_1,A_2,...,A_k,B_1,B_2,...,B_\\ell)\\) v√©rifiant~:\n\nPour tout \\(t\\in R\\), il existe \\(t_1\\in R_1\\), \\(t_2\\in R_2\\) (\\(\\forall t \\in R, \\exists t_1 \\in R_1, \\exists t_2 \\in R_2, \\ldots\\)) tels que :\n\n\\[t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell\\]\n\nR√©ciproquement, pour tout \\(t_1\\in R_1\\), \\(t_2\\in R_2\\) , il existe \\(t\\in R\\) tels que :\n\n\\[t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad \\text{et} \\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell\\]\n\\[\\forall t_1 \\in R_1, \\forall t_2 \\in R_2, \\exists t \\in R, \\qquad  t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad \\text{et} \\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell\\]"
  },
  {
    "objectID": "slides/SQL_0.html#produit-cart√©sien-exemple",
    "href": "slides/SQL_0.html#produit-cart√©sien-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Produit cart√©sien : exemple",
    "text": "Produit cart√©sien : exemple"
  },
  {
    "objectID": "slides/SQL_0.html#projection-largepi",
    "href": "slides/SQL_0.html#projection-largepi",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Projection ( \\(\\Large{\\pi}\\) )",
    "text": "Projection ( \\(\\Large{\\pi}\\) )\n\n\n\n\n\n\nD√©finition\n\n\n\nLa projection d‚Äôune relation \\(R\\) de sch√©ma \\(R(A_1,\\dots, A_k)\\) sur les attributs \\(A_{i_1}, \\dots, A_{i_p}\\), \\(i_1,..., i_p\\in \\{1,...,k\\}\\), est la relation \\(S\\)\n\nde sch√©ma \\(S(A_{i_1}, \\dots,A_{i_p})\\)\n\ndont les tuples sont obtenus par √©limination des attributs non mentionn√©s dans \\(A_{i_1}, \\dots, A_{i_p}\\) (et par √©limination des doublons).\nOn note \\(S = \\pi_{A_{i_1}, \\dots, A_{i_p}} (R)\\).\n\n\nD√©finition formelle :\n\n\\[s\\in S\\quad  \\iff \\quad \\exists t\\in R, \\forall n\\in\\left\\{1,\\dots,p\\right\\}\\qquad s.A_{i_n}=t.A_{i_n}\\]\n\n\n\n\n\n\n\n\n\nRemarque\n\n\nImplicitement, on a √©limination des doublons car une projection peut produire plusieurs fois le m√™me tuple."
  },
  {
    "objectID": "slides/SQL_0.html#projection-exemple",
    "href": "slides/SQL_0.html#projection-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Projection : Exemple",
    "text": "Projection : Exemple\nŒ†(THEOD_1900, prenom, nombre)\n+-----------+---------+\n| prenom    |  nombre |\n|-----------+---------+\n| THEODORE  |  227    |\n| THEODOSE  |  3      |\n| THEODULE  |  39     |\n+-----------+---------+\nIci, aucune √©liminitation de doublons n‚Äôa √©t√© n√©cessaire"
  },
  {
    "objectID": "slides/SQL_0.html#s√©lection-largesigma",
    "href": "slides/SQL_0.html#s√©lection-largesigma",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "S√©lection ( \\(\\Large{\\sigma}\\) )",
    "text": "S√©lection ( \\(\\Large{\\sigma}\\) )\n\n\n\n\n\n\nD√©finition\n\n\n\n\nLa s√©lection d‚Äôune relation \\(R\\) par une condition \\(C\\) est une relation \\(S\\)\n\nde m√™me sch√©ma que \\(R\\)\ndont les tuples sont ceux de \\(R\\) qui satisfont la condition \\(C\\).\n\n\nOn note \\(S = \\sigma_C (R)\\).\n\nLa condition \\(C\\)\n\ns‚Äôexprime √† l‚Äôaide des noms d‚Äôattributs de la relation ou de constantes (pour les op√©randes)\non peut utiliser des op√©rateurs arithm√©tiques de comparaison ( \\(=, \\neq, \\leq, \\geq, &lt;, &gt;\\) ) ainsi que des connecteurs logiques ( \\(\\lnot, \\land, \\lor\\) ).."
  },
  {
    "objectID": "slides/SQL_0.html#s√©lection-exemple",
    "href": "slides/SQL_0.html#s√©lection-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "S√©lection : Exemple",
    "text": "S√©lection : Exemple\nœÉ(THEO_1900, ¬¨ prenom LIKE ‚ÄòTHEOD%‚Äô)\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEOBALD  | 1900  | 6      |\n| 1    | THEOPHILE | 1900  | 309    |\n| 1    | THEOPHANE | 1900  | 3      |\n+------+-----------+-------+--------+"
  },
  {
    "objectID": "slides/SQL_0.html#renommage",
    "href": "slides/SQL_0.html#renommage",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Renommage",
    "text": "Renommage\n\n\n\n\n\n\nD√©finition\n\n\n\nSoit \\(R\\) de sch√©ma \\(R(A_1,\\dots, A_k)\\), le renommage d‚Äôun attribut \\(A_i\\), \\(i\\leq k\\), en \\(B\\) est une relation \\(S\\) :\n\nde m√™me contenu (m√™mes lignes)\nde sch√©ma \\(S(A_1,...,A_{i-1},B,A_{i+1},..., A_k)\\)\n\nOn le note \\(S=\\rho_{A_i\\mapsto B}(R)\\)"
  },
  {
    "objectID": "slides/SQL_0.html#renommage-exemple",
    "href": "slides/SQL_0.html#renommage-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Renommage : Exemple",
    "text": "Renommage : Exemple\n-- THEOD_1900\n\n+------+-----------+-------+--------+\n| sexe | prenom    | annee | nombre |\n|------+-----------+-------+--------|\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n+------+-----------+-------+--------+\nœÅ(THEOD_1900, sexe‚Üísex, prenom‚Üíname, annee‚Üíyear, nombre‚Üícount)\n-- THEOD_1900\n\n+------+-----------+-------+--------+\n| sex  | name      | year  | count  |\n|------+-----------+-------+--------|\n| 1    | THEODORE  | 1900  | 227    |\n| 1    | THEODOSE  | 1900  | 3      |\n| 1    | THEODULE  | 1900  | 39     |\n+------+-----------+-------+--------+\nUtilit√© Va permettre d‚Äô√©tendre certains op√©rateurs pour des relations de sch√©mas non-disjoints"
  },
  {
    "objectID": "slides/SQL_0.html#alg√®bre-relationnelle",
    "href": "slides/SQL_0.html#alg√®bre-relationnelle",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Alg√®bre relationnelle",
    "text": "Alg√®bre relationnelle\n\nOp√©rations ensemblistes classiques.\nProjection : √©limine des colonnes\nS√©lection : √©limine des lignes\n\nPour interroger une BD, on compose ces op√©rateurs :"
  },
  {
    "objectID": "slides/SQL_0.html#exemple-1",
    "href": "slides/SQL_0.html#exemple-1",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemple",
    "text": "Exemple\nœÄ(œÉ(THEO_1900, prenom LIKE ‚ÄòTHEOD%‚Äô), prenom, nombre)\n\nœÅ(œÄ(œÉ(THEO_1900, prenom LIKE ‚ÄòTHEOD%‚Äô), prenom, nombre), prenom‚Üíname, nombre‚Üícount)"
  },
  {
    "objectID": "slides/SQL_0.html#de-la-composition-aux-tuyaux-pipelines",
    "href": "slides/SQL_0.html#de-la-composition-aux-tuyaux-pipelines",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "De la composition aux tuyaux (pipelines)",
    "text": "De la composition aux tuyaux (pipelines)\nOn peut rendre la composition de fonctions plus lisible (pour l‚Äôhumain) en reprenant un m√©canisme d‚ÄôUnix : le pipe (tuyau) |&gt; (notation de )\nPlut√¥t qu‚Äô√©crire \\(g(f(x,y), z, t)\\), on convient d‚Äô√©crire f(x,y) |&gt; g(z, t) voire x |&gt; f(y) |&gt; g(z,t)\nEt pour rendre l‚Äôexpression encore plus lisible on peut √©crire\nx |&gt; \n  f(y) |&gt; \n  g(z,t)"
  },
  {
    "objectID": "slides/SQL_0.html#de-la-composition-aux-tuyaux-suite",
    "href": "slides/SQL_0.html#de-la-composition-aux-tuyaux-suite",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "De la composition aux tuyaux (suite)",
    "text": "De la composition aux tuyaux (suite)\nOn peut ainsi r√©√©crire\nœÅ(œÄ(œÉ(THEO_1900, prenom LIKE ‚ÄòTHEOD%‚Äô), prenom, nombre), prenom‚Üíname, nombre‚Üícount)\nen\nTHEO_1900  |&gt;\n  œÉ(`prenom` `LIKE` 'THEOD%') |&gt;\n  œÄ(`prenom`, `nombre`) |&gt;\n  œÅ(`prenom‚Üíname`, `nombre‚Üícount`)\n\n\nDans le langage  (&gt; 4.x), le pipe s‚Äô√©crit |&gt;"
  },
  {
    "objectID": "slides/SQL_0.html#les-jointures",
    "href": "slides/SQL_0.html#les-jointures",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Les jointures",
    "text": "Les jointures\nOn va d√©finir des op√©rations pratiques pour la manipulation de donn√©es : les jointures\n\nJointure\nJointure naturelle\n\\(\\theta\\)-jointure et √©qui-jointure"
  },
  {
    "objectID": "slides/SQL_0.html#jointure",
    "href": "slides/SQL_0.html#jointure",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Jointure",
    "text": "Jointure\n\n\n\n\n\n\nD√©finition\n\n\nLa jointure \\(T=R_1\\bowtie_C R_2\\) de deux relations \\(R_1\\) et \\(R_2\\) de sch√©mas disjoints sous la condition \\(C\\) est la relation \\(T\\):\n\nde sch√©ma la concat√©nation des sch√©mas de \\(R_1\\) et \\(R_2\\)\nform√©e des tuples du produit cart√©sien \\(R_1  \\times R_2\\) qui satisfont la condition \\(C\\)\n\nR√®gles de formation de la condition de jointure : comme pour la s√©lection\n\n\n\n\n\n\n\n\n\nD√©finition formelle\n\n\n\\[R_1 \\bowtie_C R_2 = \\sigma_C(R_1\\times R_2)\\]"
  },
  {
    "objectID": "slides/SQL_0.html#exemple-sur-le-sch√©ma-world",
    "href": "slides/SQL_0.html#exemple-sur-le-sch√©ma-world",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemple sur le sch√©ma world\n",
    "text": "Exemple sur le sch√©ma world\n\n\nLier les pays (les lignes de country) √† leur capitale, c‚Äôest √† dire les couples de lignes de country et de city qui satisfont capital = id"
  },
  {
    "objectID": "slides/SQL_0.html#exemple-sur-le-sch√©ma-world-suite",
    "href": "slides/SQL_0.html#exemple-sur-le-sch√©ma-world-suite",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemple sur le sch√©ma world (suite)",
    "text": "Exemple sur le sch√©ma world (suite)\n`country` |&gt;\n  ‚ãà(`city`, `capital=id`) |&gt;\n  œÄ(`name_country`, `name`)\n\n+----------------------+------------------+\n| name_country         | name             |\n|----------------------+------------------|\n| Afghanistan          | Kabul            |\n| Netherlands          | Amsterdam        |\n| Netherlands Antilles | Willemstad       |\n| Albania              | Tirana           |\n| Algeria              | Alger            |\n...\n+----------------------+------------------+\n\n\nOn se contente d‚Äôafficher les cinq premi√®res lignes du r√©sultat."
  },
  {
    "objectID": "slides/SQL_0.html#diff√©rentes-vari√©t√©s-de-jointures",
    "href": "slides/SQL_0.html#diff√©rentes-vari√©t√©s-de-jointures",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Diff√©rentes vari√©t√©s de jointures",
    "text": "Diff√©rentes vari√©t√©s de jointures\nAutour de la jointure ‚ãà(R, S, C) on a pris l‚Äôhabitude de distinguer des types de jointure selon la forme de l‚Äôexpression de jointure (la condition C)\nOn distingue\n\nles √©qui-jointures\nles Œ∏-jontures\nles jointures naturelles\n\n\n\nCes distinctions portent sur la condition C. Elles ne sont pas de m√™me nature que les distinctions qui portent sur la mani√®re dont le r√©sultat final est calcul√© et qui d√©finissent les jointures internes, externes, ‚Ä¶"
  },
  {
    "objectID": "slides/SQL_0.html#√©qui-jointure",
    "href": "slides/SQL_0.html#√©qui-jointure",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "√âqui-jointure,",
    "text": "√âqui-jointure,\n\n\n\n\n\n\n√âqui-jointure\n\n\nJointure avec √©galit√© entre attributs de types comparables\n\n\n\n\n‚ãà(`country`, `city`, `capital=id`)"
  },
  {
    "objectID": "slides/SQL_0.html#Œ∏-jointure",
    "href": "slides/SQL_0.html#Œ∏-jointure",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Œ∏-jointure",
    "text": "Œ∏-jointure\n\n\n\n\n\n\n\\(\\theta\\)-jointure\n\n\nCondition de jointure entre attributs de types comparables et avec un op√©rateur diff√©rent de l‚Äô√©galit√©, c‚Äôest-√†-dire dans \\(\\left\\{&lt;,&gt;,\\leq,\\geq, \\neq\\right\\}\\).\n\n\n\n\n‚ãà(`country`, `city`, `capital=id`  ‚àß `population &gt; .5 * population_country`)"
  },
  {
    "objectID": "slides/SQL_0.html#jointure-naturelle",
    "href": "slides/SQL_0.html#jointure-naturelle",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Jointure naturelle",
    "text": "Jointure naturelle\n\n\n\n\n\n\nD√©finition\n\n\nC‚Äôest une √©qui-jointure concernant les attributs communs (m√™me nom et m√™me type) de deux relations\nOn ne garde dans le r√©sultat qu‚Äôune copie des attributs communs \n\n\n\nOn consid√®re\n\n\\(R_1\\) d‚Äôattributs \\(A_1,..,A_k,B_1,...,B_h\\)\n\\(R_2\\) d‚Äôattributs \\(A_1,..,A_k,B_{h+1},...,B_\\ell\\)\n\\(A_1,..., A_k\\) : attributs communs et \\(\\{B_1,...,B_h\\}\\cap \\{ B_{h+1},...,B_\\ell \\}=\\emptyset\\)\nSoit \\(A'_1, ...., A'_k\\) tels que \\(\\{A_1,..., A_k\\}\\cap \\{ A'_1, ...., A'_k \\}=\\emptyset\\)"
  },
  {
    "objectID": "slides/SQL_0.html#jointure-naturelle-formalisation",
    "href": "slides/SQL_0.html#jointure-naturelle-formalisation",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Jointure naturelle (formalisation)",
    "text": "Jointure naturelle (formalisation)\nConsid√©rons \\(S\\) d‚Äôattributs \\(A_1',..,A_k',B_{h+1},...,B_l\\) d√©finie par :\n\\[S=\\rho_{A_1\\mapsto A_1'}(\\rho_{A_2\\mapsto A_2'}(\\cdots (\\rho_{A_k\\mapsto A_k'}(R_2)\\cdots ))\\]\nLa jointure naturelle sur deux relations \\(R_1\\) et \\(R_2\\) est la relation\n\nd‚Äôattributs \\(A_1,..,A_k,B_1,...,B_h, B_{h+1},...,B_\\ell\\)\n\nd√©finie par : \\[\\pi_{A_1,..,A_k,B_1,...,B_h, B_{h+1},...,B_\\ell}(R_1\\bowtie_{C} S)\\] o√π \\(C\\) est \\((A_1=A_1') \\wedge (A_2=A'_2) \\wedge \\ldots \\wedge (A_k=A_k')\\)\n\n\n\n\n\n\n on r√©alise une √©qui-jointure sur tous les attributs communs et on ne garde qu‚Äôun seul ‚Äúexemplaire‚Äù de ces attributs communs par projection. On note cette op√©ration : \\(R_1 \\bowtie R_2\\).\n Pour √©viter le renommage, on peut d√©cider de pr√©fixer les noms des attributs par ceux de la relation. La condition \\(C\\) devient :\n\\[(R_1.A_1=R_2.A_1) \\wedge \\ldots \\wedge (R_1.A_k=R_2.A_k)\\]"
  },
  {
    "objectID": "slides/SQL_0.html#exemple-de-jointure-naturelle",
    "href": "slides/SQL_0.html#exemple-de-jointure-naturelle",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemple de Jointure naturelle",
    "text": "Exemple de Jointure naturelle\n\n\nbd_2023-24&gt; \\d countrylanguage\n+-------------+--------------+-----------+\n| Column      | Type         | Modifiers |\n|-------------+--------------+-----------|\n| countrycode | character(3) |  not null |\n| language    | text         |  not null |\n| isofficial  | boolean      |  not null |\n| percentage  | real         |  not null |\n+-------------+--------------+-----------+\n\n+--------------------+---------------+-----------+\n| Column             | Type          | Modifiers |\n|--------------------+---------------+-----------|\n| countrycode        | character(3)  |  not null |\n| name_country       | text          |  not null |\n| continent          | text          |  not null |\n| region             | text          |  not null |\n| surfacearea        | real          |  not null |\n| indepyear          | smallint      |           |\n| population_country | integer       |  not null |\n| lifeexpectancy     | real          |           |\n| gnp                | numeric(10,2) |           |\n| gnpold             | numeric(10,2) |           |\n| localname          | text          |  not null |\n| governmentform     | text          |  not null |\n| headofstate        | text          |           |\n| capital            | integer       |           |\n| code2              | character(2)  |  not null |\n+--------------------+---------------+-----------+\n\nJointure naturelle\ncountry |\n  ‚ãà(countrylanguage) |&gt;\n  œÉ(country='France') |&gt;\n  œÄ(name_country, language)\n+--------------+------------+\n| name_country | language   |\n|--------------+------------|\n| France       | French     |\n| France       | Arabic     |\n| France       | Portuguese |\n| France       | Italian    |\n| France       | Spanish    |\n| France       | Turkish    |\n+--------------+------------+"
  },
  {
    "objectID": "slides/SQL_0.html#exemples-de-requ√™tes",
    "href": "slides/SQL_0.html#exemples-de-requ√™tes",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Exemples de requ√™tes",
    "text": "Exemples de requ√™tes\n\nd√©terminer les noms des capitales des pays situ√©s en Asie (Asia)\n\ncountry |&gt;\n  œÉ(continent='Asia') |&gt;\n  ‚ãà(city, capital=id) |&gt;\n  œÄ(name)\n\n\nd√©terminer les langues parl√©es dans les pays d‚ÄôAsie\n\ncountry |&gt;\n  œÉ(continent='Asia') |&gt;\n  ‚ãà(countrylanguage) |&gt;\n  œÄ(language)"
  },
  {
    "objectID": "slides/SQL_0.html#jointure-externe",
    "href": "slides/SQL_0.html#jointure-externe",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Jointure externe",
    "text": "Jointure externe\n\n\n\n\n\n\nPerte d‚Äôinformation dans jointure naturelle\n\n\nLes tuples ne satisfaisant pas la condition (non appari√©s) disparaissent\n\n\n\n\n\n\n\n\n\nD√©finition\n\n\n\nOn ajoute symboliquement‚Äù une ligne dont les valeurs sont vides (ou avec valeur sp√©ciale NULL) pour garder les tuples initiaux ‚Äúnon satisfaisants‚Äù apr√®s la jointure\nOn note cette op√©ration entre deux relations \\(R\\) et \\(S\\) :\n\\[R \\bowtie^+ S\\]"
  },
  {
    "objectID": "slides/SQL_0.html#jointure-externe-exemple",
    "href": "slides/SQL_0.html#jointure-externe-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Jointure externe (exemple)",
    "text": "Jointure externe (exemple)\n\n\n\n\n\\[\\text{TrDep} \\bowtie^+ \\text{TrArr}\\]"
  },
  {
    "objectID": "slides/SQL_0.html#division",
    "href": "slides/SQL_0.html#division",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Division",
    "text": "Division\n\n\n\n\n\n\nD√©finition\n\n\nLa division ou quotient\n\nd‚Äôune relation \\(R\\) de sch√©ma \\(R(A_1,A_2,\\dots,A_k)\\)\npar une relation \\(S\\) de sch√©ma \\(S(A_{p+1},\\dots ,A_k)\\)\n\nest la relation \\(T\\) de sch√©ma \\(T(A_1, \\dots, A_p)\\) form√©e des tuples qui compl√©t√©s par chaque tuple de \\(S\\) donnent un tuple de \\(R\\).\nAutrement dit\n\\[\\begin{array}{l} t\\in T(A_1,\\dots,A_p)  \\quad \\Longleftrightarrow \\\\\n\\forall s\\in S(A_{p+1},\\dots ,A_k) \\quad \\exists r\\in R \\quad \\begin{cases}\nt.A_1=r.A_1, \\dots, t.A_p=r.A_p\\\\ s.A_{p+1}=r.A_{p+1},\\dots, s.A_{k}=r.A_{k} \\end{cases} \\end{array}\\]\nOn note \\[T = R \\div S\\]"
  },
  {
    "objectID": "slides/SQL_0.html#division-exemple",
    "href": "slides/SQL_0.html#division-exemple",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Division (exemple)",
    "text": "Division (exemple)\n\n\n Lister les langues parl√©es sur tous les continents\nOn aimerait √©crire une expression qui renvoie un r√©sultat correct quelque soit les conventions adopt√©es sur la d√©finition de continent (les Am√©riques forment-elles un ou deux continents, etc)\n\nCL ‚Üê ‚ãà(country, countrylanguage) |&gt;\n  œÄ(continent, language)\n\nC ‚Üê œÄ(CL, continent)\nL ‚Üê œÄ(CL, language)\n\nLPPTC ‚Üê (C √ó L  ‚àñ  CL ) |&gt;\n  œÄ(language)\n\nL  ‚àñ  LPPTC\nOn vient de calculer une division !\nCL √∑ C"
  },
  {
    "objectID": "slides/SQL_0.html#interd√©finissabilit√©-des-op√©rateurs",
    "href": "slides/SQL_0.html#interd√©finissabilit√©-des-op√©rateurs",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Interd√©finissabilit√© des op√©rateurs",
    "text": "Interd√©finissabilit√© des op√©rateurs\n\nL‚Äôunion, la diff√©rence, le produit cart√©sien, la s√©lection et la projection et le renommage sont suffisants pour d√©finir tous les op√©rateurs que l‚Äôon a vu.\nMais avoir un panier plus large d‚Äôop√©rateurs simplifie l‚Äô√©criture des requ√™tes.\n\nQuelques d√©finitions\n\nPour la Jointure : \\(R \\bowtie_C S \\equiv \\sigma_C (R \\times S)\\)\nPour l‚Äôintersection : \\(A \\cap B = A \\cup B - ((B - A) \\cup (A - B))\\)"
  },
  {
    "objectID": "slides/SQL_0.html#d√©finition-de-la-division",
    "href": "slides/SQL_0.html#d√©finition-de-la-division",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "D√©finition de la division",
    "text": "D√©finition de la division\n\n\n\n\n\n\nFormalisation\n\n\nSoient \\(R\\) de sch√©ma \\(R(A_1,A_2,\\dots,A_k)\\), \\(S\\) de sch√©ma \\(S(A_{p+1},\\dots ,A_k)\\)\nest la relation \\(T= R √∑ S\\) de sch√©ma \\(T(A_1, \\dots, A_p)\\).\nT ‚Üê Œ†(R, A) ‚àñ Œ†((Œ†(R, A) √ó S ‚àñ R), A)\n\n\n\n\n\nDans la d√©finition de R √∑ S, on utilise en deux endroits Œ†(R, A). Il serait utile, lors de l‚Äô√©valuation de R √∑ S de n‚Äô√©valuer Œ†(R, A) qu‚Äôune seule fois."
  },
  {
    "objectID": "slides/SQL_0.html#depuis-wikipedia",
    "href": "slides/SQL_0.html#depuis-wikipedia",
    "title": "BD I: Alg√®bre Relationnelle",
    "section": "Depuis Wikipedia",
    "text": "Depuis Wikipedia\n\nIn the 1960s and 1970s he [Codd] worked out his theories of data arrangement, issuing his paper ‚ÄúA Relational Model of Data for Large Shared Data Banks‚Äù in 1970.[ To his disappointment, IBM proved slow to exploit his suggestions until commercial rivals started implementing them.\n\n\nInitially, IBM refused to implement the relational model to preserve revenue from IMS/DB. Codd then showed IBM customers the potential of the implementation of its model, and they in turn pressured IBM. Then IBM included in its Future Systems project a System R subproject ‚Äì but put in charge of it developers who were not thoroughly familiar with Codd‚Äôs ideas, and isolated the team from Codd. As a result, they did not use Codd‚Äôs own Alpha language but created a non-relational one, SEQUEL. Even so, SEQUEL was so superior to pre-relational systems that it was copied, in 1979, based on pre-launch papers presented at conferences, by Larry Ellison, of Relational Software Inc, in his Oracle Database, which actually reached market before SQL/DS ‚Äì because of the then-already proprietary status of the original name, SEQUEL had been renamed SQL.\n\n\nCodd continued to develop and extend his relational model, sometimes in collaboration with Christopher J. Date. One of the normalised forms, the Boyce‚ÄìCodd normal form, is named after him.\n\n\nCodd‚Äôs theorem, a result proven in his seminal work on the relational model, equates the expressive power of relational algebra and relational calculus."
  },
  {
    "objectID": "slides/DF_norm_3.html#projection-dun-ensemble-de-df",
    "href": "slides/DF_norm_3.html#projection-dun-ensemble-de-df",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Projection d‚Äôun ensemble de DF",
    "text": "Projection d‚Äôun ensemble de DF\nSoientt \\(\\mathcal{A}\\) un sch√©ma de relation (\\(\\mathcal{A}\\) est un ensemble d‚Äôattributs) et \\(\\Sigma\\) un ensemble de DF sur \\(\\mathcal{A}\\)\nSoit \\(\\mathcal{A}_1\\subset  \\mathcal{A}\\) un sous-ensemble d‚Äôattributs\n\n\n\n\n\n\nD√©finition\n\n\n\\[\\pi_{\\mathcal{A}_1}(\\Sigma)=\\left\\{ X\\to Y \\mid \\Sigma\\models X\\to Y \\text{ et } X,Y\\subset \\mathcal{A}_1\\right\\}\\]\n\n\n\n\n\n\n\n\n\n\nCaract√©risation\n\n\nSi \\(X\\subset {\\mathcal{A}}_1\\) on a l‚Äô√©quivalence \\[X\\to Y \\in \\pi_{{\\mathcal{A}}_1}(\\Sigma) \\iff Y\\subset\\left\\{X\\right\\}^+‚à©{\\mathcal{A}}_1\\]\n\n\n\n\n\\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est l‚Äôensemble des DF de la forme \\(X\\to Y\\) impliqu√©es par \\(\\Sigma\\) et telles que \\(X\\subset \\mathcal{A}_1\\) et \\(Y\\subset \\mathcal{A}_1\\)"
  },
  {
    "objectID": "slides/DF_norm_3.html#exemple",
    "href": "slides/DF_norm_3.html#exemple",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Exemple",
    "text": "Exemple\n\n\\({\\mathcal{A}}=\\left\\{A,B,C\\right\\}\\) et \\(\\Sigma=\\left\\{A\\to B, B\\to C, C\\to A\\right\\}\\)\n\\(\\pi^{}_{\\left\\{A,B\\right\\}}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{A\\to B, B\\to A\\right\\}\\)"
  },
  {
    "objectID": "slides/DF_norm_3.html#calcul-de-pi_mathcala_1sigma",
    "href": "slides/DF_norm_3.html#calcul-de-pi_mathcala_1sigma",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Calcul de \\(\\pi_{{\\mathcal{A}}_1}(\\Sigma)\\)",
    "text": "Calcul de \\(\\pi_{{\\mathcal{A}}_1}(\\Sigma)\\)\nOn calcule un ensemble de DF √©quivalent √† \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\)\n\n\n\\begin{algorithm} \\caption{Projection de DF} \\begin{algorithmic} \\Procedure{Projection}{$\\mathcal{A}_1, Œ£$} \\State P ‚Üê ‚àÖ \\For{$X ‚äÇ \\mathcal{A}_1$, $X ‚â† ‚àÖ$, $X ‚â† \\mathcal{A}_1$} \\State Y ‚Üê $X^+ ‚à© \\mathcal{A}_1$ \\State P ‚Üê P ‚à™ $\\{ X ‚Üí Y\\}$ \\EndFor \\Return P \\EndProcedure \\end{algorithmic} \\end{algorithm}\n\n\n\n\nL‚Äôensemble de DF obtenu est √©quivalent √† \\(\\pi_{{\\mathcal{A}}_1}(\\Sigma)\\)\nTr√®s co√ªteux ! Le nombre de sous-ensembles \\(X\\) consid√©r√©s est \\(2^{\\#{\\mathcal{A}}_1}-2\\)"
  },
  {
    "objectID": "slides/DF_norm_3.html#exemple-1",
    "href": "slides/DF_norm_3.html#exemple-1",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Exemple",
    "text": "Exemple\n\n\\({\\mathcal{A}}=\\left\\{A,B,C,D,E\\right\\}\\) et \\(\\Sigma=\\left\\{A\\to C, BC\\to D, AD\\to E\\right\\}\\)\n\n\n\n\\(\\pi_{AC}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{A\\to C\\right\\}\\) car\n\\(\\left\\{A\\right\\}^+=\\left\\{A,C\\right\\}\\) et \\(\\left\\{C\\right\\}^+=\\left\\{C\\right\\}\\)\n\n\n\n\n\\(\\pi_{ABD}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{AB\\to D\\right\\}\\) car\n\\(\\left\\{A\\right\\}^+=\\left\\{A,C\\right\\}\\), \\(\\left\\{B\\right\\}^+=\\left\\{D\\right\\}\\), \\(\\left\\{D\\right\\}^+=\\left\\{D\\right\\}\\),\n\\(\\left\\{A,B\\right\\}^+=\\left\\{A,B,C,D,E\\right\\}\\), \\(\\left\\{A,D\\right\\}^+=\\left\\{A,D,C,E\\right\\}\\), \\(\\left\\{B,D\\right\\}^+=\\left\\{B,D\\right\\}\\)\n\n\n\n\n\\(\\pi_{ABCE}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{A\\to C, AB \\to CE, AE\\to C, ABC\\to E, ABE\\to C\\right\\}\\)\n\\(A^+=AC \\quad B^+=B \\quad C^+=C \\quad E^+=E\\)\n\\(AB^+=ABCDE \\quad AC^+=AC \\quad AE^+=AEC\\)\n\\(BC^+=BCD \\quad BE^+=BE \\quad CE^+=CE\\)\n\\(ABC^+=ABCDE \\quad ABE^+=ABECD\\)\n\\(BCE^+=BCED \\quad ACE^+=ACE\\)\n\n\n\n\nSimplification¬†: \\(\\pi_{ABCE}(\\Sigma)\\) √©quivaut √† \\(\\left\\{A\\to C, AB\\to E\\right\\}\\)"
  },
  {
    "objectID": "slides/DF_norm_3.html#pr√©servation-de-d√©pendances-fonctionnelles",
    "href": "slides/DF_norm_3.html#pr√©servation-de-d√©pendances-fonctionnelles",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Pr√©servation de d√©pendances fonctionnelles",
    "text": "Pr√©servation de d√©pendances fonctionnelles\n\n\n\n\n\n\nD√©finition\n\n\nSoit \\(\\mathcal{A}\\) un sch√©ma de relation et \\(\\Sigma\\) un ensemble de DF sur \\(\\mathcal{A}\\).\nSoit \\(\\left\\{ \\mathcal{A}_1,\\dots, \\mathcal{A}_k\\right\\}\\) une d√©composition du sch√©ma \\(\\mathcal{A}\\) (\\(\\mathcal{A}_i\\neq \\emptyset, 1\\leq i\\leq k\\) et \\(\\mathcal{A}= \\bigcup_{i=1}^k \\mathcal{A}_i\\))\nLa d√©composition \\(\\left\\{\\mathcal{A}_1,\\dots, \\mathcal{A}_k\\right\\}\\) pr√©serve \\(\\Sigma\\) si l‚Äôensemble des d√©pendances fonctionnelles locales \\(\\bigcup_{i=1}^k \\pi_{\\mathcal{A}_i}(\\Sigma)\\) est √©quivalent √† \\(\\Sigma\\)\n\n\n\n\n\nPuisque \\(\\Sigma ‚äß \\bigcup_{i=1}^k \\pi_{\\mathcal{A}_i}(\\Sigma)\\), la d√©composition pr√©serve \\(\\Sigma\\) si et seulement si toutes les DF de \\(\\Sigma\\) sont impliqu√©es par les DF locales"
  },
  {
    "objectID": "slides/DF_norm_3.html#exemple-perte-de-d√©pendance-fonctionnelle",
    "href": "slides/DF_norm_3.html#exemple-perte-de-d√©pendance-fonctionnelle",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Exemple : perte de d√©pendance fonctionnelle",
    "text": "Exemple : perte de d√©pendance fonctionnelle"
  },
  {
    "objectID": "slides/DF_norm_3.html#algorithme-pour-tester-si-bigcup_i1k-pi_mathcala_isigma-models-x-rightarrow-y",
    "href": "slides/DF_norm_3.html#algorithme-pour-tester-si-bigcup_i1k-pi_mathcala_isigma-models-x-rightarrow-y",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Algorithme pour tester si \\(\\bigcup_{i=1}^k \\pi_{\\mathcal{A}_i}(\\Sigma) \\models X \\rightarrow Y\\)",
    "text": "Algorithme pour tester si \\(\\bigcup_{i=1}^k \\pi_{\\mathcal{A}_i}(\\Sigma) \\models X \\rightarrow Y\\)"
  },
  {
    "objectID": "slides/DF_norm_3.html#section",
    "href": "slides/DF_norm_3.html#section",
    "title": "Normalisation II : D√©composition FN3",
    "section": "",
    "text": "\\begin{algorithm} \\caption{X ‚Üí Y est-elle impliqu√©e par les d√©pendances projet√©es?} \\begin{algorithmic} \\Procedure{Implique}{$\\left\\{ \\mathcal{A}_1,\\dots, \\mathcal{A}_k\\right\\}, Œ£, X, Y$} \\State Z ‚Üê X \\State continuer ‚Üê \\True \\While{continuer} \\State $W ‚Üê Z$ \\For{i ‚àà 1, ..., k} \\State $W ‚Üê W ‚à™ \\bigl((W ‚à© \\mathcal{A}_i)^+ ‚à© \\mathcal{A}_i\\bigr)$ \\EndFor \\If{W ‚â† Z} \\State Z ‚Üê W \\Else \\State continuer ‚Üê \\False \\EndIf \\EndWhile \\If{Y ‚äÜ Z} \\Return \\True \\Else \\Return \\False \\EndIf \\EndProcedure \\end{algorithmic} \\end{algorithm}"
  },
  {
    "objectID": "slides/DF_norm_3.html#exemple-i",
    "href": "slides/DF_norm_3.html#exemple-i",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Exemple I",
    "text": "Exemple I\n\n\\(\\mathcal{A}=\\left\\{A,B,C,D\\right\\}\\),\n\\(\\mathcal{A}_1=\\left\\{A,B\\right\\}\\), \\(\\mathcal{A}_2=\\left\\{B,C\\right\\}\\), \\(\\mathcal{A}_3=\\left\\{C,D\\right\\}\\)\n\\(\\Sigma=\\left\\{A\\to B, B\\to C, C\\to D, D\\to A\\right\\}\\)\nEst-ce que la d√©composition \\(\\left\\{\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3\\right\\}\\) pr√©serve \\(\\Sigma\\) ?\n\n\n\nLes DF locales impliquent \\(A\\to B\\), \\(B\\to C\\), \\(C\\to D\\) (ce sont DF locales)\n\n\n\n\nEst-ce que les DF locales impliquent \\(D\\to A\\) ?\n\n\n\nCommencer avec \\(Z ‚Üê \\{D\\}\\)\n\n\n\\((\\{D\\}‚à©\\{CD\\})^+ ‚à© \\{CD\\}=\\{D\\}^+ ‚à©\\{CD\\}=\\{DABC\\} ‚à© \\{CD\\}=\\{CD\\}\\), ajouter \\(C\\)\n\\((\\{DC\\}‚à© \\{BC\\})^+ ‚à© \\{BC\\}=\\{C\\}^+ ‚à© \\{BC\\}=\\{CDAB\\}‚à© \\{BC=B\\}\\), ajouter \\(B\\)\n\\((\\{DCB\\}‚à© \\{AB\\})^+ ‚à© \\{AB\\}=\\{B\\}^+ ‚à© \\{AB\\}=\\{BCDA\\} ‚à© \\{AB\\}\\), ajouter \\(A\\)\n\\(\\{DCBA\\}\\) contient \\(A\\) donc \\(D\\to A\\) est pr√©serv√©e"
  },
  {
    "objectID": "slides/DF_norm_3.html#exemple-ii",
    "href": "slides/DF_norm_3.html#exemple-ii",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Exemple II",
    "text": "Exemple II\n\n\\(\\mathcal{A}=\\) {Ville, CP, Rue, Numero}\n\\(\\Sigma=\\) { CP ‚Üí  Ville, {Ville, Rue, Numero} ‚Üí CP}\n\\(\\mathcal{A}_1=\\) {Ville, CP} \\(\\mathcal{A}_2=\\) {Rue, Numero, CP}\nEst-ce que la d√©composition \\(\\{\\mathcal{A}_1, \\mathcal{A}_2 \\}\\) pr√©serve \\(\\Sigma\\) ?\n\n\n\nCP ‚Üí  Ville est pr√©serv√©e car elle est locale √† \\(\\mathcal{A}_1\\)\n\n\n\n\nEst-ce que {Ville, Rue, Numero} ‚Üí CP est pr√©serv√©e par \\(\\mathcal{A}_1, \\mathcal{A}_2\\) ?\n\n\n\nZ ‚Üê {Ville, Rue, Numero}\n\n\\((\\texttt{Z} ‚à© \\texttt{{Ville, CP}})^+\\) ‚à© {Ville, CP} = {Ville} rien √† ajouter\n\\((\\texttt{Z} ‚à© \\texttt{{Rue, Numero, CP}})^+\\) ‚à© {Rue, Numero, CP} = {Rue, Numero}, rien √† ajouter\n\n\n\nDonc Ville, Rue, Numero ‚Üí CP n‚Äôest pas pr√©serv√©e"
  },
  {
    "objectID": "slides/DF_norm_3.html#rappels",
    "href": "slides/DF_norm_3.html#rappels",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Rappels",
    "text": "Rappels\n\n\n\n\n\n\nD√©finition\n\n\nTODO\n\n\n\n\n\n\n\n\n\nProposition\n\n\nTODO"
  },
  {
    "objectID": "slides/DF_norm_3.html#limites-de-la-d√©composition-fnbc",
    "href": "slides/DF_norm_3.html#limites-de-la-d√©composition-fnbc",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Limites de la d√©composition FNBC",
    "text": "Limites de la d√©composition FNBC\n\n\n\n\n\n\nNote\n\n\nIl existe des couples sch√©ma/Ensemble de DFs (\\(\\mathcal{A}, \\Sigma\\)) pour lesquels toute d√©composition FNBC entraine une perte de D√©pendance Fonctionnell"
  },
  {
    "objectID": "slides/DF_norm_3.html#section-1",
    "href": "slides/DF_norm_3.html#section-1",
    "title": "Normalisation II : D√©composition FN3",
    "section": "",
    "text": "\\(\\mathcal{A} =\\) {Ville, Rue, Num√©ro, #Bureau_vote}\nŒ£ = { Ville, Nom, Rue ‚Üí #Bureau_vote,  #Bureau_vote  ‚Üí  Ville }\n\nDeux cl√©s Ville, Nom, Rue et #Bureau_vote, Nom, Rue\n\n\n#Bureau_vote  ‚Üí  Ville ne satisfait pas le crit√®re FNBC\n\n\nL‚Äôalgorithme de d√©composition en FNBC conduit √† la d√©composition {#Bureau_vote,Ville} et {#Bureau_vote, Nom, Rue}\nLa DF Ville, Nom, Rue ‚Üí #Bureau_vote n‚Äôest pas pr√©serv√©e\nLa d√©composition pr√©serve l‚Äôinformation (SPI) mais pas les d√©pendances fonctionnelles."
  },
  {
    "objectID": "slides/DF_norm_3.html#limites-de-la-d√©composition-fnbc-suite",
    "href": "slides/DF_norm_3.html#limites-de-la-d√©composition-fnbc-suite",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Limites de la d√©composition FNBC (suite)",
    "text": "Limites de la d√©composition FNBC (suite)\nOn peut v√©rifier que toute d√©composition FNBC de \\(\\mathcal{A}\\) ne pr√©serve pas les d√©pendances fonctionnelles.\nTODO"
  },
  {
    "objectID": "slides/DF_norm_3.html#d√©finition-forme-normale-3-fn3",
    "href": "slides/DF_norm_3.html#d√©finition-forme-normale-3-fn3",
    "title": "Normalisation II : D√©composition FN3",
    "section": "D√©finition : forme normale 3 (FN3)",
    "text": "D√©finition : forme normale 3 (FN3)\n\n\n\n\n\n\nImportant\n\n\nUn sch√©ma relationnel \\(\\mathcal{A}\\) est en forme normale 3 (FN3) relativement √† un ensemble de DF Œ£ ssi pour toute d√©pendance non triviale X ‚Üí Yde Œ£, on a\n\nle membre gauche X est une super-cl√© ou\nle membre droit Y fait partie d‚Äôune cl√©\n\n\n\n\n\n\nLe sch√©ma \\(\\mathcal{A} =\\) {Ville, Rue, Num√©ro, #Bureau_vote} est en FN3 relativement √† Œ£ = { Ville, Nom, Rue ‚Üí #Bureau_vote,  #Bureau_vote  ‚Üí  Ville }\nMais ce sch√©ma n‚Äôest pas en FNBC."
  },
  {
    "objectID": "slides/DF_norm_3.html#pourquoi-deux-notions-de-forme-normale",
    "href": "slides/DF_norm_3.html#pourquoi-deux-notions-de-forme-normale",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Pourquoi deux notions de forme normale ?",
    "text": "Pourquoi deux notions de forme normale ?\n\n\n\n\n\n\nProposition\n\n\nSi un sch√©ma \\(\\mathcal{A}\\) est en forme normale Boyce-Codd (FNBC) relativement √† un ensemble de DF Œ£, alors \\(\\mathcal{A}\\) est en forme normale 3 (FN3) relativement √† Œ£\n\n\n\n\n\nLa r√©ciproque est fausse"
  },
  {
    "objectID": "slides/DF_norm_3.html#exercice",
    "href": "slides/DF_norm_3.html#exercice",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Exercice",
    "text": "Exercice\n\\(\\mathcal{A}=\\) (A, B, C, D, E) et Œ£={A ‚Üí C, BC ‚Üí D, AD ‚Üí E}\n\nQuelles sont les cl√©s ?\nLe sch√©ma est-il en FNBC ?\nSi non, propopsez une d√©composition SPI en FNBC. Est-elle sans perte de DF?\nLe sch√©ma est-il en FN3 ?"
  },
  {
    "objectID": "slides/DF_norm_3.html#int√©r√™t-de-la-forme-normale-3-fn3",
    "href": "slides/DF_norm_3.html#int√©r√™t-de-la-forme-normale-3-fn3",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Int√©r√™t de la forme normale 3 (FN3)",
    "text": "Int√©r√™t de la forme normale 3 (FN3)\nRedondance limit√©e\n\nPossibilit√© de d√©composition SPI et sans perte de D√©pendances Fonctionnelles"
  },
  {
    "objectID": "slides/DF_norm_3.html#algorithme",
    "href": "slides/DF_norm_3.html#algorithme",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Algorithme",
    "text": "Algorithme\n\n\n\\begin{algorithm} \\caption{D√©composition FN3} \\begin{algorithmic} \\Procedure{D√©composition_FN3}{$\\mathcal{A}, Œ£$} \\EndProcedure \\end{algorithmic} \\end{algorithm}"
  },
  {
    "objectID": "slides/DF_norm_3.html#proposition-2",
    "href": "slides/DF_norm_3.html#proposition-2",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Proposition",
    "text": "Proposition\n\n\n\n\n\n\nProposition\n\n\nL‚Äôalgorithme termine en un nombre fini d‚Äôit√©rations\nLa d√©composition produite par l‚Äôalgorithme est\n\nen FN3\nsans perte d‚Äôinformation\nsans perte de d√©pendances fonctionnelles"
  },
  {
    "objectID": "slides/DF_norm_3.html#preuve-terminaison",
    "href": "slides/DF_norm_3.html#preuve-terminaison",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Preuve (terminaison)",
    "text": "Preuve (terminaison)"
  },
  {
    "objectID": "slides/DF_norm_3.html#preuve-fn3",
    "href": "slides/DF_norm_3.html#preuve-fn3",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Preuve (FN3)",
    "text": "Preuve (FN3)"
  },
  {
    "objectID": "slides/DF_norm_3.html#preuve-sans-pi",
    "href": "slides/DF_norm_3.html#preuve-sans-pi",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Preuve (sans PI)",
    "text": "Preuve (sans PI)"
  },
  {
    "objectID": "slides/DF_norm_3.html#preuve-sans-perte-de-df",
    "href": "slides/DF_norm_3.html#preuve-sans-perte-de-df",
    "title": "Normalisation II : D√©composition FN3",
    "section": "Preuve (sans perte de DF)",
    "text": "Preuve (sans perte de DF)"
  },
  {
    "objectID": "slides/SQL_1.html#sql-structured-query-language",
    "href": "slides/SQL_1.html#sql-structured-query-language",
    "title": "BD II: SQL I",
    "section": "SQL : Structured Query Language",
    "text": "SQL : Structured Query Language\nSQL est langage permettant :\n\ninterrogation des donn√©es (requ√™tes)\nd√©finition des donn√©es et des contraintes structurelles sur celles-ci\nmanipulation des donn√©es (insertion, suppression, mise √† jour)\nd√©finition des vues et des index\nadministration des bases de donn√©es"
  },
  {
    "objectID": "slides/SQL_1.html#plusieurs-fois-normalis√©s-par-liso",
    "href": "slides/SQL_1.html#plusieurs-fois-normalis√©s-par-liso",
    "title": "BD II: SQL I",
    "section": "Plusieurs fois normalis√©s par l‚ÄôISO ‚Ä¶",
    "text": "Plusieurs fois normalis√©s par l‚ÄôISO ‚Ä¶\n\nSQL-86,\nSQL-89,\nSQL-92,\nSQL-99.\n‚Ä¶\nSQL-2003\nSQL-2008\nSQL-2011\nSQL-2016\n‚Ä¶\n\nNous utiliserons le dialecte PostgreSQL\nA standard is reviewed every 5 years (roughly)\nISO/IEC 9075 from www.iso.org"
  },
  {
    "objectID": "slides/SQL_1.html#sql",
    "href": "slides/SQL_1.html#sql",
    "title": "BD II: SQL I",
    "section": "SQL",
    "text": "SQL\n\n\nUne instruction SQL permet de combiner :\n\nrestriction/filtrage (s√©lection) \\(\\sigma\\)\nprojection \\(\\pi\\)\nrenommage \\(\\rho\\)\n‚Ä¶\n\n. . .\n\nL‚Äôinstruction\nSELECT &lt;liste attribut&gt;\n\nFROM &lt;table&gt;\n\nWHERE &lt;condition&gt; ;\ntraduit l‚Äôexpression\n\\(\\Pi_{\\text{&lt;liste attribut&gt;}}(\\sigma_{\\text{&lt;condition&gt;}}(\\text{&lt;table&gt;}))\\)\nOu œÉ(R, Condition) |&gt; Œ†(&lt;liste attribut&gt;)"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe---requ√™tes-simples",
    "href": "slides/SQL_1.html#syntaxe---requ√™tes-simples",
    "title": "BD II: SQL I",
    "section": "Syntaxe - requ√™tes simples",
    "text": "Syntaxe - requ√™tes simples\n\n\nSELECT [DISTINCT] * | &lt;liste attribut&gt;\n\nFROM &lt;liste de tables&gt;\n\n[WHERE &lt;condition&gt;] ;\n\n\n* : s√©lection de tous les attributs (le sch√©ma reste inchang√©)\n[...] : clause, expression facultative.\nDISTINCT : supprime les doublons.\n\n\n\nstopifnot(\n  require(DBI),\n  require(RPostgres)\n)\n\n\nSET search_path TO world ;"
  },
  {
    "objectID": "slides/SQL_1.html#requ√™tes-simples-sur-exemple-jouet",
    "href": "slides/SQL_1.html#requ√™tes-simples-sur-exemple-jouet",
    "title": "BD II: SQL I",
    "section": "Requ√™tes simples sur exemple jouet",
    "text": "Requ√™tes simples sur exemple jouet\n\n\nEmploye(Nu, NomE, Annee, Tel, Nudept)\n\nFournisseur (NomF, Ville, Adresse)\n\nPiece(NomP, Prix, Couleur)\n\n\nSELECT co.name_country, co.region\nFROM country co\nWHERE co.continent='Europe' \nLIMIT 5 ;\n\nEquivalent √† :\n\\[\\Pi_{\\text{NomF, region}}(\\text{country})\\]"
  },
  {
    "objectID": "slides/SQL_1.html#structure-de-base",
    "href": "slides/SQL_1.html#structure-de-base",
    "title": "BD II: SQL I",
    "section": "Structure de base",
    "text": "Structure de base\nLa structure de base d‚Äôune requ√™te s‚Äôappuie sur les trois mots cl√©s suivants :\n\nSELECT correspond √† l‚Äôop√©rateur de projection sur la liste d‚Äôattributs demand√©e, il peut aussi √™tre suivi de fonctions d‚Äôattributs\nFROM indique la ou les relations concern√©es\nWHERE pr√©cise une condition et correspond √† l‚Äôop√©ration de restriction/s√©lection en alg√®bre relationnelle."
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-de-la-condition-de-filtrage-where-...",
    "href": "slides/SQL_1.html#syntaxe-de-la-condition-de-filtrage-where-...",
    "title": "BD II: SQL I",
    "section": "Syntaxe de la condition de filtrage (WHERE ...)",
    "text": "Syntaxe de la condition de filtrage (WHERE ...)\nUne condition se construit √† l‚Äôaide des op√©rations suivantes :\n\n\nComparaison avec op√©rateurs : =, &lt;&gt;, &gt;,&lt;, &gt;=, &lt;=\n\n\nSELECT *\n\nFROM Employe\n\nWHERE NomE &lt;&gt;'Durand'  ;"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-de-la-condition-de-filtrage-where-...-1",
    "href": "slides/SQL_1.html#syntaxe-de-la-condition-de-filtrage-where-...-1",
    "title": "BD II: SQL I",
    "section": "Syntaxe de la condition de filtrage (WHERE ...)",
    "text": "Syntaxe de la condition de filtrage (WHERE ...)\nCombinaison de conditions √† l‚Äôaide des op√©rateurs logiques: AND, OR, NOT\nSELECT DISTINCT NomF\n\nFROM Fournisseur\n\nWHERE (Ville='Londres') OR (Ville='Paris');  \n Attention aux priorit√©s dans l‚Äô√©valuation des expressions logiques\n Attention aux valeurs manquantes"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite",
    "href": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite",
    "title": "BD II: SQL I",
    "section": "Syntaxe de la condition WHERE ... (suite)",
    "text": "Syntaxe de la condition WHERE ... (suite)\nTest BETWEEN permettant de v√©rifier si la valeur d‚Äôun attribut est comprise entre deux constantes\nSELECT NomE\n\nFROM Employe\n\nWHERE Annee BETWEEN '22/06/03' AND '25/09/03';   \n √âviter de manipuler les dates et heures comme des cha√Ænes de caract√®res"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite-1",
    "href": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite-1",
    "title": "BD II: SQL I",
    "section": "Syntaxe de la condition WHERE ... (suite)",
    "text": "Syntaxe de la condition WHERE ... (suite)\n\nTest √† NULL signifiant que la valeur est √©gale √† NULL (c-√†-d est inconnue)\n\nSELECT *\n\nFROM Employe\n\nWHERE Tel IS NULL;    \n Attention aux valeurs manquantes"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite-2",
    "href": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite-2",
    "title": "BD II: SQL I",
    "section": "Syntaxe de la condition WHERE ... (suite)",
    "text": "Syntaxe de la condition WHERE ... (suite)\nTest d‚Äôappartenance IN qui permet de v√©rifier si la valeur d‚Äôun attribut appartient √† une liste de constantes,\nSELECT *\n\nFROM Fournisseur\n\nWHERE Ville IN ('Paris', 'Londres');"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite-3",
    "href": "slides/SQL_1.html#syntaxe-de-la-condition-where-...-suite-3",
    "title": "BD II: SQL I",
    "section": "Syntaxe de la condition WHERE ... (suite)",
    "text": "Syntaxe de la condition WHERE ... (suite)\nTest LIKE permettant de v√©rifier si un attribut de type cha√Æne de caract√®res contient une ou plusieurs sous-cha√Ænes\n\\(\\_\\) : remplace n‚Äôimporte quel caract√®re\n\\(\\%\\) : remplace n‚Äôimporte quelle cha√Æne de caract√®res.\nSELECT Ville\n\nFROM Fournisseur\n\nWHERE Ville LIKE 'Saint%';"
  },
  {
    "objectID": "slides/SQL_1.html#requ√™tes-multi-relations-1",
    "href": "slides/SQL_1.html#requ√™tes-multi-relations-1",
    "title": "BD II: SQL I",
    "section": "Requ√™tes multi-relations",
    "text": "Requ√™tes multi-relations\nQuand l‚Äôinformation est dispers√©e sur plusieurs tables, on utilise des jointures"
  },
  {
    "objectID": "slides/SQL_1.html#on-peut",
    "href": "slides/SQL_1.html#on-peut",
    "title": "BD II: SQL I",
    "section": "On peut :",
    "text": "On peut :\n\nutiliser plusieurs tables dans la clause FROM\nfaire intervenir des conditions complexes impliquant ces tables dans la clause WHERE"
  },
  {
    "objectID": "slides/SQL_1.html#d√©tails-du-schema-world",
    "href": "slides/SQL_1.html#d√©tails-du-schema-world",
    "title": "BD II: SQL I",
    "section": "D√©tails du schema World\n",
    "text": "D√©tails du schema World\n\nImages et tables cr√©√©es gr√¢ce √† DbSchema"
  },
  {
    "objectID": "slides/SQL_1.html#diagramme-en-pattes-de-corbeau",
    "href": "slides/SQL_1.html#diagramme-en-pattes-de-corbeau",
    "title": "BD II: SQL I",
    "section": "Diagramme en pattes de corbeau",
    "text": "Diagramme en pattes de corbeau\n\nimg"
  },
  {
    "objectID": "slides/SQL_1.html#table-world.city",
    "href": "slides/SQL_1.html#table-world.city",
    "title": "BD II: SQL I",
    "section": "Table world.city",
    "text": "Table world.city\n\n\n* üîë ‚¨ã\nid\ninteger\n\n\n*\nname\ntext\n\n\n*\ncountrycode\nchar(3)\n\n\n*\ndistrict\ntext\n\n\n*\npopulation\ninteger"
  },
  {
    "objectID": "slides/SQL_1.html#table-world.country",
    "href": "slides/SQL_1.html#table-world.country",
    "title": "BD II: SQL I",
    "section": "Table world.country",
    "text": "Table world.country\n\n\n* üîë ‚¨ã\ncode\nchar(3)\n\n\n*\nname\ntext\n\n\n*\ncontinent\ntext\n\n\n*\nregion\ntext\n\n\n*\nsurfacearea\nreal\n\n\n\nindepyear\nsmallint\n\n\n*\npopulation\ninteger\n\n\n\nlifeexpectancy\nreal\n\n\n\ngnp\nnumeric(10,2)\n\n\n\ngnpold\nnumeric(10,2)\n\n\n*\nlocalname\ntext\n\n\n*\ngovernmentform\ntext\n\n\n\nheadofstate\ntext\n\n\n‚¨à\ncapital\ninteger\n\n\n*\ncode2\nchar(2)\n\n\nForeign Keys\n\n\ncountry_capital_fkey\n( capital ) ref world.city (id)\n\nConstraints\n\n\n\n\n\n\ncountry_continent_check\n((continent = ‚ÄòAsia‚Äô::text) OR (continent = ‚ÄòEurope‚Äô::text) OR (continent = ‚ÄòNorth America‚Äô::text) OR (continent = ‚ÄòAfrica‚Äô::text) OR (continent = ‚ÄòOceania‚Äô::text) OR (continent = ‚ÄòAntarctica‚Äô::text) OR (continent = ‚ÄòSouth America‚Äô::text))"
  },
  {
    "objectID": "slides/SQL_1.html#table-world.countrylanguage",
    "href": "slides/SQL_1.html#table-world.countrylanguage",
    "title": "BD II: SQL I",
    "section": "Table world.countrylanguage",
    "text": "Table world.countrylanguage\n\n\n* üîë ‚¨à\ncountrycode\nchar(3)\n\n\n* üîë\nlanguage\ntext\n\n\n*\nisofficial\nboolean\n\n\n*\npercentage\nreal\n\n\nForeign Keys\n\n\ncountrylanguage_countrycode_fkey\n( countrycode ) ref world.country (code)"
  },
  {
    "objectID": "slides/SQL_1.html#premi√®re-jointure-sur-sch√©ma-world",
    "href": "slides/SQL_1.html#premi√®re-jointure-sur-sch√©ma-world",
    "title": "BD II: SQL I",
    "section": "Premi√®re jointure sur sch√©ma world\n",
    "text": "Premi√®re jointure sur sch√©ma world\n\nQuels sont les pays qui portent le m√™me nom que leur capitale ?\n\nSELECT name_country\n\nFROM country, city    \n\nWHERE capital=id AND name_country=name_city;\n\n\nqui correspond √†\n\\[\\pi_{\\text{name\\_country}}(\\sigma_{\\text{capital}=\\text{id} \\wedge \\text{name\\_country}=\\text{name\\_city}}(\\text{country}\\times \\text{city}))\\]\nautrement dit √†\n\\[\\pi_{\\text{name\\_country}}(\\text{country} \\bowtie_{\\text{capital}=\\text{id} \\wedge  \\text{name\\_country}=\\text{name\\_city}} \\text{city}))\\]"
  },
  {
    "objectID": "slides/SQL_1.html#syntaxe-normalis√©e-pour-les-jointures-join-et-on",
    "href": "slides/SQL_1.html#syntaxe-normalis√©e-pour-les-jointures-join-et-on",
    "title": "BD II: SQL I",
    "section": "Syntaxe normalis√©e pour les jointures : JOIN et ON\n",
    "text": "Syntaxe normalis√©e pour les jointures : JOIN et ON\n\nQuels sont les pays qui portent le m√™me nom que leur capitale ?\nSELECT name_country\n\nFROM country JOIN city   \n\nON capital=id    \n\nWHERE name_country=name_city;\nqui correspond √†\n\\[\\pi_{\\text{name\\_country}}(\\sigma_{\\text{capital}=id \\wedge  \\text{name\\_country}=\\text{name\\_city}}(\\text{country} \\times \\text{city}))\\]"
  },
  {
    "objectID": "slides/SQL_1.html#renommage",
    "href": "slides/SQL_1.html#renommage",
    "title": "BD II: SQL I",
    "section": "Renommage",
    "text": "Renommage\nSi on veut faire une jointure d‚Äôune table avec elle-m√™me, on utilise AS pour obtenir deux tables de noms diff√©rents\n\nQuels sont les noms de ville qui apparaissent dans deux pays diff√©rents~?\n\nSELECT DISTINCT c1.name_city, c1.countrycode, c2.countrycode\n\nFROM city AS c1 JOIN city AS c2   \n\n  ON c1.countrycode!=c2.countrycode AND c1.name_city=c2.name_city  \n\nORDER BY c1.name_city;"
  },
  {
    "objectID": "slides/SQL_1.html#jointure-naturelle",
    "href": "slides/SQL_1.html#jointure-naturelle",
    "title": "BD II: SQL I",
    "section": "Jointure naturelle",
    "text": "Jointure naturelle\nQuels sont les noms des pays o√π le fran√ßais est parl√© ?\nSELECT name_country\n\nFROM country, countrylanguage\n\nWHERE country.countrycode=countrylanguage.countrycode\n      AND language='French';\nSyntaxe normalis√©e pour la jointure naturelle~: NATURAL JOIN\nSELECT name_country\n\nFROM country NATURAL JOIN countrylanguage    \n\nWHERE language='French';"
  },
  {
    "objectID": "slides/SQL_1.html#jointure-naturelle-suite",
    "href": "slides/SQL_1.html#jointure-naturelle-suite",
    "title": "BD II: SQL I",
    "section": "Jointure naturelle (suite)",
    "text": "Jointure naturelle (suite)\nQuels sont les pays dont une ville a le m√™me nom qu‚Äôune langue parl√©e dans ce pays~?\nSELECT DISTINCT name_country, name_city, language\n\nFROM country NATURAL JOIN  \n     city natural JOIN     \n     countrylanguage       \n\nWHERE language=name_city;"
  },
  {
    "objectID": "slides/SQL_1.html#jointure-externe",
    "href": "slides/SQL_1.html#jointure-externe",
    "title": "BD II: SQL I",
    "section": "Jointure externe",
    "text": "Jointure externe\n\nLEFT OUTER JOIN (resp. RIGHT OUTER JOIN) : on garde les tuples de la table de gauche (resp. droite) qui n‚Äôont pas de compl√©ment dans l‚Äôautre table, la condition √©tant sp√©cifi√©e dans la clause ON\nFULL OUTER JOIN : on garde les tuples de chacune des tables qui n‚Äôont pas de compl√©ment.\nOn compl√®te les valeurs non renseign√©es par NULL"
  },
  {
    "objectID": "slides/SQL_1.html#exemple-de-jointure-externe",
    "href": "slides/SQL_1.html#exemple-de-jointure-externe",
    "title": "BD II: SQL I",
    "section": "Exemple de jointure externe",
    "text": "Exemple de jointure externe\n\nCertains pays n‚Äôont pas de capitale : la requ√™te\n\nSELECT name_country\n\nFROM country\n\nWHERE capital IS NULL;\nrenvoie 8 lignes.\n\nQuels sont les pays qui n‚Äôont pas de capitale ou portent le m√™me nom que leur capitale~?\n\nSELECT name_country, name_city\n\nFROM country LEFT OUTER JOIN city   \n     ON capital=id                  \n\nWHERE name_city IS NULL OR name_country=name_city ;"
  },
  {
    "objectID": "slides/SQL_7.html#table-babynames",
    "href": "slides/SQL_7.html#table-babynames",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Table babynames\n",
    "text": "Table babynames\n\n\nstopifnot(\n  require(dplyr),\n  require(tibble),\n  require(babynames),\n  require(gt)\n)\n\n\nbabynames |&gt; \n  glimpse()\n\nRows: 1,924,665\nColumns: 5\n$ year &lt;dbl&gt; 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,‚Ä¶\n$ sex  &lt;chr&gt; \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", ‚Ä¶\n$ name &lt;chr&gt; \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",‚Ä¶\n$ n    &lt;int&gt; 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,‚Ä¶\n$ prop &lt;dbl&gt; 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016‚Ä¶"
  },
  {
    "objectID": "slides/SQL_7.html#op√©rateurs-de-base",
    "href": "slides/SQL_7.html#op√©rateurs-de-base",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Op√©rateurs de base",
    "text": "Op√©rateurs de base\n\n\n\n\n\n\nListe des op√©rateurs\n\n\nL‚Äôalg√®bre relationnelle est d‚Äôabord un *Langage de Manipulation de Donn√©es& (LMD)}.\n\nUnion: \\(\\Large{\\cup}\\)\nIntersection: \\(\\Large{\\cap}\\)\nDiff√©rence: \\(\\Large{\\backslash}\\)\nProjection: \\(\\Large{\\Pi}\\)\nS√©lection: \\(\\Large{\\sigma}\\)\nProduit cart√©sien: \\(\\Large{\\times}\\)\nRenommage: \\(\\Large{\\rho}\\)\n\ns‚Äôappliquent √† des relations pour produire d‚Äôautres relations (le r√©sultat)."
  },
  {
    "objectID": "slides/SQL_7.html#union-cup-et-intersection-cap",
    "href": "slides/SQL_7.html#union-cup-et-intersection-cap",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Union \\(\\cup\\) et intersection \\(\\cap\\)\n",
    "text": "Union \\(\\cup\\) et intersection \\(\\cap\\)\n\n\n\n\n\n\n\nD√©finition\n\n\n\nL‚Äôunion et l‚Äôintersection sont des op√©rations portant sur deux relations \\(R_1\\) et \\(R_2\\) de m√™me sch√©ma\n\\(T=R_1\\cup R_2\\) est constitu√©e des tuples appartenant √† \\(R_1\\) ou √† \\(R_2\\).\n\\(T=R_1\\cap R_2\\) est constitu√©e des tuples appartenant √† \\(R_1\\) et √† \\(R_2\\).\nLes Sch√©mas de \\(R_1\\cup R_2\\), \\(R_1\\cap R_2\\) sont les m√™mes que ceux de \\(R_1\\) et \\(R_2\\)"
  },
  {
    "objectID": "slides/SQL_7.html#union-et-intersection",
    "href": "slides/SQL_7.html#union-et-intersection",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Union et intersection",
    "text": "Union et intersection"
  },
  {
    "objectID": "slides/SQL_7.html#exemple",
    "href": "slides/SQL_7.html#exemple",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Exemple",
    "text": "Exemple\n\n\nTrain 1\n\n\nh-dep\ndest\nnum\n\n\n\n13h15\nLyon\n213\n\n\n13h29\nMarseille\n1024\n\n\n14h15\nLyon\n214\n\n\n\nTrain 2\n\n\nh-dep\ndest\nnum\n\n\n\n13h39\nAvignon\n43\n\n\n14h15\nLyon\n214\n\n\n\n\nTrain 1 \\(\\cup\\) Train 2\n\n\nh-dep\ndest\nnum\n\n\n\n13h15\nLyon\n213\n\n\n13h29\nMarseille\n1024\n\n\n14h15\nLyon\n214\n\n\n13h39\nAvignon\n43\n\n\n\nTrain 1 \\(\\cap\\) Train 2\n\n\nh-dep\ndest\nnum\n\n\n14h15\nLyon\n214"
  },
  {
    "objectID": "slides/SQL_7.html#diff√©rence",
    "href": "slides/SQL_7.html#diff√©rence",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Diff√©rence",
    "text": "Diff√©rence\n\n\n\n\n\n\nD√©finition\n\n\n\nLa diff√©rence de deux relations \\(R_1\\) et \\(R_2\\) (de m√™me sch√©ma) est une relation \\(T\\)\nde m√™me sch√©ma que \\(R_1\\) et \\(R_2\\)\nconstitu√©e des tuples appartenant √† \\(R_1\\) et n‚Äôappartenant pas √† \\(R_2\\).\nOn note \\(T = R_1 - R_2\\).\n\n\n\n\n\n\n\n\n\n\n\nOp√©ration non commutative !\n\n\nR_1 - R_2R_2 - R_1$ (en g√©n√©ral)."
  },
  {
    "objectID": "slides/SQL_7.html#diff√©rence-exemple",
    "href": "slides/SQL_7.html#diff√©rence-exemple",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Diff√©rence : exemple",
    "text": "Diff√©rence : exemple"
  },
  {
    "objectID": "slides/SQL_7.html#produit-cart√©sien",
    "href": "slides/SQL_7.html#produit-cart√©sien",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Produit Cart√©sien",
    "text": "Produit Cart√©sien\n\n\n\n\n\n\nD√©finition\n\n\n\n\nSoient:\n\n\n\\(R_1\\) de sch√©ma \\(R_1(A_1,A_2,...,A_k)\\)\n\n\n\\(R_2\\) de sch√©ma \\(R_2(B_1,B_2,...,B_\\ell)\\)\n\navec \\(A_i\\neq B_j\\), pour tout \\(i=1,...,k\\), \\(j=1,..,\\ell\\)\n\n\n\nDans le contexte ‚Äúclassique‚Äù : \\(R_1 \\times R_2= \\{(e_1,e_2): e_1\\in R_1, e_2\\in R_2\\}\\)\n\\(R=R_1 \\times R_2\\) de sch√©ma \\(R(A_1,A_2,...,A_k,B_1,B_2,...,B_\\ell)\\). Le sch√©ma de \\(R\\) est l‚Äôunion des sch√©mas de \\(R_1\\) et \\(R_2\\)\n\n\n\n\n\n\n\n\n\n\nAttention\n\n\nEn alg√®bre relationnelle, cette op√©ration est commutative ( \\(R_1\\times R_2 = R_2\\times R_1\\) ) et associative"
  },
  {
    "objectID": "slides/SQL_7.html#produit-cart√©sien-1",
    "href": "slides/SQL_7.html#produit-cart√©sien-1",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Produit cart√©sien :",
    "text": "Produit cart√©sien :\n\n\n\n\n\n\nD√©finition formelle\n\n\n\\(R=R_1\\times R_2\\) est la relation de sch√©ma \\(R(A_1,A_2,...,A_k,B_1,B_2,...,B_\\ell)\\) v√©rifiant~:\n\nPour tout \\(t\\in R\\), il existe \\(t_1\\in R_1\\), \\(t_2\\in R_2\\) (\\(\\forall t \\in R, \\exists t_1 \\in R_1, \\exists t_2 \\in R_2, \\ldots\\)) tels que :\n\n\\[t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell\\]\n\nR√©ciproquement, pour tout \\(t_1\\in R_1\\), \\(t_2\\in R_2\\) , il existe \\(t\\in R\\) tels que :\n\n\\[t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad \\text{et} \\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell\\]\n\\[\\forall t_1 \\in R_1, \\forall t_2 \\in R_2, \\exists t \\in R, \\qquad  t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad \\text{et} \\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell\\]"
  },
  {
    "objectID": "slides/SQL_7.html#produit-cart√©sien-avec-dplyr-dplyrcross_join",
    "href": "slides/SQL_7.html#produit-cart√©sien-avec-dplyr-dplyrcross_join",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Produit cart√©sien avec dplyr: dplyr::cross_join()\n",
    "text": "Produit cart√©sien avec dplyr: dplyr::cross_join()\n\n\\(R \\times S\\) se traduit en\ncross_join(R, S)"
  },
  {
    "objectID": "slides/SQL_7.html#projection-largepi",
    "href": "slides/SQL_7.html#projection-largepi",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Projection ( \\(\\Large{\\pi}\\) )",
    "text": "Projection ( \\(\\Large{\\pi}\\) )\n\n\n\n\n\n\nD√©finition\n\n\n\nLa projection d‚Äôune relation \\(R\\) de sch√©ma \\(R(A_1,\\dots, A_k)\\) sur les attributs \\(A_{i_1}, \\dots, A_{i_p}\\), \\(i_1,..., i_p\\in \\{1,...,k\\}\\), est la relation \\(S\\)\n\nde sch√©ma \\(S(A_{i_1}, \\dots,A_{i_p})\\)\n\ndont les tuples sont obtenus par √©limination des attributs non mentionn√©s dans \\(A_{i_1}, \\dots, A_{i_p}\\) (et par √©limination des doublons).\nOn note \\(S = \\pi_{A_{i_1}, \\dots, A_{i_p}} (R)\\).\n\n\nD√©finition formelle :\n\n\\[s\\in S\\quad  \\iff \\quad \\exists t\\in R, \\forall n\\in\\left\\{1,\\dots,p\\right\\}\\qquad s.A_{i_n}=t.A_{i_n}\\]\n\n\n\nImplicitement, on a √©limination des doublons car une projection peut produire plusieurs fois le m√™me tuple."
  },
  {
    "objectID": "slides/SQL_7.html#projection-avec-dplyrselect",
    "href": "slides/SQL_7.html#projection-avec-dplyrselect",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Projection avec dplyr::select()\n",
    "text": "Projection avec dplyr::select()\n\n\\(S = \\pi_{A_{i_1}, \\dots, A_{i_p}} (R)\\) se traduit en\nS &lt;- dplyr::select(R, Ai1, Ai2, ..., Aip)"
  },
  {
    "objectID": "slides/SQL_7.html#projection-exemples",
    "href": "slides/SQL_7.html#projection-exemples",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Projection : Exemples",
    "text": "Projection : Exemples"
  },
  {
    "objectID": "slides/SQL_7.html#projection-vitamin√©e-tidy-selection",
    "href": "slides/SQL_7.html#projection-vitamin√©e-tidy-selection",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Projection vitamin√©e (tidy selection)",
    "text": "Projection vitamin√©e (tidy selection)"
  },
  {
    "objectID": "slides/SQL_7.html#s√©lection-largesigma",
    "href": "slides/SQL_7.html#s√©lection-largesigma",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "S√©lection ( \\(\\Large{\\sigma}\\) )",
    "text": "S√©lection ( \\(\\Large{\\sigma}\\) )\n\n\n\n\n\n\nD√©finition\n\n\n\n\nLa s√©lection d‚Äôune relation \\(R\\) par une condition \\(C\\) est une relation \\(S\\)\n\nde m√™me sch√©ma que \\(R\\)\ndont les tuples sont ceux de \\(R\\) qui satisfont la condition \\(C\\).\n\n\nOn note \\(S = \\sigma_C (R)\\).\n\nLa condition \\(C\\)\n\ns‚Äôexprime √† l‚Äôaide des noms d‚Äôattributs de la relation ou de constantes (pour les op√©randes)\non peut utiliser des op√©rateurs arithm√©tiques de comparaison ( \\(=, \\neq, \\leq, \\geq, &lt;, &gt;\\) ) ainsi que des connecteurs logiques ( \\(\\lnot, \\land, \\lor\\) ).."
  },
  {
    "objectID": "slides/SQL_7.html#s√©lection-avec-dplyrfilter",
    "href": "slides/SQL_7.html#s√©lection-avec-dplyrfilter",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "S√©lection avec dplyr::filter\n",
    "text": "S√©lection avec dplyr::filter\n\n\\(S = \\sigma_C (R)\\) se traduit en\nS &lt;- dplyr::filter(R, C)"
  },
  {
    "objectID": "slides/SQL_7.html#s√©lection-exemple",
    "href": "slides/SQL_7.html#s√©lection-exemple",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "S√©lection : Exemple",
    "text": "S√©lection : Exemple"
  },
  {
    "objectID": "slides/SQL_7.html#renommage",
    "href": "slides/SQL_7.html#renommage",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Renommage",
    "text": "Renommage\n\n\n\n\n\n\nD√©finition\n\n\n\nSoit \\(R\\) de sch√©ma \\(R(A_1,\\dots, A_k)\\), le renommage d‚Äôun attribut \\(A_i\\), \\(i\\leq k\\), en \\(B\\) est une relation \\(S\\) :\n\nde m√™me contenu (m√™mes lignes)\nde sch√©ma \\(S(A_1,...,A_{i-1},B,A_{i+1},..., A_k)\\)\n\nOn le note \\(S=\\rho_{A_i\\mapsto B}(R)\\)"
  },
  {
    "objectID": "slides/SQL_7.html#renommage-avec-dplyrrename",
    "href": "slides/SQL_7.html#renommage-avec-dplyrrename",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Renommage avec dplyr::rename()\n",
    "text": "Renommage avec dplyr::rename()\n\n\\(S=\\rho_{A_i\\mapsto B}(R)\\) se traduit en\nS &lt;- dplyr::rename(R, B=Ai)"
  },
  {
    "objectID": "slides/SQL_7.html#exemple-1",
    "href": "slides/SQL_7.html#exemple-1",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Exemple",
    "text": "Exemple\nUtilit√© Va permettre d‚Äô√©tendre certains op√©rateurs pour des relations de sch√©mas non-disjoints"
  },
  {
    "objectID": "slides/SQL_7.html#les-op√©rateurs-comme-fonctions",
    "href": "slides/SQL_7.html#les-op√©rateurs-comme-fonctions",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Les op√©rateurs comme fonctions",
    "text": "Les op√©rateurs comme fonctions\n\\(\\pi_{Ai1, Aip}\\left(\\sigma_C(R)\\right)\\)\nse traduit en\ndplyr::select(dplyr::filter(R, C), Ai1, ..., Aip)\nqui s‚Äôav√®re difficile √† lire, surtout si on compose plus d‚Äôop√©rations √©l√©mentaires\nLa composition de fonctions se con√ßoit facilement mais l‚Äôexpression correspondante est difficile √† lire"
  },
  {
    "objectID": "slides/SQL_7.html#r√©√©criture-de-la-composition-avec",
    "href": "slides/SQL_7.html#r√©√©criture-de-la-composition-avec",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "R√©√©criture de la composition avec |>\n",
    "text": "R√©√©criture de la composition avec |&gt;\n\nS &lt;- dplyr::select(dplyr::filter(R, C), Ai1, ..., Aip)\npeut √™tre r√©√©crite en\nS &lt;- R |&gt; \n  dplyr::filter(C) |&gt;\n  dplyr::select(Ai1,.., Aip)"
  },
  {
    "objectID": "slides/SQL_7.html#les-jointures",
    "href": "slides/SQL_7.html#les-jointures",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Les jointures",
    "text": "Les jointures\nOn va d√©finir des op√©rations pratiques pour la manipulation de donn√©es~: les jointures\n\nJointure\nJointure naturelle\n\\(\\theta\\)-jointure et √©qui-jointure"
  },
  {
    "objectID": "slides/SQL_7.html#jointure",
    "href": "slides/SQL_7.html#jointure",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Jointure",
    "text": "Jointure\n\n\n\n\n\n\nD√©finition\n\n\nLa jointure \\(T=R_1\\bowtie_C R_2\\) de deux relations \\(R_1\\) et \\(R_2\\) de sch√©mas disjoints sous la condition \\(C\\) est la relation \\(T\\):\n\nde sch√©ma la concat√©nation des sch√©mas de \\(R_1\\) et \\(R_2\\)\nform√©e des tuples du produit cart√©sien \\(R_1  \\times R_2\\) qui satisfont la condition \\(C\\)\n\nR√®gles de formation de la condition de jointure : comme pour la s√©lection\n\n\n\n\n\n\n\n\n\nD√©finition formelle\n\n\n\\[R_1 \\bowtie_C R_2 = \\sigma_C(R_1\\times R_2)\\]"
  },
  {
    "objectID": "slides/SQL_7.html#exemple-2",
    "href": "slides/SQL_7.html#exemple-2",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Exemple",
    "text": "Exemple\nTrDep\n\n\nhdep\ndest\nnumdep\n\n\n\n13h15\nLyon\n213\n\n\n13h29\nMarseille\n1024\n\n\n\nTrArr\n\n\nharr\nprov\nnumarr\n\n\n\n13h39\nAvignon\n43\n\n\n15h15\nParis\n213\n\n\n\n\\(\\texttt{TrDep} \\bowtie_{\\text{numdep} &gt; \\text{numar}} \\texttt{TrArr}\\)\n\n\n\n\n\n\n\n\n\n\nhdep\ndest\nnumdep\nharr\nprov\nnumarr\n\n\n\n13h15\nLyon\n213\n13h39\nAvignon\n43\n\n\n13h29\nMarseille\n1024\n13h39\nAvignon\n43\n\n\n13h29\nMarseille\n1024\n15h15\nParis\n213"
  },
  {
    "objectID": "slides/SQL_7.html#√©qui-jointure-theta-jointure",
    "href": "slides/SQL_7.html#√©qui-jointure-theta-jointure",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "√âqui-jointure, \\(\\theta\\)-jointure",
    "text": "√âqui-jointure, \\(\\theta\\)-jointure\n\n\n\n\n\n\n√âqui-jointure\n\n\nJointure avec √©galit√© entre attributs de types comparables\n\n\n\n\\[\\texttt{TrDep} \\bowtie_{\\text{numdep} = \\text{numarr}} \\texttt{TrArr}\\]\n\n\n\n\n\n\n\n\n\n\nhdep\ndest\nnumdep\nharr\nprov\nnumarr\n\n\n13h15\nLyon\n213\n15h15\nParis\n213\n\n\n\n\n\n\n\n\n\n\\(\\theta\\)-jointure\n\n\nCondition de jointure entre attributs de types comparables et avec un op√©rateur diff√©rent de l‚Äô√©galit√©, c‚Äôest-√†-dire dans \\(\\left\\{&lt;,&gt;,\\leq,\\geq, \\neq\\right\\}\\).\n\\[\\text{TrDep} \\bowtie_{\\text{numdep} &gt; \\text{numarr}} \\text{TrArr}\\]"
  },
  {
    "objectID": "slides/SQL_7.html#jointure-naturelle",
    "href": "slides/SQL_7.html#jointure-naturelle",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Jointure naturelle",
    "text": "Jointure naturelle\n\n\n\n\n\n\nD√©finition\n\n\nC‚Äôest une √©qui-jointure concernant les attributs communs (m√™me nom et m√™me type) de deux relations\nOn ne garde dans le r√©sultat qu‚Äôune copie des attributs communs \n\n\n\nOn consid√®re\n\n\\(R_1\\) d‚Äôattributs \\(A_1,..,A_k,B_1,...,B_h\\)\n\\(R_2\\) d‚Äôattributs \\(A_1,..,A_k,B_{h+1},...,B_\\ell\\)\n\\(A_1,..., A_k\\) : attributs communs et \\(\\{B_1,...,B_h\\}\\cap \\{ B_{h+1},...,B_\\ell \\}=\\emptyset\\)\nSoit \\(A'_1, ...., A'_k\\) tels que \\(\\{A_1,..., A_k\\}\\cap \\{ A'_1, ...., A'_k \\}=\\emptyset\\)"
  },
  {
    "objectID": "slides/SQL_7.html#jointure-naturelle-formalisation",
    "href": "slides/SQL_7.html#jointure-naturelle-formalisation",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Jointure naturelle (formalisation)",
    "text": "Jointure naturelle (formalisation)\nConsid√©rons \\(S\\) d‚Äôattributs \\(A_1',..,A_k',B_{h+1},...,B_l\\) d√©finie par :\n\\[S=\\rho_{A_1\\mapsto A_1'}(\\rho_{A_2\\mapsto A_2'}(\\cdots (\\rho_{A_k\\mapsto A_k'}(R_2)\\cdots ))\\]\nLa jointure naturelle sur deux relations \\(R_1\\) et \\(R_2\\) est la relation\n\nd‚Äôattributs \\(A_1,..,A_k,B_1,...,B_h, B_{h+1},...,B_\\ell\\)\nd√©finie par :\n\n\\[\\pi_{A_1,..,A_k,B_1,...,B_h, B_{h+1},...,B_\\ell}(R_1\\bowtie_{C} S)\\]\no√π \\(C\\) est \\((A_1=A_1') \\wedge (A_2=A'_2) \\wedge \\ldots \\wedge (A_k=A_k')\\)\n on r√©alise une √©qui-jointure sur tous les attributs communs et on ne garde qu‚Äôun seul ‚Äúexemplaire‚Äù de ces attributs communs par projection.\nOn note cette op√©ration : \\(R_1 \\bowtie R_2\\).\n\nPour √©viter le renommage, on peut d√©cider de pr√©fixer les noms des attributs par ceux de la relation. La condition \\(C\\) devient :\n\\[(R_1.A_1=R_2.A_1) \\wedge \\ldots \\wedge (R_1.A_k=R_2.A_k)\\]"
  },
  {
    "objectID": "slides/SQL_7.html#exemple-de-jointure-naturelle",
    "href": "slides/SQL_7.html#exemple-de-jointure-naturelle",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Exemple de Jointure naturelle",
    "text": "Exemple de Jointure naturelle\n\n\nTrDep\n\n\nhdep\ndest\nnum\n\n\n\n13h15\nLyon\n213\n\n\n13h29\nMarseille\n1024\n\n\n\nTrArr\n\n\nharr\nprov\nnum\n\n\n\n13h39\nAvignon\n43\n\n\n15h15\nParis\n213\n\n\n\n\n\\[\\text{TrDep} \\bowtie \\text{TrArr}\\]\n\n\n\n\n\n\n\n\n\nhdep\ndest\nnum\nharr\nprov\n\n\n13h15\nLyon\n213\n15h15\nParis"
  },
  {
    "objectID": "slides/SQL_7.html#exemples-de-requ√™tes",
    "href": "slides/SQL_7.html#exemples-de-requ√™tes",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Exemples de requ√™tes",
    "text": "Exemples de requ√™tes\nBase constitu√©e des trois tables suivantes:\nfournisseurs(fno, nom, adresse, ville)\nproduits(pno, design, prix, poids, couleur)\ncommandes(cno, fno, pno, qte)"
  },
  {
    "objectID": "slides/SQL_7.html#exemples-de-requ√™tes-suite",
    "href": "slides/SQL_7.html#exemples-de-requ√™tes-suite",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Exemples de requ√™tes (suite)",
    "text": "Exemples de requ√™tes (suite)\n\nd√©terminer les num√©ros des fournisseurs ayant comme nom ‚ÄúDurand‚Äù\n\n\\[\\pi_{\\text{fno}} \\bigl( \\sigma_{\\text{nom}=\\text{'Durand'}} (\\text{fournisseurs})\\bigr)\\]\n\nd√©terminer les r√©f√©rences, prix et quantit√©s des produits command√©s √† plus de 10 exemplaires.\n\n\\[\\pi_{\\text{pno,prix,qte}} \\bigl( \\sigma_{\\text{qte}&gt;10} (\\text{commandes} \\bowtie \\text{produits})\\bigr)\\]"
  },
  {
    "objectID": "slides/SQL_7.html#jointure-externe",
    "href": "slides/SQL_7.html#jointure-externe",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Jointure externe",
    "text": "Jointure externe\n\n\n\n\n\n\nPerte d‚Äôinformation dans jointure naturelle\n\n\nLes tuples ne satisfaisant pas la condition (non appari√©s) disparaissent\n\n\n\n\n\n\n\n\n\nD√©finition\n\n\n\nOn ajoute symboliquement‚Äù une ligne dont les valeurs sont vides (ou avec valeur sp√©ciale NULL) pour garder les tuples initiaux ‚Äúnon satisfaisants‚Äù apr√®s la jointure\nOn note cette op√©ration entre deux relations \\(R\\) et \\(S\\) :\n\\[R \\bowtie^+ S\\]"
  },
  {
    "objectID": "slides/SQL_7.html#jointure-externe-exemple",
    "href": "slides/SQL_7.html#jointure-externe-exemple",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Jointure externe (exemple)",
    "text": "Jointure externe (exemple)\n\n\nTrDep\n\n\nhdep\ndest\nnum\n\n\n\n13h15\nLyon\n213\n\n\n13h29\nMarseille\n1024\n\n\n\nTrArr\n\n\nharr\nprov\nnum\n\n\n\n13h39\nAvignon\n43\n\n\n15h15\nParis\n213\n\n\n\n\n\\[\\text{TrDep} \\bowtie^+ \\text{TrArr}\\]\n\n\n\n\n\n\n\n\n\nhdep\ndest\nnum\nharr\nprov\n\n\n\n13h15\nLyon\n213\n15h15\nParis\n\n\n13h29\nMarseille\n1024\n-\n-\n\n\n-\n-\n43\n13h39\nAvignon"
  },
  {
    "objectID": "slides/SQL_7.html#division",
    "href": "slides/SQL_7.html#division",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Division",
    "text": "Division\n\n\n\n\n\n\nD√©finition\n\n\nLa division ou quotient\n\nd‚Äôune relation \\(R\\) de sch√©ma \\(R(A_1,A_2,\\dots,A_k)\\)\npar une relation \\(S\\) de sch√©ma \\(S(A_{p+1},\\dots ,A_k)\\)\n\nest la relation \\(T\\) de sch√©ma \\(T(A_1, \\dots, A_p)\\) form√©e des tuples qui compl√©t√©s par chaque tuple de \\(S\\) donnent un tuple de \\(R\\).\nAutrement dit\n\\[\\begin{array}{l} t\\in T(A_1,\\dots,A_p)  \\quad \\Longleftrightarrow \\\\\n\\forall s\\in S(A_{p+1},\\dots ,A_k) \\quad \\exists r\\in R \\quad \\begin{cases}\nt.A_1=r.A_1, \\dots, t.A_p=r.A_p\\\\ s.A_{p+1}=r.A_{p+1},\\dots, s.A_{k}=r.A_{k} \\end{cases} \\end{array}\\]\nOn note \\[T = R \\div S\\]"
  },
  {
    "objectID": "slides/SQL_7.html#division-exemple",
    "href": "slides/SQL_7.html#division-exemple",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Division (exemple)",
    "text": "Division (exemple)\n\n\nVoyage : contient pour chaque num√©ro de client la ville de d√©part et d‚Äôarriv√©e des voyages qu‚Äôil a effectu√©\n\n\nnumclient\nvdep\nvarr\n\n\n\n1\nParis\nMarseille\n\n\n3\nMarseille\nLyon\n\n\n1\nParis\nNantes\n\n\n5\nMarseille\nAvignon\n\n\n4\nParis\nNantes\n\n\n3\nParis\nMarseille\n\n\n2\nCaen\nLe Mans\n\n\n3\nParis\nNantes\n\n\n\n\nVilles contient des couples villes de d√©part/villes d‚Äôarriv√©e\n\n\nvdep\nvarr\n\n\n\nParis\nMarseille\n\n\nParis\nNantes"
  },
  {
    "objectID": "slides/SQL_7.html#division-exemple-suite",
    "href": "slides/SQL_7.html#division-exemple-suite",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Division (exemple, suite)",
    "text": "Division (exemple, suite)\n\\[\\texttt{Voyage} \\div \\texttt{Villes}\\]\n\n\nnumclient\n\n\n\n1\n\n\n3\n\n\n\nR√©sultat : num√©ros des clients ayant effectu√© tous les voyages entre les villes de la table Villes (i.e.¬†√† la fois un Paris-Marseille et un Paris-Nantes.)"
  },
  {
    "objectID": "slides/SQL_7.html#interd√©finissabilit√©-des-op√©rateurs",
    "href": "slides/SQL_7.html#interd√©finissabilit√©-des-op√©rateurs",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "Interd√©finissabilit√© des op√©rateurs",
    "text": "Interd√©finissabilit√© des op√©rateurs\n\nL‚Äôunion, la diff√©rence, le produit cart√©sien, la s√©lection et la projection et le renommage sont suffisants pour d√©finir tous les op√©rateurs que l‚Äôon a vu.\nMais avoir un panier plus large d‚Äôop√©rateurs simplifie l‚Äô√©criture des requ√™tes.\n\nQuelques d√©finitions\n\nPour la Jointure : \\(R \\bowtie_C S \\equiv \\sigma_C (R \\times S)\\)\nPour l‚Äôintersection : \\(A \\cap B = A \\cup B - ((B - A) \\cup (A - B))\\)"
  },
  {
    "objectID": "slides/SQL_7.html#d√©finition-de-la-division",
    "href": "slides/SQL_7.html#d√©finition-de-la-division",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "D√©finition de la division",
    "text": "D√©finition de la division\n\n\n\n\n\n\nFormalisation\n\n\nSoient \\(R\\) de sch√©ma \\(R(A_1,A_2,\\dots,A_k)\\), \\(S\\) de sch√©ma \\(S(A_{p+1},\\dots ,A_k)\\)\nest la relation \\(T= R \\div S\\) de sch√©ma \\(T(A_1, \\dots, A_p)\\)."
  },
  {
    "objectID": "slides/SQL_7.html#from-wikipedia-smaller",
    "href": "slides/SQL_7.html#from-wikipedia-smaller",
    "title": "BD : dplyr une mise oeuvre de l‚ÄôAlg√®bre Relationnelle",
    "section": "From Wikipedia {smaller}",
    "text": "From Wikipedia {smaller}\n\nIn the 1960s and 1970s he worked out his theories of data arrangement, issuing his paper ‚ÄúA Relational Model of Data for Large Shared Data Banks‚Äù[14] in 1970, after an internal IBM paper one year earlier.[15] To his disappointment, IBM proved slow to exploit his suggestions until commercial rivals started implementing them.[16]\n\n\nInitially, IBM refused to implement the relational model to preserve revenue from IMS/DB.[citation needed] Codd then showed IBM customers the potential of the implementation of its model, and they in turn pressured IBM. Then IBM included in its Future Systems project a System R subproject ‚Äì but put in charge of it developers who were not thoroughly familiar with Codd‚Äôs ideas, and isolated the team from Codd.[citation needed] As a result, they did not use Codd‚Äôs own Alpha language but created a non-relational one, SEQUEL. Even so, SEQUEL was so superior to pre-relational systems that it was copied, in 1979, based on pre-launch papers presented at conferences, by Larry Ellison, of Relational Software Inc, in his Oracle Database, which actually reached market before SQL/DS ‚Äì because of the then-already proprietary status of the original name, SEQUEL had been renamed SQL.\n\n\nCodd continued to develop and extend his relational model, sometimes in collaboration with Christopher J. Date. One of the normalised forms, the Boyce‚ÄìCodd normal form, is named after him.\n\n\nCodd‚Äôs theorem, a result proven in his seminal work on the relational model, equates the expressive power of relational algebra and relational calculus.[14]"
  },
  {
    "objectID": "slides/LDD_2.html#schema-de-world",
    "href": "slides/LDD_2.html#schema-de-world",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Schema de world",
    "text": "Schema de world"
  },
  {
    "objectID": "slides/LDD_2.html#conraintes-sur-la-table-country",
    "href": "slides/LDD_2.html#conraintes-sur-la-table-country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Conraintes sur la table country",
    "text": "Conraintes sur la table country\n\nUn pays est identifi√© par son countrycode\nDeux pays ne devraient pas avoir le m√™me nom\nUne r√©gion ne devrait appartenir qu‚Äô√† un seul continent\nLa capitale d‚Äôun pays devrait √™tre une ville connue dans city\nLa capitale d‚Äôun pays devrait √™tre une ville de ce pays\nLes capitales de deux pays diff√©rents devraient √™tre des villes diff√©rentes\n‚Ä¶\n\nCe ne sont pas les seules contraintes possibles"
  },
  {
    "objectID": "slides/LDD_2.html#mise-en-≈ìuvre-des-contraintes",
    "href": "slides/LDD_2.html#mise-en-≈ìuvre-des-contraintes",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Mise en ≈ìuvre des contraintes",
    "text": "Mise en ≈ìuvre des contraintes\n\nUn pays est identifi√© par son countrycode : PRIMARY KEY\nDeux pays ne devraient pas avoir le m√™me nom : UNIQUE\nUne r√©gion ne devrait appartenir qu‚Äô√† un seul continent : ???\nLa capitale d‚Äôun pays devrait √™tre une ville connue dans city : REFERENCES\nLa capitale d‚Äôun pays devrait √™tre une ville de ce pays : ???\nLes capitales de deux pays diff√©rents devraient √™tre des villes diff√©rentes : UNIQUE\nDeux pays diff√©rents ne peuvent avoir le m√™me code2"
  },
  {
    "objectID": "slides/LDD_2.html#examen-du-schema-de-country",
    "href": "slides/LDD_2.html#examen-du-schema-de-country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Examen du schema de country",
    "text": "Examen du schema de country\n+--------------------+---------------+-----------+----------+--------------+-------------+\n| Column             | Type          | Modifiers | Storage  | Stats target | Description |\n|--------------------+---------------+-----------+----------+--------------+-------------|\n| countrycode        | character(3)  |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n| name_country       | text          |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n| continent          | text          |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n| region             | text          |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n| surfacearea        | real          |  not null | plain    | &lt;null&gt;       | &lt;null&gt;      |\n| indepyear          | smallint      |           | plain    | &lt;null&gt;       | &lt;null&gt;      |\n| population_country | integer       |  not null | plain    | &lt;null&gt;       | &lt;null&gt;      |\n| lifeexpectancy     | real          |           | plain    | &lt;null&gt;       | &lt;null&gt;      |\n| gnp                | numeric(10,2) |           | main     | &lt;null&gt;       | &lt;null&gt;      |\n| gnpold             | numeric(10,2) |           | main     | &lt;null&gt;       | &lt;null&gt;      |\n| localname          | text          |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n| governmentform     | text          |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n| headofstate        | text          |           | extended | &lt;null&gt;       | &lt;null&gt;      |\n| capital            | integer       |           | plain    | &lt;null&gt;       | &lt;null&gt;      |\n| code2              | character(2)  |  not null | extended | &lt;null&gt;       | &lt;null&gt;      |\n+--------------------+---------------+-----------+----------+--------------+-------------+\nUn sch√©ma de table ne se r√©duit pas"
  },
  {
    "objectID": "slides/LDD_2.html#continued",
    "href": "slides/LDD_2.html#continued",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "(continued)",
    "text": "(continued)\nIndexes:\n    \"country_pkey\" PRIMARY KEY, btree (countrycode)\nCheck constraints:\n    \"country_continent_check\" CHECK (continent = 'Asia'::text OR \n                                     continent = 'Europe'::text OR \n                                     continent = 'North America'::text OR \n                                     continent = 'Africa'::text OR\n                                     continent = 'Oceania'::text OR\n                                     continent = 'Antarctica'::text OR\n                                     continent = 'South America'::text),\nForeign-key constraints:\n    \"country_capital_fkey\" FOREIGN KEY (capital) REFERENCES city(id)\n    \"country_fk\" FOREIGN KEY (continent) REFERENCES code_continent(continent)"
  },
  {
    "objectID": "slides/LDD_2.html#ddl-pour-country",
    "href": "slides/LDD_2.html#ddl-pour-country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "DDL pour country",
    "text": "DDL pour country\nCREATE TABLE world.country (\n    countrycode bpchar(3) NOT NULL,\n    name_country text NOT NULL,\n    continent text NOT NULL,\n    region text NOT NULL,\n    surfacearea float4 NOT NULL,\n    indepyear int2 NULL,\n    population_country int4 NOT NULL,\n    lifeexpectancy float4 NULL,\n    gnp numeric(10, 2) NULL,\n    gnpold numeric(10, 2) NULL,\n    localname text NOT NULL,\n    governmentform text NOT NULL,\n    headofstate text NULL,\n    capital int4 NULL,\n    code2 bpchar(2) NOT NULL,\n    CONSTRAINT country_continent_check CHECK (((continent = 'Asia'::text) \n    OR (continent = 'Europe'::text) \n    OR (continent = 'North America'::text) \n    OR (continent = 'Africa'::text) \n    OR (continent = 'Oceania'::text)\n    OR (continent = 'Antarctica'::text) \n    OR (continent = 'South America'::text))),\n    CONSTRAINT country_pkey PRIMARY KEY (countrycode)\n);"
  },
  {
    "objectID": "slides/LDD_2.html#ajout-de-contraintes-r√©f√©rentielles",
    "href": "slides/LDD_2.html#ajout-de-contraintes-r√©f√©rentielles",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Ajout de contraintes r√©f√©rentielles",
    "text": "Ajout de contraintes r√©f√©rentielles\n-- world.country foreign keys\n\nALTER TABLE world.country ADD CONSTRAINT \n  country_capital_fkey FOREIGN KEY (capital) REFERENCES world.city(id);\n\nALTER TABLE world.country ADD CONSTRAINT \n  country_fk FOREIGN KEY (continent) REFERENCES world.code_continent(continent);\nLes contraintes country_capital_fkey et country_fk sont √©mises par la table country"
  },
  {
    "objectID": "slides/LDD_2.html#contraintes-ajout√©es",
    "href": "slides/LDD_2.html#contraintes-ajout√©es",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Contraintes ajout√©es",
    "text": "Contraintes ajout√©es\n-- world.country foreign keys\n\nALTER TABLE world.country ADD CONSTRAINT \n  country_capital_fkey FOREIGN KEY (capital) REFERENCES world.city(id);\n\nALTER TABLE world.country ADD CONSTRAINT \n  country_fk FOREIGN KEY (continent) REFERENCES world.code_continent(continent);\n La contrainte country_fk sur continent remplit la m√™me fonction que la contrainte country_continent_check\n\n Conseil:\n\nSi le domaine est de grande cardinalit√©, utiliser une table pour repr√©senter le domaine, et une contrainte r√©f√©rentielle\nSi le domaine est de petite cardinalit√©, une contrainte CHECK est aussi pratique\n\n\n\n Comment proc√©der pour mettre en ≈ìuvre une contrainte de domaine sur region ?"
  },
  {
    "objectID": "slides/LDD_2.html#une-r√©gion-nappartient-qu√†-un-continent",
    "href": "slides/LDD_2.html#une-r√©gion-nappartient-qu√†-un-continent",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Une r√©gion n‚Äôappartient qu‚Äô√† un continent",
    "text": "Une r√©gion n‚Äôappartient qu‚Äô√† un continent\nCette contrainte signifie que le r√©sultat de la requ√™te suivante est vide :\nSELECT *\nFROM world.country c1 JOIN world.country c2 ON \n  (c1.continent&lt;&gt; c2.continent AND c1.region=c2.region);\n\nOn exclut l‚Äôexistence de deux lignes qui co√Øncideraient sur region mais pas sur continent\nNous postulons l‚Äôexistence d‚Äôune d√©pendance fonctionnelle\n\\[\\texttt{region} \\longrightarrow \\texttt{continent}\\]\n\n\nOn peut consid√©rer qu‚Äôil s‚Äôagit d‚Äôune anomalie de sch√©ma et normaliser le sch√©ma\nOn peut mettre en place une contrainte d‚Äôexclusion avec EXCLUDE"
  },
  {
    "objectID": "slides/LDD_2.html#index-pour-la-contrainte-dexclusion",
    "href": "slides/LDD_2.html#index-pour-la-contrainte-dexclusion",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Index pour la contrainte d‚Äôexclusion",
    "text": "Index pour la contrainte d‚Äôexclusion"
  },
  {
    "objectID": "slides/LDD_2.html#√©clatement-de-la-table-country",
    "href": "slides/LDD_2.html#√©clatement-de-la-table-country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "√âclatement de la table country",
    "text": "√âclatement de la table country\n\nMise en place d‚Äôune table region_continent(region, continent)\n√âmission d‚Äôune contrainte r√©f√©rentielle de country vers region_continent"
  },
  {
    "objectID": "slides/LDD_2.html#pr√©paration",
    "href": "slides/LDD_2.html#pr√©paration",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Pr√©paration",
    "text": "Pr√©paration\nCREATE SCHEMA monde AUTHORIZATION superdupont ;\n\nGRANT ALL ON SCHEMA monde TO superdupont ;\n\nCREATE TABLE monde.code_continent AS \n       TABLE world.code_continent ;\n\nALTER TABLE monde.code_continent ADD CONSTRAINT \n  code_continent_pk PRIMARY KEY (codecontinent);\nALTER TABLE monde.code_continent ADD CONSTRAINT \n  code_continent_un UNIQUE (continent);"
  },
  {
    "objectID": "slides/LDD_2.html#cr√©ation-de-region_continent",
    "href": "slides/LDD_2.html#cr√©ation-de-region_continent",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Cr√©ation de region_continent",
    "text": "Cr√©ation de region_continent\nCREATE TABLE monde.region_continent AS \n  SELECT DISTINCT region, continent \n  FROM world.country c ;\nLa requ√™te suivante renvoie une table vide:\nSELECT * \nFROM monde.region_continent rc1 JOIN \n     monde.region_continent rc2 ON (\n    rc1.region=rc2.region AND \n  rc1.continent&lt;&gt; rc2.continent\n) ;\nALTER TABLE monde.region_continent ADD CONSTRAINT \n    region_continent_pk PRIMARY KEY (region);\n\nALTER TABLE mode.region_continent ADD CONSTRAINT \n  region_continent_fk FOREIGN KEY (continent) \n  REFERENCES monde.code_continent(continent);"
  },
  {
    "objectID": "slides/LDD_2.html#cr√©ation-de-la-table-monde.country",
    "href": "slides/LDD_2.html#cr√©ation-de-la-table-monde.country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Cr√©ation de la table monde.country",
    "text": "Cr√©ation de la table monde.country\nCREATE TABLE monde.country AS  \n  SELECT  countrycode, name_country, region, surfacearea, \n          indepyear, population_country, \n          lifeexpectancy, gnp, gnpold, localname,\n          governmentform, headofstate, capital,  code2            \n  FROM world.country ;\n sans colonne continent"
  },
  {
    "objectID": "slides/LDD_2.html#mise-en-place-des-contraintes-sur-monde.country",
    "href": "slides/LDD_2.html#mise-en-place-des-contraintes-sur-monde.country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Mise en place des contraintes sur monde.country",
    "text": "Mise en place des contraintes sur monde.country\nALTER TABLE monde.country ADD CONSTRAINT \n  country_pk PRIMARY KEY (countrycode);\nALTER TABLE monde.country ADD CONSTRAINT c\n  ountry_un_name UNIQUE (name_country);\nALTER TABLE monde.country ADD CONSTRAINT \n  country_un_code2 UNIQUE (code2);\nALTER TABLE monde.country ADD CONSTRAINT \n  country_un_capital UNIQUE (capital);\n\nALTER TABLE monde.country ADD CONSTRAINT country_fk \n  FOREIGN KEY (region) REFERENCES monde.region_continent(region) \n  ON DELETE SET NULL \n  ON UPDATE CASCADE;"
  },
  {
    "objectID": "slides/LDD_2.html#copie-de-city",
    "href": "slides/LDD_2.html#copie-de-city",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Copie de city",
    "text": "Copie de city\nCREATE TABLE monde.city AS TABLE world.city;\n On a copi√© le sch√©ma a minima (sans les contraintes)"
  },
  {
    "objectID": "slides/LDD_2.html#dans-un-pays-plusieurs-villes-peuvent-elles-porter-le-m√™me-nom",
    "href": "slides/LDD_2.html#dans-un-pays-plusieurs-villes-peuvent-elles-porter-le-m√™me-nom",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Dans un pays plusieurs villes peuvent elles porter le m√™me nom ?",
    "text": "Dans un pays plusieurs villes peuvent elles porter le m√™me nom ?\nSELECT *\nFROM monde.city c JOIN monde.city c2 \n    ON (c.name_city=c2.name_city AND \n      c.countrycode = c2.countrycode  AND \n      c.id&lt;&gt; c2.id) ;\nrenvoie 48 lignes\n\nSELECT *\nFROM monde.city c JOIN monde.city c2 \n    ON (c.name_city=c2.name_city AND \n      c.countrycode = c2.countrycode  AND\n      c.district = c2.district  AND\n      c.id&lt;&gt; c2.id) ;\nrenvoie 2 lignes"
  },
  {
    "objectID": "slides/LDD_2.html#existe-t-il-un-pays-dont-la-capitale-est-dans-un-autre-pays",
    "href": "slides/LDD_2.html#existe-t-il-un-pays-dont-la-capitale-est-dans-un-autre-pays",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Existe-t-il un pays dont la capitale est dans un autre pays ?",
    "text": "Existe-t-il un pays dont la capitale est dans un autre pays ?\nSELECT c. countrycode, c.name_country, cc.name_city, cc.countrycode\nFROM world.country c JOIN world.city cc ON (c.capital=cc.id AND cc.countrycode &lt;&gt; c.countrycode) ;\nrenvoie 0 lignes"
  },
  {
    "objectID": "slides/LDD_2.html#blocages-possibles",
    "href": "slides/LDD_2.html#blocages-possibles",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": " Blocages possibles",
    "text": "Blocages possibles\nSi\n\ncity emet une contrainte r√©f√©rentielle sur country (countrycode)\ncountry emet une contrainte r√©f√©rentielle sur city (capital \\(\\rightarrow\\) id)\n\nRisque de blocage : qui pr√©c√®de la capitale ou le pays ?"
  },
  {
    "objectID": "slides/LDD_2.html#√©mission-de-la-contrainte-de-city-vers-country",
    "href": "slides/LDD_2.html#√©mission-de-la-contrainte-de-city-vers-country",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "√âmission de la contrainte de city vers country",
    "text": "√âmission de la contrainte de city vers country\nALTER TABLE monde.city \n  ADD CONSTRAINT city_fk FOREIGN KEY (countrycode) \n      REFERENCES monde.country(countrycode) \n  ON DELETE SET NULL ON UPDATE CASCADE;"
  },
  {
    "objectID": "slides/LDD_2.html#table-countrylanguage",
    "href": "slides/LDD_2.html#table-countrylanguage",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Table countrylanguage",
    "text": "Table countrylanguage\nCREATE TABLE monde.countrylanguage  AS TABLE world.countrylanguage ;\nALTER TABLE monde.countrylanguage \n  ADD CONSTRAINT countrylanguage_fk \n        FOREIGN KEY (countrycode) REFERENCES monde.country(countrycode) \n        ON DELETE CASCADE \n      ON UPDATE CASCADE;\n\nALTER TABLE monde.countrylanguage \n  ADD CONSTRAINT countrylanguage_pk \n    PRIMARY KEY (\"language\",countrycode);\n\nALTER TABLE monde.countrylanguage \n  ADD CONSTRAINT countrylanguage_check \n    CHECK (percentage &lt;= 100.0 AND percentage &gt;=0.0 );"
  },
  {
    "objectID": "slides/LDD_2.html#synth√®se-r√©gionale",
    "href": "slides/LDD_2.html#synth√®se-r√©gionale",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Synth√®se r√©gionale",
    "text": "Synth√®se r√©gionale\nCREATE OR REPLACE VIEW monde.regionale AS (\nSELECT C.region, \n       SUM(c.population_country) AS population_region,\n       SUM(COALESCE(c.surfacearea, 0)) AS surfacearea_region,\n       SUM(c.gnp) AS gnp_region,\n       SUM(c.gnpold) AS gnpold_region\nFROM monde.country c \nGROUP BY c.region ) ;"
  },
  {
    "objectID": "slides/LDD_2.html#synth√®se-continentale",
    "href": "slides/LDD_2.html#synth√®se-continentale",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Synth√®se continentale",
    "text": "Synth√®se continentale\nSELECT r.* \nFROM monde.regionale r JOIN monde.region_continent rc \n     ON (r.region=rc.region AND rc.continent='Europe') ;\n+----------------+-----------------+------------------+----------+-------------+\n|region          |population_region|surfacearea_region|gnp_region|gnpold_region|\n+----------------+-----------------+------------------+----------+-------------+\n|Western Europe  |        183247600|         1108456.5|4673272.00|   4578420.00|\n|Southern Europe |        144674200|         1316392.4|2012289.00|   1944737.00|\n|Baltic Countries|          7561900|          175117.0|  22418.00|     18595.00|\n|Nordic Countries|         24166400|         1321901.0| 676655.00|    677698.00|\n|British Islands |         63398500|          313173.0|1454251.00|   1369962.00|\n|Eastern Europe  |        307026000|          18814094| 659980.00|    792589.00|"
  },
  {
    "objectID": "slides/LDD_2.html#synth√®se-continentale-1",
    "href": "slides/LDD_2.html#synth√®se-continentale-1",
    "title": "BD VII: Corriger le sch√©ma World",
    "section": "Synth√®se continentale",
    "text": "Synth√®se continentale\nCREATE OR REPLACE VIEW monde.continentale AS (\nSELECT rc.continent, \n       SUM(r.population_region) AS population,\n       SUM(r.surfacearea_region) AS surfacearea,\n       SUM(r.gnp_region) AS gcp,\n       SUM(r.gnpold_region) AS gcpold\nFROM monde.regionale r JOIN monde.region_continent rc \n     ON (r.region=rc.region) \nGROUP BY rc.continent;) ;\n+-------------+----------+-----------+----------+----------+\n|continent    |population|surfacearea|gcp       |gcpold    |\n+-------------+----------+-----------+----------+----------+\n|South America| 345780000|   17864926|1511874.00|1520641.00|\n|North America| 482993000|   24214472|9688627.20|9288175.00|\n|Oceania      |  30401150|  8564294.0| 419774.70| 469058.00|\n|Antarctica   |         0|   13132101|      0.00|          |\n|Africa       | 784475000|   30250376| 580375.00| 553264.00|\n|Europe       | 730074600|   23049132|9498865.00|9382001.00|\n|Asia         |3705025700|   31881006|7655392.00|8251969.00|"
  },
  {
    "objectID": "slides/SQL_5.html#trois-objectifs",
    "href": "slides/SQL_5.html#trois-objectifs",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Trois objectifs",
    "text": "Trois objectifs\n\nAutomatisation de taches r√©p√©titives (administration)\n\n\nOn veut r√©p√©ter une m√™me tache sur une collection de sch√©mas\nOn veut traiter une collection de roles\n\n\n\nCalculs impossibles √† r√©aliser en SQL :\n\n\nCalculer la fermeture transitive d‚Äôune relation comme film_actors\n\nL‚Äôalg√®bre relationnelle est un mod√®le de calculabilit√© restreint¬∑\n\n\nTriggers\n\n\nCertaines contraintes ne peuvent pas √™tre mises en place avec les seules constructions primary key , unique, foreign key, check et exclude (notamment des contraintes d‚Äôexclusion qui mettent en jeu plusieurs tables).\nOn peut les maintenir √† l‚Äôaide de traitements sp√©ciaux : les triggers\n\nLes triggers reposent sur des fonctions sp√©ciales\n\n\nExtensions proc√©durales de SQL\nplpgsql : Programming Language PostGres SQL"
  },
  {
    "objectID": "slides/SQL_5.html#automatisation-des-t√¢ches-r√©p√©titives-deux-outils-n√©cessaires",
    "href": "slides/SQL_5.html#automatisation-des-t√¢ches-r√©p√©titives-deux-outils-n√©cessaires",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Automatisation des t√¢ches r√©p√©titives : deux outils n√©cessaires",
    "text": "Automatisation des t√¢ches r√©p√©titives : deux outils n√©cessaires\nLorsqu‚Äôon administre une base, on doit souvent engendrer des requ√™tes dynamiques √† l‚Äôint√©rieur d‚Äôune fonction PL/pgSQL, c‚Äôest √† dire des commandes qui vont concerner des tables ou des types diff√©rents √† chaque ex√©cution\nLes requ√™tes pr√©par√©es sont alors tr√®s utilement combin√©es avec les structures de contr√¥le (it√©rations, alternatives) pour automatiser les t√¢ches !\n\n 2 outils (pour √©tendre SQL) :\n\nrequ√™tes dynamiques EXECUTE, PREPARE\n\nstructures de contr√¥les IF, LOOP, ... Transforment SQL en un langage de programmation"
  },
  {
    "objectID": "slides/SQL_5.html#fonction-inventory_in_stock",
    "href": "slides/SQL_5.html#fonction-inventory_in_stock",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Fonction inventory_in_stock()\n",
    "text": "Fonction inventory_in_stock()\n\nObjectif : calculer si un dvd est en stock ou pas\nUn DVD est en stock\n\ns‚Äôil n‚Äôa jamais √©t√© lou√©\n\nOU\n\nsi toutes les locations de ce DVD sont d√©j√† termin√©es (return_date n‚Äôest pas nul)\n\n-- AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE\n-- FOR THE ITEM OR ALL ROWS HAVE return_date POPULATED"
  },
  {
    "objectID": "slides/SQL_5.html#fonction-inventory_in_stock-1",
    "href": "slides/SQL_5.html#fonction-inventory_in_stock-1",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Fonction inventory_in_stock\n",
    "text": "Fonction inventory_in_stock\n\nCREATE OR REPLACE FUNCTION sakila.inventory_in_stock(p_inventory_id integer)\n RETURNS boolean\n LANGUAGE plpgsql\nAS $function$\nDECLARE                 \n    v_rentals INTEGER;  #&lt;&lt;\n    v_out     INTEGER;  #&lt;&lt;\nBEGIN\n    SELECT count(*) INTO v_rentals  #&lt;&lt;\n    FROM rental\n    WHERE inventory_id = p_inventory_id;\n\n    IF v_rentals = 0 THEN   #&lt;&lt;\n      RETURN TRUE;          #&lt;&lt; \n    END IF;                 #&lt;&lt;\n\n    SELECT COUNT(rental_id) INTO v_out     #&lt;&lt; \n    FROM inventory LEFT JOIN rental USING(inventory_id)\n    WHERE inventory.inventory_id = p_inventory_id AND rental.return_date IS NULL;\n\n    IF v_out &gt; 0 THEN\n      RETURN FALSE;\n    ELSE\n      RETURN TRUE;\n    END IF;\nEND $function$ ;"
  },
  {
    "objectID": "slides/SQL_5.html#section",
    "href": "slides/SQL_5.html#section",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "",
    "text": "SELECT ... INTO ...\n\nLe r√©sultat de la requ√™te est ici un entier, il est affect√© √† une variable locale comme v_rentals, v_out, ‚Ä¶\nEn plpgsql, le r√©sultat d‚Äôune requ√™te doit √™tre m√©moris√© ou explicitement n√©glig√© en utilisant PERFORM plut√¥t que SELECT\n\nIF ... THEN ...\n\nAlternative, comme dans un langage de programmation ordinaire\n\nRETURN\n\nRetourne le r√©sultat et termine l‚Äôex√©cution de la fonction"
  },
  {
    "objectID": "slides/SQL_5.html#une-t√¢che-de-surveillancemaintenance",
    "href": "slides/SQL_5.html#une-t√¢che-de-surveillancemaintenance",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Une t√¢che de surveillance/maintenance",
    "text": "Une t√¢che de surveillance/maintenance\n\nD√©terminer pour chaque usager (sch√©ma) le nombre de tuples dans la table ville_pays de cet usager.\nPour chaque sch√©ma schema, on veut √©valuer une requ√™te\nSELECT COUNT(*) \nFROM schema.ville_pays ;\nIci schema doit √™tre calcul√© en interrogeant le SGBD\n\nSituation in√©dite :\n\ncomment d√©terminer les sch√©mas pertinents ?"
  },
  {
    "objectID": "slides/SQL_5.html#la-m√©tabase-information_schema-et-pg_catalog",
    "href": "slides/SQL_5.html#la-m√©tabase-information_schema-et-pg_catalog",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "La m√©tabase : information_schema et pg_catalog\n",
    "text": "La m√©tabase : information_schema et pg_catalog\n\nOn va s‚Äôaider des tables d‚Äôadministration du SGBD\nChaque usager correspond √† un role et ce r√¥le correspond dans notre cas √† un schema cr√©√© √† partir du r√¥le via l‚Äôinstruction\nCREATE SCHEMA AUTHORIZATION user_name ;\nOn a envie d‚Äô√©crire une requ√™te comme\nSELECT COUNT(*) FROM username.tournaments ; \no√π username est collect√©e √† partir de\nSELECT usename  FROM pg_catalog.pg_user ;"
  },
  {
    "objectID": "slides/SQL_5.html#deux-sch√©mas-pour-ladministration-la-m√©tabase",
    "href": "slides/SQL_5.html#deux-sch√©mas-pour-ladministration-la-m√©tabase",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Deux sch√©mas pour l‚Äôadministration : la m√©tabase\n",
    "text": "Deux sch√©mas pour l‚Äôadministration : la m√©tabase\n\n\ninformation_schema\n\nCe schema contient l‚Äôinformation sur les sch√©mas du cluster/catalogue :\n\nles d√©finitions de tables, de vues, de colonnes, les contraintes, ‚Ä¶\nil est form√© de tables et surtout de (tr√®s nombreuses) vues\nles instructions, CREATE, ALTER,  DROP modifient le contenu de ce sch√©ma (une seule instruction ALTER  TABLE peut engendrer plusieurs mises √† jours dans les tables de information_schema\n\n\n\npg_catalog\n\nCe schema contient lui aussi beaucoup de tables et de vues utiles au fonctionnement du serveur"
  },
  {
    "objectID": "slides/SQL_5.html#exemple-de-vue-de-pg_catalog-pg_user",
    "href": "slides/SQL_5.html#exemple-de-vue-de-pg_catalog-pg_user",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Exemple de vue de pg_catalog : pg_user\n",
    "text": "Exemple de vue de pg_catalog : pg_user\n\n\n\nSch√©ma\n+--------------+---------+-------------+\n| Column       | Type    | Modifiers   |\n|--------------+---------+-------------|\n| usename      | name    |             |\n| usesysid     | oid     |             |\n| usecreatedb  | boolean |             |\n| usesuper     | boolean |             |\n| userepl      | boolean |             |\n| usebypassrls | boolean |             |\n| passwd       | text    |             |\n| valuntil     | abstime |             |\n| useconfig    | text[]  |             |\n+--------------+---------+-------------+\n\npg_user nous renseigne sur :\n\n\n les usagers (usename)\n\n leur statut (usesuper : super-utilisateur ou pas)\n\n leurs privil√®ges (createdb : peut cr√©er une base ou non)"
  },
  {
    "objectID": "slides/SQL_5.html#autre-exemple-dusage-de-la-m√©tabase",
    "href": "slides/SQL_5.html#autre-exemple-dusage-de-la-m√©tabase",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Autre exemple d‚Äôusage de la m√©tabase",
    "text": "Autre exemple d‚Äôusage de la m√©tabase\nSELECT datname, application_name, client_addr, backend_start, state \nFROM pg_catalog.pg_stat_activity psa \nWHERE datname='bd_2023';                                               \n\n+-----------+-------------------------------------------+---------------+-------------------------------+---------+\n| datname   | application_name                          | client_addr   | backend_start                 | state   |\n|-----------+-------------------------------------------+---------------+-------------------------------+---------|\n| bd_2023   | DBeaver 22.2.0 - Main &lt;bd_2023&gt;           | 127.0.0.1     | 2022-10-04 22:48:59.57231+02  | idle    |\n| bd_2023   | DBeaver 22.2.0 - Metadata &lt;bd_2023&gt;       | 127.0.0.1     | 2022-10-04 22:48:59.693656+02 | idle    |\n| bd_2023   | DBeaver 22.2.0 - SQLEditor &lt;Script-4.sql&gt; | 127.0.0.1     | 2022-10-04 22:48:59.958616+02 | idle    |\n| bd_2023   | pgcli                                     | &lt;null&gt;        | 2022-10-04 23:23:19.739258+02 | active  |\n| bd_2023   | pgcli                                     | &lt;null&gt;        | 2022-10-04 23:23:19.770006+02 | idle    |\n+-----------+-------------------------------------------+---------------+-------------------------------+---------+"
  },
  {
    "objectID": "slides/SQL_5.html#tentative",
    "href": "slides/SQL_5.html#tentative",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Tentative",
    "text": "Tentative\nOn engendre dynamiquement une s√©rie de requ√™tes par une instruction de la forme :\nSELECT \n    'SELECT ' || quote_literal(usename) || ', COUNT(*)  FROM ' || usename || '.ville_pays ;'\nFROM pg_catalog.pg_user  ;\n A quoi sert quote_literal() ?"
  },
  {
    "objectID": "slides/SQL_5.html#le-r√©sultat-est-une-table-de-chaines-de-caract√®res",
    "href": "slides/SQL_5.html#le-r√©sultat-est-une-table-de-chaines-de-caract√®res",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Le r√©sultat est une table de chaines de caract√®res",
    "text": "Le r√©sultat est une table de chaines de caract√®res\nrqt                                                      |\n---------------------------------------------------------+\nSELECT 'postgres', COUNT(*)  FROM postgres.ville_pays ;  |\nSELECT 'shinken', COUNT(*)  FROM shinken.ville_pays ;    |\nSELECT 'aalahy99', COUNT(*)  FROM aalahy99.ville_pays ;  |\nSELECT 'etemam', COUNT(*)  FROM etemam.ville_pays ;      |\nSELECT 'durand', COUNT(*)  FROM durand.ville_pays ;      |\n...\n\nTel quel, cela ne fonctionnera pas !\n\nIl faut pouvoir confier ces chaines de caract√®res √† l‚Äô√©valuateur de requ√™tes\nIl faut pouvoir le faire pour chacune des chaines de caract√®res produites par la requ√™te (it√©rer)"
  },
  {
    "objectID": "slides/SQL_5.html#mode-op√©ratoire",
    "href": "slides/SQL_5.html#mode-op√©ratoire",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Mode op√©ratoire",
    "text": "Mode op√©ratoire\nCREATE OR REPLACE FUNCTION taille_ville_pays()\nLANGUAGE plpgsql RETURNS  TEXT AS\n$$\nDECLARE\n  stmt CHARACTER VARYING ;\n  usename CHARACTER VARYING ;\n  result CHARACTER VARYING    := '' ;\n  resp CHARACTER VARYING := '' ;\nBEGIN\nFOR usename IN SELECT u.usename  #&lt;&lt;\n  FROM pg_catalog.pg_user AS u JOIN\n  information_schema.tables t ON\n  (u.usename=t.table_schema and t.table_name ='ville_pays')\nLOOP\n  stmt = 'SELECT CAST(COUNT(*) AS VARCHAR) FROM '|| usename||'.ville_pays #&lt;&lt;\n  result:=result || usename || ': ' ||resp| '; ';   #&lt;&lt; \nEND LOOP ;\nRETURN result ; #&lt;&lt; \nEND;$$ ;"
  },
  {
    "objectID": "slides/SQL_5.html#extension-de-sql",
    "href": "slides/SQL_5.html#extension-de-sql",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Extension de SQL",
    "text": "Extension de SQL\nA travers ces deux exemples, on a vu quelques particularit√©s des extensions possible de SQL en un langage proc√©dural pgplSQL. Le principe est le m√™me dans la plupart des SGBD permettant une telle extension (Oracle, SQL Server, ‚Ä¶). Il repose sur la norme SQL.\nOn a besoin :\n\nd‚Äôinstructions conditionnelles (si ‚Ä¶ alors ‚Ä¶ sinon)\nd‚Äôinstruction it√©ratives (boucles)\nde la capacit√© √† d√©finir des variables\n\nde m√©canismes d‚Äôarticulations entre SQL et son extension proc√©durale :\n\nPouvoir stocker le r√©sultat d‚Äôune requ√™te (avec r√©sultat unique) dans une variable\nPouvoir stocker, les uns apr√®s les autres, les r√©sultats d‚Äôune requ√™tes complexes pour traitement, d√©finir un curseur (CURSOR)"
  },
  {
    "objectID": "slides/SQL_5.html#extension-de-sql-1",
    "href": "slides/SQL_5.html#extension-de-sql-1",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Extension de SQL",
    "text": "Extension de SQL\nOn doit avoir un m√©canisme qui permet conserver les programmes √©crits pour les utiliser lors de sessions futures\nLe langage plpgsql permet :\n\nde d√©finir des fonctions et proc√©dures stock√©es‚Ä¶\nqui vont avoir la m√™me persistence que les tables, vues, etc\nL‚Äôexistence de ces fonctions, leurs codes, etc, seront conserv√©s dans des tables et vue d‚Äôadministration (information_schema.routines)."
  },
  {
    "objectID": "slides/SQL_5.html#exemple",
    "href": "slides/SQL_5.html#exemple",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Exemple",
    "text": "Exemple\nSELECT routine_catalog, routine_schema, routine_name, data_type, security_type\nFROM information_schema.routines    #&lt;&lt; \nWHERE routine_type='FUNCTION' AND specific_schema='sakila'   #&lt;&lt; \n\nroutine_catalog|routine_schema|routine_name              |data_type   |security_type|\n---------------+--------------+--------------------------+------------+-------------+\nbd_2023        |sakila        |_group_concat             |text        |INVOKER      |\nbd_2023        |sakila        |film_in_stock             |integer     |INVOKER      |\nbd_2023        |sakila        |film_not_in_stock         |integer     |INVOKER      |\nbd_2023        |sakila        |get_customer_balance      |numeric     |INVOKER      |\nbd_2023        |sakila        |inventory_held_by_customer|integer     |INVOKER      |\nbd_2023        |sakila        |inventory_in_stock        |boolean     |INVOKER      |\nbd_2023        |sakila        |last_day                  |date        |INVOKER      |\nbd_2023        |sakila        |last_updated              |trigger     |INVOKER      |\nbd_2023        |sakila        |rewards_report            |USER-DEFINED|DEFINER      |"
  },
  {
    "objectID": "slides/SQL_5.html#rewards_report-signature",
    "href": "slides/SQL_5.html#rewards_report-signature",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "\nrewards_report signature",
    "text": "rewards_report signature\nCREATE OR REPLACE FUNCTION \n    sakila.rewards_report(min_monthly_purchases integer, \n                          min_dollar_amount_purchased numeric)\n RETURNS SETOF sakila.customer\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    last_month_start DATE;\n    last_month_end DATE;\nrr RECORD;\ntmpSQL TEXT;\nBEGIN\n...\nEND $$ ;\nD√©termine la liste des bons clients qui beaucoup consomm√© durant le dernier mois √©coul√©"
  },
  {
    "objectID": "slides/SQL_5.html#section-1",
    "href": "slides/SQL_5.html#section-1",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "",
    "text": "la signature comporte une d√©claration de type originale\nla d√©claration des variables locales mentionne un type fourre-tout\n\nSETOF customer\nTable de m√™me sch√©ma que customer (m√™mes colonnes)\nConstruction tr√®s tr√®s utile : SETOF nom_de_table\nRECORD\nUn type g√©n√©rique (fourre-tout) pour d√©signer les types compos√©s (en particulier comme les types d√©finis √† partir des tables)"
  },
  {
    "objectID": "slides/SQL_5.html#rewards_report-corps-i",
    "href": "slides/SQL_5.html#rewards_report-corps-i",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "\nrewards_report corps (I)",
    "text": "rewards_report corps (I)\nBEGIN\n    /* Some sanity checks... */\n    IF min_monthly_purchases = 0 THEN\n        RAISE EXCEPTION 'Minimum monthly purchases parameter must be &gt; 0';\n    END IF;\n    IF min_dollar_amount_purchased = 0.00 THEN\n        RAISE EXCEPTION 'Minimum monthly dollar amount purchased parameter must be &gt; $0.00';  #&lt;&lt; \n    END IF;\n\n    last_month_start := CURRENT_DATE - '3 month'::interval;\n    last_month_start := to_date((extract(YEAR FROM last_month_start) || '-' || extract(MONTH FROM last_month_start) || '-01'),'YYYY-MM-DD');\n    last_month_end := LAST_DAY(last_month_start);\n...\n\n RAISE EXCEPTION 'msg'\ntermine (en erreur) l‚Äôex√©cution de la fonction envoie un message d‚Äôerreur"
  },
  {
    "objectID": "slides/SQL_5.html#rewards_report-corps-ii",
    "href": "slides/SQL_5.html#rewards_report-corps-ii",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "\nrewards_report corps (II)",
    "text": "rewards_report corps (II)\n/*\n    Create a temporary storage area for Customer IDs.\n    */\n    CREATE TEMPORARY TABLE tmpCustomer (customer_id INTEGER NOT NULL PRIMARY KEY);\n\n    /*\n    Find all customers meeting the monthly purchase requirements\n    */\n\n    tmpSQL := 'INSERT INTO tmpCustomer (customer_id)\n        SELECT p.customer_id\n        FROM payment AS p\n        WHERE DATE(p.payment_date) BETWEEN '|| quote_literal(last_month_start) ||' AND '|| quote_literal(last_month_end) || '\n        GROUP BY customer_id\n        HAVING SUM(p.amount) &gt; ' || min_dollar_amount_purchased || \n        'AND COUNT(customer_id) &gt; ' || \n        min_monthly_purchases ;\n\n    EXECUTE tmpSQL;  #&lt;&lt;"
  },
  {
    "objectID": "slides/SQL_5.html#create-temporary-table-...",
    "href": "slides/SQL_5.html#create-temporary-table-...",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "\n CREATE TEMPORARY TABLE ...\n",
    "text": "CREATE TEMPORARY TABLE ...\n\nCr√©e une table (tr√®s simple ici) qui sera d√©truite avant la fin de l‚Äôex√©cution de la fonction.\nSi l‚Äôex√©cution de la fonction devait √™tre interrompue, cette table ne survivrait pas √† la session qui a invoqu√© la fonction"
  },
  {
    "objectID": "slides/SQL_5.html#pourquoi-utiliser-une-requ√™te-cr√©√©e-dynamiquement",
    "href": "slides/SQL_5.html#pourquoi-utiliser-une-requ√™te-cr√©√©e-dynamiquement",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "Pourquoi utiliser une requ√™te cr√©√©e dynamiquement ?",
    "text": "Pourquoi utiliser une requ√™te cr√©√©e dynamiquement ?\n\nEst ce une n√©cessit√© ici ?\nSi non, quel est l‚Äôint√©r√™t ?"
  },
  {
    "objectID": "slides/SQL_5.html#rewards_report-corps-iii",
    "href": "slides/SQL_5.html#rewards_report-corps-iii",
    "title": "BD : Fonctions et extension PlpgSQL de SQL",
    "section": "\nrewards_report corps III",
    "text": "rewards_report corps III\n/*\n    Output ALL customer information of matching rewardees.\n    Customize output as needed.\n    */\n    FOR rr IN EXECUTE 'SELECT c.* FROM tmpCustomer AS t INNER JOIN customer AS c ON t.customer_id = c.customer_id' LOOP\n        RETURN NEXT rr;   #&lt;&lt;\n    END LOOP;\n\n    /* Clean up */\n    tmpSQL := 'DROP TABLE tmpCustomer';\n    EXECUTE tmpSQL;\n\nRETURN;   #&lt;&lt;\nEND\n$function$ ;"
  },
  {
    "objectID": "slides/Modelisation_2.html#objectifs-et-origine",
    "href": "slides/Modelisation_2.html#objectifs-et-origine",
    "title": "Mod√©lisation II :",
    "section": "Objectifs et origine",
    "text": "Objectifs et origine"
  },
  {
    "objectID": "slides/Modelisation_2.html#diagrammes",
    "href": "slides/Modelisation_2.html#diagrammes",
    "title": "Mod√©lisation II :",
    "section": "Diagrammes",
    "text": "Diagrammes"
  },
  {
    "objectID": "slides/Modelisation_2.html#liens-non-identifiants",
    "href": "slides/Modelisation_2.html#liens-non-identifiants",
    "title": "Mod√©lisation II :",
    "section": "Liens non-identifiants",
    "text": "Liens non-identifiants"
  },
  {
    "objectID": "slides/Modelisation_2.html#liens-identifiants",
    "href": "slides/Modelisation_2.html#liens-identifiants",
    "title": "Mod√©lisation II :",
    "section": "Liens identifiants",
    "text": "Liens identifiants"
  },
  {
    "objectID": "slides/Modelisation_2.html#transformation-√†-laide-dune-entit√©-faible",
    "href": "slides/Modelisation_2.html#transformation-√†-laide-dune-entit√©-faible",
    "title": "Mod√©lisation II :",
    "section": "Transformation √† l‚Äôaide d‚Äôune entit√© faible",
    "text": "Transformation √† l‚Äôaide d‚Äôune entit√© faible"
  },
  {
    "objectID": "slides/Modelisation_2.html#table-interm√©diaire",
    "href": "slides/Modelisation_2.html#table-interm√©diaire",
    "title": "Mod√©lisation II :",
    "section": "Table interm√©diaire",
    "text": "Table interm√©diaire"
  },
  {
    "objectID": "slides/LDD_0.html#d√©finition-de-donn√©es",
    "href": "slides/LDD_0.html#d√©finition-de-donn√©es",
    "title": "BD II: SQL LDD",
    "section": "D√©finition de donn√©es",
    "text": "D√©finition de donn√©es\nSQL est un monde √† part enti√®re\nOn peut :\n\nInterroger des donn√©es par des requ√™tes (d√©j√† vu en partie)\n\nAdministrer les bases de donn√©es :\n\nCr√©er celles-ci : d√©finition des tables (sch√©mas, etc), contraintes..\nCr√©er de nouvelles donn√©es, en ins√©rer, supprimer, mettre √† jour, etc\nCr√©er et g√©rer les utilisateurs, leurs droits sur les objets de la base,\n‚Ä¶\n\n\n\n\nDans ce cours : cr√©ation des tables (version simplifi√©e) et des donn√©es"
  },
  {
    "objectID": "slides/LDD_0.html#cr√©ation-de-tables-1",
    "href": "slides/LDD_0.html#cr√©ation-de-tables-1",
    "title": "BD II: SQL LDD",
    "section": "Cr√©ation de tables",
    "text": "Cr√©ation de tables\n\nInstruction : CREATE TABLE ...\n\n\nPermet de d√©finir :\n\n\nLes noms et les domaines (type) des attributs ainsi que des contraintes d‚Äôint√©grit√© comme :\n\nContraintes de cl√©s primaires (PRIMARY KEY)\nContraintes r√©f√©rentielles (cl√©s √©trang√®res FOREIGN KEY, par exemple)\n\n\nDes contraintes assez g√©n√©rales (de contr√¥le des donn√©es)\nDes index (pour la recherche et l‚Äôex√©cution efficaces)"
  },
  {
    "objectID": "slides/LDD_0.html#cr√©ation-de-tables-noms-et-domaines-dattributs",
    "href": "slides/LDD_0.html#cr√©ation-de-tables-noms-et-domaines-dattributs",
    "title": "BD II: SQL LDD",
    "section": "Cr√©ation de tables : noms et domaines d‚Äôattributs",
    "text": "Cr√©ation de tables : noms et domaines d‚Äôattributs\nChaque relation est d√©finie par un nom de relation et une liste d‚Äôattributs\nCREATE TABLE &lt;nom_relation&gt; (\n  &lt;element de relation&gt;\n  &lt;,element de relation&gt;*\n  &lt;,contrainte de relation&gt;* );\n\nChaque attribut est d√©fini par un nom d‚Äôattribut et un type de donn√©es\n&lt;element de relation&gt; ::= &lt;nom_attrib&gt;&lt;type_donnees&gt;[&lt;contrainte_attrib&gt;*]\n\n\n\n\n\n\n\n\nExemples de types\n\n\n&lt;type_donnees&gt; ::=  VARCHAR &lt;longueur&gt;| INT | REAL | DATE"
  },
  {
    "objectID": "slides/LDD_0.html#exemple",
    "href": "slides/LDD_0.html#exemple",
    "title": "BD II: SQL LDD",
    "section": "Exemple",
    "text": "Exemple\nSch√©ma:\nfournisseur(nomf, villef),\npiece(nomp, prix, couleur),\nlivraison(numliv, nomf, nomp, dateliv, quantite)\nCREATE TABLE fournisseur(\n    nomf VARCHAR(20),\n    villef VARCHAR(20)\n);\n\nCREATE TABLE piece(\n    nomp VARCHAR(20),\n    prix REAL,\n    couleur VARCHAR(15)\n);"
  },
  {
    "objectID": "slides/LDD_0.html#exemple-avec-valeurs-par-d√©faut",
    "href": "slides/LDD_0.html#exemple-avec-valeurs-par-d√©faut",
    "title": "BD II: SQL LDD",
    "section": "Exemple avec valeurs par d√©faut",
    "text": "Exemple avec valeurs par d√©faut\n\nCREATE TABLE livraison(\n    numLiv INT,\n    nomf VARCHAR(20),\n    nomp VARCHAR(20),\n    dateliv DATE DEFAULT NOW(),\n    quantite INT DEFAULT 1\n);\n\n\n\n\n\n\n\n\nValeurs par d√©faut\n\n\n\nPour dateliv, c‚Äôest la date courante lors de l‚Äôinsertion de la ligne dans la table\nPour quantite, c‚Äôest une constante"
  },
  {
    "objectID": "slides/LDD_0.html#exemple-sch√©ma-world",
    "href": "slides/LDD_0.html#exemple-sch√©ma-world",
    "title": "BD II: SQL LDD",
    "section": "Exemple : sch√©ma world\n",
    "text": "Exemple : sch√©ma world\n\n\nCREATE TABLE world.city (\n    id int4 NOT NULL,\n    name_city text NOT NULL,\n    countrycode bpchar(3) NOT NULL,\n    district text NOT NULL,\n    population_city int4 NOT NULL,\n    CONSTRAINT city_pkey\n        PRIMARY KEY (id)\n);\n\n\nCREATE TABLE world.code_continent (\n    continent name NOT NULL,\n    codecontinent int4 NOT NULL,\n    CONSTRAINT code_continent_pk\n        PRIMARY KEY (codecontinent)\n);"
  },
  {
    "objectID": "slides/LDD_0.html#exemple-sch√©ma-world-avec-cl√©-primaire-compos√©e",
    "href": "slides/LDD_0.html#exemple-sch√©ma-world-avec-cl√©-primaire-compos√©e",
    "title": "BD II: SQL LDD",
    "section": "Exemple : sch√©ma world avec cl√© primaire compos√©e",
    "text": "Exemple : sch√©ma world avec cl√© primaire compos√©e\n\nCREATE TABLE world.countrylanguage (\n    countrycode bpchar(3) NOT NULL,\n    \"language\" text NOT NULL,\n    isofficial bool NOT NULL,\n    percentage float4 NOT NULL,\n    CONSTRAINT countrylanguage_pkey\n        PRIMARY KEY (countrycode, language)\n);\n\n\n\n\n\n\n\n\nAttention\n\n\nUne cl√© peut √™tre compos√©e de plusieurs attributs"
  },
  {
    "objectID": "slides/LDD_0.html#exemple-sch√©ma-world-suite",
    "href": "slides/LDD_0.html#exemple-sch√©ma-world-suite",
    "title": "BD II: SQL LDD",
    "section": "Exemple: sch√©ma world (suite)",
    "text": "Exemple: sch√©ma world (suite)\n\nCREATE TABLE world.country (\n    countrycode bpchar(3) NOT NULL,\n    name_country text NOT NULL,\n    continent text NOT NULL,\n    region text NOT NULL,\n    surfacearea float4 NOT NULL,\n    indepyear int2 NULL,\n    population_country int4 NOT NULL,\n    lifeexpectancy float4 NULL,\n    gnp numeric(10, 2) NULL,\n    gnpold numeric(10, 2) NULL,\n    localname text NOT NULL,\n    governmentform text NOT NULL,\n    headofstate text NULL,\n    capital int4 NULL,\n    code2 bpchar(2) NOT NULL,\n    CONSTRAINT country_continent_check CHECK (\n        ((continent = 'Asia'::text) OR (\n            continent = 'Europe'::text) OR\n            (continent = 'North America'::text) OR\n            (continent = 'Africa'::text) OR\n            (continent = 'Oceania'::text) OR\n            (continent = 'Antarctica'::text) OR\n            (continent = 'South America'::text))),\n    CONSTRAINT country_pkey PRIMARY KEY (countrycode)\n);"
  },
  {
    "objectID": "slides/LDD_0.html#suppression-dune-table",
    "href": "slides/LDD_0.html#suppression-dune-table",
    "title": "BD II: SQL LDD",
    "section": "Suppression d‚Äôune table",
    "text": "Suppression d‚Äôune table\nDROP TABLE fournisseur;\nDROP TABLE piece;\nDROP TABLE livraison;\n\n\n\n\n\n\nSuppression n‚Äôest pas vidange\n\n\nSupprimer une table, c‚Äôest supprimer son contenu (vidange) mais aussi son sch√©ma"
  },
  {
    "objectID": "slides/LDD_0.html#contenu-des-relations",
    "href": "slides/LDD_0.html#contenu-des-relations",
    "title": "BD II: SQL LDD",
    "section": "Contenu des relations",
    "text": "Contenu des relations\nOn peut g√©rer le contenu des tables directement dans le langage SQL.\nOn peut donc :\n\n\nAjouter des tuples √† une table : INSERT INTO ...\nMettre √† jour des tuples d‚Äôune relation : UPDATE ...\nSupprimer des tuples : DELETE FROM ..."
  },
  {
    "objectID": "slides/LDD_0.html#insertion-de-tuples",
    "href": "slides/LDD_0.html#insertion-de-tuples",
    "title": "BD II: SQL LDD",
    "section": "Insertion de tuples",
    "text": "Insertion de tuples\n\nINSERT INTO &lt;nom_relation&gt;\n    [(nom_attrib [, nom_attrib]*)]\n    VALUES (valeur [, valeur]*);\n\nExemple\n\nINSERT INTO piece VALUES('x21', 1.51, 'rouge');\n\nINSERT INTO piece (nomp,couleur) VALUES('x22', 'vert');\n\n+--------+--------+-----------+\n| nomp   | prix   | couleur   |\n|--------+--------+-----------|\n| x21    | 1.51   | rouge     |\n| x22    | &lt;null&gt; | vert      |\n+--------+--------+-----------+\n\nAttention\n\nLes valeurs doivent √™tre fournies dans l‚Äôordre de d√©claration des attributs\nLes valeurs non sp√©cifi√©es sont affect√©es √† NULL"
  },
  {
    "objectID": "slides/LDD_0.html#insertion-exemple",
    "href": "slides/LDD_0.html#insertion-exemple",
    "title": "BD II: SQL LDD",
    "section": "Insertion, exemple",
    "text": "Insertion, exemple\nINSERT INTO world.country\n(countrycode, name_country, continent,\n region, surfacearea, indepyear, population_country,\n lifeexpectancy, gnp, gnpold,\n localname, governmentform, headofstate, capital, code2)\nVALUES(\n    'SYL', 'Syldavia', 'Europe',\n    'Eastern Europe', 200000, 1918, 21345717,\n    81.2, 25213, 24878,\n    'Syldavie', 'Constitutional Monarchy', 'Ottokar II', 0, 'SY'\n);"
  },
  {
    "objectID": "slides/LDD_0.html#section",
    "href": "slides/LDD_0.html#section",
    "title": "BD II: SQL LDD",
    "section": "",
    "text": "SELECT *\nFROM (\n  VALUES\n    ('robe', 'logged in', '2011-01-10 10:15 AM EST'::timestamptz),\n    ('lhsu', 'logged out', '2011-01-11 10:20 AM EST'::timestamptz)\n) AS l (user_name, description, log_ts);\n\n\n\n\n\n\n\nNote\n\n\nQuand on utilise VALUES pour d√©finir une table virtuelle, il faut sp√©cifier le nom des colonnes.\nPar d√©faut, les types des colonnes sont inf√©r√©s. Si l‚Äôinf√©rence de type n‚Äôest pas possible, il faut effectuer explicitement des conversions de type comme ici avec ::timestamptz.\n\n\n\n\n\nLa derni√®re partie du constructeur multiligne, qui commence avec VALUES est souvent appel√©e la liste de valeurs.\n\nUne liste de valeurs peut √™tre d√©finie sans r√©f√©rene √† une table existante et d√©finir √† la vol√©e une nouvelle table virtuelle/√©ph√©m√®re."
  },
  {
    "objectID": "slides/LDD_0.html#exemple-insertion-de-tuples",
    "href": "slides/LDD_0.html#exemple-insertion-de-tuples",
    "title": "BD II: SQL LDD",
    "section": "Exemple : Insertion de tuples",
    "text": "Exemple : Insertion de tuples\nINSERT INTO livraison\n    VALUES\n    (1, 'fournisseur1', 'x21', '2019-07-13', 2);\n\n-- Avec des colonnes pas renseign√©es\n\nINSERT INTO livraison\n   (numliv, dateliv, quantite)\n    VALUES\n   (2, '2018-07-29', 10);\n\n\n+----------+--------------+--------+------------+------------+\n| numliv   | nomf         | nomp   | dateliv    | quantite   |\n|----------+--------------+--------+------------+------------|\n| 1        | fournisseur1 | x21    | 2019-07-13 | 2          |\n| 2        | &lt;null&gt;       | &lt;null&gt; | 2018-07-29 | 10         |\n+----------+--------------+--------+------------+------------+\n\n\n\n\n\n\nRappel\n\n\n\nLes valeurs doivent √™tre fournies dans l‚Äôordre de d√©claration des attributs\nLes valeurs non sp√©cifi√©es sont affect√©es √† NULL."
  },
  {
    "objectID": "slides/LDD_0.html#insertion-de-tuples-par-requ√™te",
    "href": "slides/LDD_0.html#insertion-de-tuples-par-requ√™te",
    "title": "BD II: SQL LDD",
    "section": "Insertion de tuples par requ√™te",
    "text": "Insertion de tuples par requ√™te\n\nOn peut faire une insertion par le biais d‚Äôune requ√™te\nLa clause VALUES est remplac√©e par une requ√™te\nLes r√©sultats de la requ√™te sont ins√©r√©s comme valeurs dans la table\n\n\n\n\n\n\n\n\nAlimentation d‚Äôune nouvelle table √† l‚Äôaide des donn√©es d‚Äôune autre\n\n\nINSERT INTO FournisseursParisiens (\n  SELECT *\n  FROM Fournisseur\n  WHERE VilleF='Paris'\n);"
  },
  {
    "objectID": "slides/LDD_0.html#mise-√†-jour",
    "href": "slides/LDD_0.html#mise-√†-jour",
    "title": "BD II: SQL LDD",
    "section": "Mise √† jour",
    "text": "Mise √† jour\n\n\nOn peut mettre √† jour des tuples existants par le biais d‚Äôune requ√™te\n\nSoit tous les tuples de la table,\nSoit l‚Äôensemble des tuples v√©rifiants une condition donn√©e\n\n\n\n\nUPDATE nom_relation\nSET nom_attribut = &lt;expression de valeur&gt;\n[ , nom_attribut = &lt;expression de valeur&gt; ]*\n[ WHERE &lt;condition de recherche&gt; ];"
  },
  {
    "objectID": "slides/LDD_0.html#mise-√†-jour-de-tuples",
    "href": "slides/LDD_0.html#mise-√†-jour-de-tuples",
    "title": "BD II: SQL LDD",
    "section": "Mise √† jour de tuples",
    "text": "Mise √† jour de tuples\nLe WHERE permet de s√©lectionner les tuples √† mettre √† jour\nUPDATE Fournisseur\n    SET VilleF='St.Petersburg'\n    WHERE VilleF='Leningrad';\nOn peut aussi effectuer des op√©rations sur les tuples √† mettre √† jour.\n\n\n\n\n\n\nLa clause &lt;expression de valeur&gt; peut √™tre :\n\n\n\nNULL\nUne constante (explicite ou via une requ√™te)\nUne expression arithm√©tique sur les attributs de la table √† modifier"
  },
  {
    "objectID": "slides/LDD_0.html#mise-√†-jour-de-tuples-exemple",
    "href": "slides/LDD_0.html#mise-√†-jour-de-tuples-exemple",
    "title": "BD II: SQL LDD",
    "section": "Mise √† jour de tuples (exemple)",
    "text": "Mise √† jour de tuples (exemple)\nAugmentation du prix d‚Äôune pi√®ce\nUPDATE Piece\nSET Prix = Prix * 1.05\n    WHERE NomP = 'x21';"
  },
  {
    "objectID": "slides/LDD_0.html#mise-√†-jour-par-requ√™te",
    "href": "slides/LDD_0.html#mise-√†-jour-par-requ√™te",
    "title": "BD II: SQL LDD",
    "section": "Mise √† jour par requ√™te",
    "text": "Mise √† jour par requ√™te\nUPDATE Piece\nSET Prix = (\n    SELECT Prix\n    FROM Piece\n    WHERE NomP = 'x21'\n)\nWHERE Prix &lt;= 1000;"
  },
  {
    "objectID": "slides/LDD_0.html#suppression-de-tuples-syntaxe",
    "href": "slides/LDD_0.html#suppression-de-tuples-syntaxe",
    "title": "BD II: SQL LDD",
    "section": "Suppression de tuples : syntaxe",
    "text": "Suppression de tuples : syntaxe\nDELETE FROM &lt;nom_relation&gt;\n[WHERE &lt;condition de recherche&gt;];\n\nExemple\nDELETE FROM Fournisseur\nWHERE NomF = 'FastDelivery';\nOn supprime dans Fournisseur les tuples correspondant au fournisseur nomm√© 'FastDelivery'"
  },
  {
    "objectID": "slides/LDD_0.html#suppression-de-tuples-avec-requ√™te-imbriqu√©e",
    "href": "slides/LDD_0.html#suppression-de-tuples-avec-requ√™te-imbriqu√©e",
    "title": "BD II: SQL LDD",
    "section": "Suppression de tuples avec requ√™te imbriqu√©e",
    "text": "Suppression de tuples avec requ√™te imbriqu√©e\nDELETE FROM Livraison\nWHERE NomP IN (\n    SELECT NomP\n    FROM Piece\n    WHERE Couleur='Rouge'\n);"
  },
  {
    "objectID": "slides/LDD_0.html#delete-from-table-using-t-where-...",
    "href": "slides/LDD_0.html#delete-from-table-using-t-where-...",
    "title": "BD II: SQL LDD",
    "section": "DELETE FROM <table> USING <t> WHERE ...",
    "text": "DELETE FROM &lt;table&gt; USING &lt;t&gt; WHERE ...\n\n\nSouvent, lorsque vous supprimez des donn√©es d‚Äôune table, vous souhaitez supprimer ces donn√©es en fonction de leur pr√©sence dans un autre ensemble de donn√©es.\nSp√©cifiez cet ensemble suppl√©mentaire avec le pr√©dicat USING"
  },
  {
    "objectID": "slides/LDD_0.html#section-1",
    "href": "slides/LDD_0.html#section-1",
    "title": "BD II: SQL LDD",
    "section": "",
    "text": "CREATE TABLE chaprot.city () \n  INHERITS (world.city) ;\n\nCREATE TABLE chaprot.country () \n  INHERITS (world.country) ;\n\nINSERT INTO chaprot.country (\n    SELECT * \n    FROM world.country\n    WHERE continent = 'Europe' \n);\n\nINSERT INTO chaprot.city (\n    SELECT ci.*  \n    FROM world.city ci NATURAL JOIN \n      world.country co\n    WHERE co.continent = 'Europe'\n) ;"
  },
  {
    "objectID": "slides/LDD_0.html#delete-from-table-using-t-where-...-1",
    "href": "slides/LDD_0.html#delete-from-table-using-t-where-...-1",
    "title": "BD II: SQL LDD",
    "section": "DELETE FROM <table> USING <t> WHERE ...",
    "text": "DELETE FROM &lt;table&gt; USING &lt;t&gt; WHERE ...\n\n\n\n\n\n\nAstuce\n\n\nSouvent, lorsque vous supprimez des donn√©es d‚Äôune table, vous souhaitez supprimer ces donn√©es en fonction de leur pr√©sence dans un autre ensemble de donn√©es. Sp√©cifiez cet ensemble suppl√©mentaire avec le pr√©dicat USING\n\n\n\n\nDELETE FROM chaprot.city \nUSING chaprot.country AS co\nWHERE city.countrycode = co.countrycode AND \n  co.region= 'Eastern Europe' AND \n  co.indepyear = 1991 ;"
  },
  {
    "objectID": "solutions/td6.html",
    "href": "solutions/td6.html",
    "title": "TD 6 : Contraintes",
    "section": "",
    "text": "Avec solutions"
  },
  {
    "objectID": "solutions/td6.html#contraintes-check.",
    "href": "solutions/td6.html#contraintes-check.",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes CHECK.",
    "text": "Contraintes CHECK.\nCette contrainte permet de v√©rifier que les colonnes d‚Äôune ligne donn√©e v√©rifient une certaine condition. Par exemple, on pourrait vouloir v√©rifier que la valeur de la colonne percentage de la table countrylanguage est inf√©rieure √† 100 ou que la valeur de la colonne return_date de la table rental est soit NULL ou sup√©rieure √† rental_date. Ces contraintes se d√©finissent lors de la cr√©ation de la table. Par exemple :\nCREATE TABLE solde(\n    produit TEXT,\n    reduc_pourcentage INT,\n    CHECK (reduc_pourcentage&lt;=100 AND reduc_pourcentage%10=0)\n);\nOn peut ajouter une contrainte CHECK √† une table qui existe d√©j√†. Par exemple :\nALTER TABLE solde ADD \n    CHECK (reduc_pourcentage &gt;=0);\nou bien en nommant la contrainte :\nALTER TABLE solde \n    ADD CONSTRAINT reduc_positive \n    CHECK (reduc_pourcentage &gt;=0);"
  },
  {
    "objectID": "solutions/td6.html#contraintes-default-not-null-unique",
    "href": "solutions/td6.html#contraintes-default-not-null-unique",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes DEFAULT / NOT NULL / UNIQUE",
    "text": "Contraintes DEFAULT / NOT NULL / UNIQUE\nCes contraintes s‚Äôappliquent √† une colonne en particulier. La contrainte DEFAULT sp√©cifie une valeur par d√©faut pour remplir une colonne lorsque sa valeur n‚Äôest pas sp√©cifi√©e, NOT NULL que la valeur de la colonne ne peut pas √™tre NULL et UNIQUE que deux lignes diff√©rentes de la table ne peuvent pas avoir la m√™me valeur sur les colonnes indiqu√©es. Par exemple:\nCREATE TABLE membre(\n    nom VARCHAR(50) NOT NULL,\n    prenom VARCHAR(50) NOT NULL,\n    date_inscription DATE DEFAULT NOW(),\n    UNIQUE(nom, prenom)  \n);"
  },
  {
    "objectID": "solutions/td6.html#contraintes-primaryforeign-key.",
    "href": "solutions/td6.html#contraintes-primaryforeign-key.",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes PRIMARY/FOREIGN KEY.",
    "text": "Contraintes PRIMARY/FOREIGN KEY.\nFormellement, la contrainte PRIMARY KEY est √©quivalente √† UNIQUE et NOT NULL. C‚Äôest un moyen d‚Äôidentifier de fa√ßon unique chaque ligne. Chaque table est cens√©e avoir une cl√© primaire. La contrainte FOREIGN KEY sp√©cifie que la valeur d‚Äôune (ou de plusieurs) colonne contient des valeurs pr√©sentes dans une autre table. Par exemple, la colonne capital de country contient une valeur qui doit appara√Ætre dans la colonne id de city. Par exemple:\nCREATE TABLE membre(\n    nom VARCHAR(50) NOT NULL, \n    prenom VARCHAR(50) NOT NULL, \n    id INT, \nPRIMARY KEY (id)\n);\n\nCREATE TABLE amis(\n    id1 INT, \n    id2 INT,\n  FOREIGN KEY (id1) REFERENCES membre (id)\n);\nOn peut aussi ajouter une seconde clef √©trang√®re comme ceci :\nALTER TABLE amis ADD \n    FOREIGN KEY (id2) REFERENCES membre;"
  },
  {
    "objectID": "solutions/td6.html#contraintes-exclude.",
    "href": "solutions/td6.html#contraintes-exclude.",
    "title": "TD 6 : Contraintes",
    "section": "Contraintes EXCLUDE.",
    "text": "Contraintes EXCLUDE.\nLes contraintes NOT NULL, DEFAULT, KEY, CHECK portent uniquement sur une ligne tandis que la contrainte UNIQUE permet uniquement de tester des √©galit√©s entre lignes. On veut parfois v√©rifier une condition plus riche sur deux lignes. Par exemple, si notre table contient des r√©servations d‚Äôune salle entre start_date et end_date, on ne veut pas que deux r√©servations se chevauchent. On √©crira:\nCREATE TABLE reservation(\n    start_date DATE, \n    end_date DATE,\n\n    EXCLUDE USING gist (\n        daterange(start_date, end_date) WITH &&)\n);"
  },
  {
    "objectID": "solutions/td-recap-sql.html",
    "href": "solutions/td-recap-sql.html",
    "title": "TD R√©capitulatif SQL",
    "section": "",
    "text": "Avec solutions"
  },
  {
    "objectID": "solutions/td-recap-sql.html#sch√©ma-world",
    "href": "solutions/td-recap-sql.html#sch√©ma-world",
    "title": "TD R√©capitulatif SQL",
    "section": "Sch√©ma world",
    "text": "Sch√©ma world\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est le pays qui a le plus de villes recens√©es dans la table world.city? Combien de villes ? (363 villes)\n\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH country_city AS\n    (SELECT name_country , COUNT(name_city) nbrcity\n    FROM world.country NATURAL JOIN world.city\n    GROUP BY name_country)\n\nSELECT name_country, nbrcity\nFROM country_city\nWHERE nbrcity = (SELECT MAX(nbrcity) \n                 FROM country_city) ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les pays qui ont \\(3\\) ou plus langues officielles ? (8 lignes)\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT name_country\nFROM world.country NATURAL JOIN world.countrylanguage\nWHERE isofficial\nGROUP BY name_country HAVING COUNT(*) &gt; 2 ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les pays dont plus de \\(1.000.000\\) d‚Äôhabitants parlent une langue non officielle ? (72 lignes)\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT name_country\nFROM world.country NATURAL JOIN world.countrylanguage\nWHERE (NOT isofficial) AND \n      (percentage / 100) * population_country &gt;= 1000000 ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuelles sont les langues qui sont officielles dans tous les continents o√π au moins une langue est parl√©e ? (1 ligne)\n\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS\n    (SELECT count(DISTINCT continent)\n    FROM world.country NATURAL JOIN world.countrylanguage)\nSELECT language, count(DISTINCT continent) as nbcon\nFROM world.country NATURAL JOIN world.countrylanguage WHERE isofficial\nGROUP BY language\n    HAVING count(DISTINCT continent) in (SELECT * FROM R)\nORDER BY nbcon DESC ;\n\n\nou\n\n\n\n\n\n\nSolution\n\n\n\nWITH continent_language AS\n    (SELECT DISTINCT language , continent\n    FROM country NATURAL JOIN countrylanguage\n    WHERE isofficial),\nall_continent_language AS\n    (SELECT DISTINCT l.language , c.continent\n    FROM countrylanguage l , continent_language c),\nnot_continent_language AS\n    ((SELECT * FROM all_continent_language)\n    EXCEPT\n    (SELECT * FROM continent_language))\nSELECT DISTINCT language\nFROM countrylanguage\nWHERE language NOT IN (SELECT language FROM not_continent_language) ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les pays pour lesquels une langue non officielle est parl√©e par strictement plus de monde (dans le pays) qu‚Äôil n‚Äôy a d‚Äôhabitants dans la capitale ? (118 lignes)\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT name_country\nFROM (country c JOIN city ON id = capital)\n    JOIN countrylanguage l ON c.countrycode = l.countrycode\nWHERE NOT isofficial\nAND percentage / 100 * population_country &gt; population_city ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels est le nombre de villes par region ?\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT region , COUNT(id) AS nbr_city\nFROM country NATURAL JOIN city\nGROUP BY region ;"
  },
  {
    "objectID": "solutions/td-recap-sql.html#sch√©ma-pagila",
    "href": "solutions/td-recap-sql.html#sch√©ma-pagila",
    "title": "TD R√©capitulatif SQL",
    "section": "Sch√©ma pagila",
    "text": "Sch√©ma pagila\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est l‚Äôacteur (actor_id) pr√©sent sur le plus de DVD (inventory_id) ?\n\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH actor_dvd AS\n    (SELECT actor_id , count(inventory_id) nbrdvd\n    FROM actor NATURAL JOIN film_actor NATURAL JOIN inventory\n    GROUP BY actor_id)\nSELECT first_name , last_name\nFROM actor NATURAL JOIN actor_dvd\nWHERE nbrdvd = (SELECT MAX(nbrdvd) FROM actor_dvd) ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est le prix moyen d‚Äôune location de DVD ?\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT AVG(amount) \nFROM payment ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuel est le DVD qui a rapport√© le plus d‚Äôargent ? Le film (film_id)?\n\n\n\n\n\n\n\n\nSolution\n\n\n\nPour le DVD:\nWITH inventory_amount AS\n    (SELECT inventory_id , SUM(amount) AS dollar\n    FROM inventory NATURAL JOIN rental NATURAL JOIN payment\n    GROUP BY inventory_id)\nSELECT inventory_id , dollar\nFROM  inventory_amount\nWHERE dollar &gt;= ALL (SELECT dollar FROM inventory_amount) ;\n\n\n\n\n\n\n\n\nSolution\n\n\n\nEt pour le film:\nWITH film_amount AS\n    (SELECT film_id , SUM(amount) AS dollar\n    FROM inventory NATURAL JOIN rental NATURAL JOIN payment\n    GROUP BY film_id)\nSELECT film_id , dollar\nFROM  inventory_amount\nWHERE dollar &gt;= ALL (SELECT dollar FROM film_amount) ;\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nQuels sont les employ√©s (staff_id) qui travaillent dans une autre ville que celle dans laquelle ils vivent ? (4 lignes)\n\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH staff_maison AS\n    (SELECT staff_id , city_id\n    FROM (staff NATURAL JOIN address)),\nstaff_travail AS\n    (SELECT staff_id , city_id\n    FROM (staff p JOIN store s ON p.store_id = s.store_id) , address a\n    WHERE a.address_id = s.address_id)\nSELECT staff_id FROM staff_travail NATURAL JOIN staff_maison ;"
  },
  {
    "objectID": "solutions/td1.html",
    "href": "solutions/td1.html",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "",
    "text": "Avec solutions"
  },
  {
    "objectID": "solutions/td1.html#sch√©mas",
    "href": "solutions/td1.html#sch√©mas",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Sch√©mas",
    "text": "Sch√©mas\nLes sch√©mas sont une abstraction sp√©cifique √† PostgreSQL. Les sch√©mas permettent de faire cohabiter sur une m√™me base de donn√©es (ou catalogue dans le jargon PostgreSQL) plusieurs ensembles d‚Äôinformations de nature diff√©rentes. On peut indiquer √† pgcli, psql ou un autre client (dbeaver ou autre) quels sch√©mas on veut utiliser par d√©faut.\nDans ce TP, nous allons nous concentrer sur le sch√©ma world qui contient des informations concernant des villes et des pays/territoires du monde entier. Au cours de ce semestre, nous serons amen√©s √† utiliser d‚Äôautres sch√©mas : pagila qui contient des informations concernant des films, ‚Ä¶\nPour lister et modifier les sch√©mas de votre environnement de travail:\nbd_2023-24&gt; SHOW search_path ;                  -- lister\nbd_2023-24&gt; SET search_path TO world, public ;  -- modifier\nbd_2023-24&gt; SHOW search_path ;       -- visualiser \nLister les sch√©mas du catalogue bd_2023-24.\n\\dn\nPour lister les tables des schemas inscrits sur votre search_path.\nbd_2023-24&gt; \\d\n+----------+---------------------+--------+----------+\n| Schema   | Name                | Type   | Owner    |\n|----------+---------------------+--------+----------|\n| world    | city                | table  | postgres |\n| world    | country             | table  | postgres |\n| world    | countrylanguage     | table  | postgres |\n+----------+---------------------+--------+----------+\nVue d‚Äôensemble du sch√©ma world"
  },
  {
    "objectID": "solutions/td1.html#suggestion",
    "href": "solutions/td1.html#suggestion",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Suggestion",
    "text": "Suggestion\nSi vous travaillez avec pgcli/psql, utilisez en local votre √©diteur pr√©f√©r√© (emacs, vi, sublime text, visual studio code, ‚Ä¶), transf√©rez votre script sql gr√¢ce √† scp, et chargez le script dans votre session psql/pgcli √† l‚Äôaide de \\\\i."
  },
  {
    "objectID": "solutions/td1.html#tables",
    "href": "solutions/td1.html#tables",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Tables",
    "text": "Tables\nPour voir la d√©finition (c‚Äôest-√†-dire les diff√©rentes colonnes) d‚Äôune table:\nbd_2023-24&gt; \\d world.country\n\n+--------------------+---------------+-------------+\n| Column             | Type          | Modifiers   |\n|--------------------+---------------+-------------|\n| countrycode        | character(3)  |  not null   |\n| name_country       | text          |  not null   |\n| continent          | text          |  not null   |\n| region             | text          |  not null   |\n| surfacearea        | real          |  not null   |\n| indepyear          | smallint      |             |\n| population_country | integer       |  not null   |\n| lifeexpectancy     | real          |             |\n| gnp                | numeric(10,2) |             |\n| gnpold             | numeric(10,2) |             |\n| localname          | text          |  not null   |\n| governmentform     | text          |  not null   |\n| headofstate        | text          |             |\n| capital            | integer       |             |\n| code2              | character(2)  |  not null   |\n+--------------------+---------------+-------------+"
  },
  {
    "objectID": "solutions/td1.html#explorer-les-possibilit√©s-de-psql-ou-de-pgcli",
    "href": "solutions/td1.html#explorer-les-possibilit√©s-de-psql-ou-de-pgcli",
    "title": "TD 1: Alg√®bre relationnelle",
    "section": "Explorer les possibilit√©s de psql ou de pgcli",
    "text": "Explorer les possibilit√©s de psql ou de pgcli\nbd_2023-24&gt; \\?\nDans la deuxi√®me partie du TP, on s‚Äôint√©resse aux requ√™tes, c‚Äôest-√†-dire, les moyens d‚Äôextraire une information pertinente d‚Äôune base de donn√©es."
  },
  {
    "objectID": "solutions/td3.html",
    "href": "solutions/td3.html",
    "title": "TD 3: SQL",
    "section": "",
    "text": "Avec solutions\nObjectifs de la s√©ance:\nEn plus du sch√©ma world, nous allons utiliser le sch√©ma pagila qui contient des informations utilis√©es par un magasin de location de DVD.\nLe sch√©ma est visible sur ici.\nSous psql ou pgli, vous pouvez aussi inspecter les tables comme d‚Äôhabitude avec"
  },
  {
    "objectID": "solutions/td3.html#requ√™tes-imbriqu√©es",
    "href": "solutions/td3.html#requ√™tes-imbriqu√©es",
    "title": "TD 3: SQL",
    "section": "Requ√™tes imbriqu√©es",
    "text": "Requ√™tes imbriqu√©es\nLes requ√™tes imbriqu√©es permettent d‚Äôutiliser le r√©sultat d‚Äôune requ√™te dans la clause WHERE.\nOn utilisera essentiellement les op√©rateurs suivants: IN, EXISTS, ALL, ANY.\nIN permet de tester la pr√©sence d‚Äôune valeur dans le r√©sultat d‚Äôune requ√™te.\nEXISTS renvoie True si la requ√™te donn√©e est non-vide et False sinon. On peut les combiner avec NOT pour inverser leur comportement: NOT IN et NOT EXISTS. Par exemple, pour conna√Ætre les r√©gions sans monarchie, on pourra √©crire:\nSELECT DISTINCT region \nFROM world.country\nWHERE region NOT IN (\n  SELECT region\n  FROM world.country\n  WHERE governmentform like '%Monarchy%'\n);\nPour conna√Ætre les r√©gions qui ont au moins une langue officielle, on pourra √©crire:\nSELECT DISTINCT region \nFROM world.country AS co\nWHERE EXISTS (\n  SELECT *\n  FROM world.countrylanguage AS cl\n  WHERE co.countrycode = cl.countrycode AND \n    cl.isofficial\n);\nRemarquez que dans ce dernier exemple, la sous-requ√™te fait intervenir des attributs de la requ√™te principale, c‚Äôest pourquoi on parle de requ√™tes imbriqu√©es.\nANY et ALL sont deux autres op√©rateurs. Par exemple\nSELECT * \nFROM table \nWHERE col &lt; ALL(\n  requete\n)\ns√©lectionnera les lignes de table telles que la valeur de col est plus petite que toutes les valeurs retourn√©es par la requ√™te requete. Ainsi, la requ√™te\nSELECT * \nFROM world.country\nWHERE population_country &gt;= ALL(\n  SELECT population_country \n  FROM world.country\n);\nretournera la liste des pays les plus peupl√©s.\nSELECT * \nFROM table \nWHERE col &lt; ANY(\n  requete\n)\ns√©lectionnera les lignes de table telles que la valeur de col est strictement plus petite qu‚Äôau moins une des valeurs retourn√©es par la requ√™te requete.\nPour conna√Ætre les r√©gions o√π l‚Äôon ne trouve qu‚Äôune seule forme de gouvernement, on pourra √©crire:\nSELECT DISTINCT region \nFROM world.country as c1\nWHERE c1.governmentform = ALL(\n  SELECT c2.governmentform \n  FROM world.country as c2\n  WHERE c2.countrycode!=c1.countrycode AND \n    c2.region=c1.region\n);\n\n\n\n\n\n\nOn remarque que dans EXISTS ou IN on peut utiliser des attributs de notre requ√™te globale, ce qui les rend plus puissants que\nWITH ... AS (\n  ...\n)"
  },
  {
    "objectID": "solutions/td3.html#jointure-externe",
    "href": "solutions/td3.html#jointure-externe",
    "title": "TD 3: SQL",
    "section": "Jointure externe",
    "text": "Jointure externe\nLa jointure externe est une jointure un peu particuli√®re. On a vu la semaine derni√®re que lorsqu‚Äôon faisait une jointure, les lignes de la table de droit √©taient recoll√©es aux lignes de la table de gauche. Si une ligne a gauche ne pouvaient pas √™tre recoll√©e, elle disparaissait de la jointure. La jointure ext√©rieure permet de garder ces lignes-l√† malgr√© tout.\nOn utilisera LEFT JOIN et RIGHT JOIN. Par exemple, la requ√™te suivante renvoie la liste des pays et leur langages. Les pays qui ne se trouvent pas dans la table countrylanguage (il y en a, l‚ÄôAntarctique par exemple) seront list√©s quand m√™me et les informations manquantes seront remplies avec des valeurs NULL.\nSELECT * \nFROM world.country AS p LEFT JOIN \n  world.countrylanguage AS l ON \n  p.countrycode = l.countrycode;\nOn peut utiliser cette requ√™te pour trouver les pays qui n‚Äôont pas de langue officielle par exemple:\nSELECT * \nFROM world.country as p LEFT JOIN \n  world.countrylanguage AS l ON \n  p.countrycode = l.countrycode AND l.isofficial\nWHERE l.countrycode IS NULL;"
  },
  {
    "objectID": "solutions/td3.html#requ√™tes",
    "href": "solutions/td3.html#requ√™tes",
    "title": "TD 3: SQL",
    "section": "Requ√™tes",
    "text": "Requ√™tes\nQuels sont les langues qui ne sont officielles dans aucun pays ? (355 lignes)\n√âcrivez une version avec EXCEPT, une avec NOT IN et une autre avec LEFT JOIN.\n\n\n\n\n\n\nSolution\n\n\n\n(\n  SELECT DISTINCT language \n  FROM  world.countrylanguage\n)\n\nEXCEPT \n\n(\n  SELECT language \n  FROM world.countrylanguage \n  WHERE isofficial\n);\n\n\nPremi√®re version\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT language \nFROM world.countrylanguage\nWHERE language NOT IN\n      (SELECT language \n       FROM world.countrylanguage \n       WHERE isofficial);\n\n\nDeuxi√®me version:\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT l1.language \nFROM world.countrylanguage AS l1\n     LEFT JOIN world.countrylanguage AS l\n     ON (l1.language = l.language AND l.isofficial)\nWHERE l.language IS NULL;\n\n\nTroisi√®me version:\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT cl.language \nFROM world.countrylanguage cl\nWHERE  NOT EXISTS (\n  SELECT cl1.language \n  FROM world.countrylanguage cl1\n  WHERE cl1.language=cl.language AND\n  cl1.isofficial\n);\n\n\n\n\n\n\n\n\nEn calcul relationnel\n\\[\\begin{align*}\n\\Big\\{l.\\texttt{language} :  & \\texttt{countrylanguage}(l) \\wedge \\\\\n& \\neg \\big( \\exists t \\quad \\texttt{countrylanguage}(t)  \\wedge\\\\\n&\\phantom{\\neg\\big(}l.\\texttt{language}=t.\\texttt{language}\\wedge t.\\texttt{isofficial}\\big)\\Big\\}\n\\end{align*}\\]\n\n\n\nQuelles sont les r√©gions o√π au moins deux pays ont la m√™me forme de gouvernement ? (21 lignes)\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT region \nFROM world.country AS c1\nWHERE c1.governmentform = ANY(\n  SELECT c2.governmentform\n  FROM world.country AS c2 \n  WHERE c2.countrycode!=c1.countrycode AND c2.region=c1.region\n);\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT c1.region \nFROM world.country AS c1 JOIN world.country AS c2\n  ON c1.region=c2.region AND \n    c1.countrycode!=c2.countrycode AND \n    c1.governmentform=c2.governmentform;\n\n\nQuels sont les films qui n‚Äôont jamais √©t√© lou√©s ? (42 lignes)\n\n\n\n\n\n\nSolution\n\n\n\nL√† encore, plusieurs possibilit√©s. Avec ce que l‚Äôon sait d√©j√† :\nWITH DejaLoue AS (\n  SELECT film_id \n  FROM pagila.rental JOIN pagila.inventory USING (inventory_id)\n), NonLoue AS (\n  SELECT film_id \n  FROM pagila.film \n  EXCEPT \n  SELECT * \n  FROM DejaLoue\n)\n\nSELECT title \nFROM pagila.film NATURAL JOIN NonLoue;\nAvec les requ√™tes imbriqu√©es :\nSELECT title,film_id FROM pagila.film\n                     WHERE film_id NOT IN (\n                      SELECT film_id \n                      FROM pagila.rental JOIN pagila.inventory USING (inventory_id)\n);\n\n\n\n\n\n\n\n\nEn calcul relationnel\n\\[\\begin{align*}\n\\Big\\{ f.\\texttt{title} : & \\texttt{film}(f) \\wedge \\\\\n& \\neg \\big( \\exists t, t_1  \\quad \\texttt{inventory}(t)  \\wedge  \\exists t_1  \\quad \\texttt{rental}(t_1)  \\wedge\\\\\n&\\phantom{\\neg\\big(} f.\\texttt{film\\_id}=t.\\texttt{film\\_id}\\wedge t.\\texttt{inventory\\_id}=t_1.\\texttt{inventory\\_id}\\big)\\Big\\}\n\\end{align*}\\]\n\n\n\nCette question est exactement du m√™me type que la pr√©c√©dente. On y r√©pond de la m√™me mani√®re : pour trouver 1 les objets d‚Äôun certain type qui ne poss√®dent pas une propri√©t√©, on cherche dans la base tous les objets de ce type et on fait la diff√©rence avec l‚Äôensemble des objets de ce type qui poss√®dent la propri√©t√© dans la base.\nQuels sont les acteurs qui ont jou√© dans toutes les cat√©gories de film ? (11 lignes)\n\n\n\n\n\n\nSolution\n\n\n\nWITH ActCat AS (SELECT actor_id, category_id FROM pagila.film_actor fa\n                 JOIN pagila.film_category fc ON (fa.film_id=fc.film_id)),\nActNot AS (SELECT actor_id FROM pagila.actor,pagila.category\n    WHERE (actor_id,category_id) NOT IN (SELECT * FROM ActCat)),\nActId AS (SELECT actor_id FROM pagila.actor\n    EXCEPT SELECT * FROM ActNot)\n\nSELECT first_name,last_name FROM pagila.actor NATURAL JOIN ActId  ;\n\n\n\n\n\n\n\n\nCette requ√™te r√©alise une op√©ration sophistiqu√©e de l‚Äôalg√®bre relationnelle la division ou \\(\\div\\). Il ne s‚Äôagit pas d‚Äôune op√©ration primitive comme \\(\\sigma,\\pi, \\times\\).\n\\[\\pi_{\\texttt{actor\\_id},\\texttt{category\\_id}} \\left(\\texttt{film\\_actor} \\bowtie \\texttt{film\\_category}\\right)  \\div \\pi_{\\texttt{category}} (\\texttt{film\\_category})\\]\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\nLa version suivante calcule le m√™me r√©sultat, et suit fid√®lement le plan d‚Äôex√©cution le plus √©l√©mentaire pour r√©aliser la division.\nWITH \n  ActCat AS (\n    SELECT actor_id, category_id \n    FROM pagila.film_actor fa JOIN pagila.film_category fc ON (fa.film_id=fc.film_id)),\n  ActCrosCat AS (\n    SELECT  actor_id, category_id \n    FROM  pagila.actor, pagila.category),\n  ActNotCat AS (\n    SELECT * \n    FROM ActCrosCat\n    EXCEPT \n    SELECT *\n    FROM ActCat),\n  ActId AS (\n    SELECT actor_id \n    FROM pagila.actor \n    EXCEPT\n    SELECT actor_id \n    FROM ActNotCat)\n\nSELECT first_name,last_name \nFROM pagila.actor NATURAL JOIN ActId  ;\nEn comptant le nombre \\(n\\) de cat√©gories de films dans une premi√®re requ√™te, on peut aussi s√©lectionner les acteurs qui apparaissent dans au moins \\(n\\) cat√©gories de film.\n\n\nExiste-t-il des acteurs qui ne jouent avec aucun autre acteur ? (3 lignes ????)\n\n\n\n\n\n\nSolution\n\n\n\nWITH Copain AS\n(SELECT R1.actor_id FROM pagila.film_actor as R1\n       JOIN pagila.film_actor as R2\n       ON (R1.film_id = R2.film_id AND R1.actor_id != R2.actor_id)\n)\nSELECT actor_id FROM pagila.actor\n    WHERE actor_id NOT IN (SELECT * FROM Copain);\nou avec NOT EXISTS\nSELECT actor_id FROM pagila.actor a\nWHERE NOT EXISTS (\n  SELECT fa2.actor_id\n  FROM pagila.film_actor fa1 JOIN pagila.film_actor fa2\n  ON (fa1.actor_id=a.actor_id AND\n      fa2.actor_id&lt;&gt; a.actor_id AND\n      fa1.film_id=fa2.film_id)\n)\n\n\nNom, pr√©nom des clients install√©s dans des villes sans magasin ? (599 lignes)\n\n\n\n\n\n\nSolution\n\n\n\nWITH CustomerCity AS\n(SELECT cu.first_name, cu.last_name,cu.customer_id, ad.city_id\nFROM pagila.customer cu JOIN pagila.address ad ON (cu.address_id=ad.address_id)),\nStoreCity AS\n(SELECT ad.city_id \nFROM pagila.store st JOIN pagila.address ad ON (st.address_id= ad.address_id))\n\nSELECT first_name,last_name FROM CustomerCity\nWHERE city_id NOT IN (SELECT * FROM StoreCity);\n\n\nLister les pays pour lesquels toutes les villes ont au moins un magasin. (1 ligne)\n\n\n\n\n\n\nSolution\n\n\n\nSELECT country_id from pagila.country C \nWHERE NOT EXISTS (\n  SELECT * \n  FROM pagila.city C2 \n  WHERE C.country_id=C2.country_id AND C2.city_id NOT IN (\n    SELECT address.city_id \n    FROM pagila.store \n    JOIN pagila.address USING (address_id)\n    )\n);\n\n\nD√©terminer la liste des films disponibles dans toutes les langues.\n\n\n\n\n\n\nSolution\n\n\n\nComme pour les acteurs ‚Äútoutes cat√©gories‚Äù, il s‚Äôagit d‚Äôune division. Dans la base install√©e, le r√©sultat est vide.\n\n\nUn m√™me dvd (inventory_id) peut bien s√ªr √™tre lou√© plusieurs fois, mais pas simultan√©ment. Proposer une requ√™te qui v√©rifie que les dates de location d‚Äôun dvd donn√© sont compatibles.\n\n\n\n\n\n\nSolution\n\n\n\nSQL en g√©n√©ral et PostGres en particulier proposent beaucoup de types et d‚Äôop√©rations sophistiqu√©es pour repr√©senter et manipuler les donn√©es temporelles."
  },
  {
    "objectID": "solutions/td3.html#vues",
    "href": "solutions/td3.html#vues",
    "title": "TD 3: SQL",
    "section": "Vues",
    "text": "Vues\nLes vues permettent de donner un nom √† une requ√™te afin de pouvoir l‚Äôappeler plus tard sans la r√©√©crire √† chaque fois. Une vue s‚Äôenregistre dans un sch√©ma. Par exemple, dans le sch√©ma World, on pourrait cr√©er une vue VillesRepublic qui contient toutes les villes de la table city qui sont dans une r√©publique.\nOn cr√©e une vue avec CREATE VIEW nom AS requete. √âtant donn√© que vous ne pouvez √©crire que dans votre sch√©ma personnel, il faudra nommer vos vues entid.nom o√π entid est votre identifiant ENT. Ainsi\nCREATE VIEW entid.VillesRepublic AS\n  SELECT B.* \n  FROM world.country as A NATURAL JOIN world.city as B\n  WHERE A.governmentform like '%Republic%';\ncr√©e une vue dans votre sch√©ma personnel. D√©sormais, si on veut s√©lectionner les villes qui sont dans une r√©publique et dont la population est sup√©rieure √† \\(1000000\\), on pourra simplement √©crire :\nSELECT * \nFROM entid.VillesRepublic \nWHERE population_city&gt;=1000000;\n\n\n\n\n\n\nRemarquez la diff√©rence entre WITH et une vue. WITH nomme une requ√™te temporairement, seulement √† l‚Äô√©chelle de la requ√™te courante tandis qu‚Äôune vue est enregistr√©e de fa√ßon permanente. Cependant, chaque fois que vous appelez votre vue, elle est r√©√©valu√©e par le syst√®me de base de donn√©es.\n\n\n\nNotez aussi que SQL n‚Äôest pas sensible √† la casse. La vue entid.VillesRepublic peut √™tre aussi d√©sign√©e par entid.villesrepublic.\nPour supprimer une vue existante on utilise la commande DROP VIEW suivie du nom de la vue √† supprimer. Par exemple l‚Äôinstruction\nDROP VIEW entid.VillesRepublic ;\nsupprime la vue cr√©√©e pr√©c√©demment.\nDans votre sch√©ma personnel (qui porte le nom de votre identifiant ENT), √©crire une vue film_id_horror qui renvoie la liste des films de cat√©gorie ‚ÄòHorror‚Äô.\n\n\n\n\n\n\nSolution\n\n\n\nCREATE VIEW entid.film_id_horror\nAS\n( SELECT pagila.film_id \n  FROM pagila.film_category JOIN pagila.category USING(category_id) \n  WHERE category.name='Horror'\n) ;"
  },
  {
    "objectID": "solutions/td3.html#fonctions-sql",
    "href": "solutions/td3.html#fonctions-sql",
    "title": "TD 3: SQL",
    "section": "Fonctions SQL",
    "text": "Fonctions SQL\nDans votre sch√©ma personnel (qui porte le nom de votre identifiant ENT), √©crire une fonction SQL film_id_cat qui prend en param√®tre une cha√Æne de caract√®re s et renvoie la liste des films de cat√©gorie s. On rappelle la syntaxe :\nCREATE OR REPLACE FUNCTION entid.film_id_cat(s TEXT)\nRETURNS TABLE(film_id INTEGER)\nLANGUAGE 'sql' AS\n$$\nrequete\n$$\net l‚Äôusage\nCREATE OR REPLACE FUNCTION entid.film_id_cat(s text)\n RETURNS TABLE(film_id smallint) LANGUAGE sql\nAS $$\nSELECT film_id FROM film_category NATURAL JOIN category\nWHERE category.name=s ;\n$$ ;\nUtilisez votre fonction pour √©crire les requ√™tes suivantes:\nQuels sont les acteurs qui ont d√©j√† jou√© dans un film d‚Äôhorreur (cat√©gorie ‚ÄòHorror‚Äô) ?\n\n\n\n\n\n\nSolution\n\n\n\nLes solutions sont donn√©es en utilisant la fonction suivante\nCREATE OR REPLACE FUNCTION entid.film_id_cat(s text)\n RETURNS TABLE(film_id smallint) LANGUAGE sql\nAS $$\nSELECT film_id FROM film_category NATURAL JOIN category\nWHERE category.name=s ;\n$$ ;\n\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT ac.* FROM pagila.actor ac\n     NATURAL JOIN\n        (SELECT * FROM pagila.film_actor\n              WHERE film_id IN\n                (SELECT * FROM entid.film_id_cat('Horror'))\n         ) ;\n\n\nou\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT ac.*\nFROM pagila.actor ac JOIN\n     pagila.film_actor NATURAL JOIN\n     entid.film_id_cat('Horror') ;\n(156 tuples renvoy√©s).\n\n\nQuels sont les acteurs qui n‚Äôont jamais jou√© dans une com√©die (Comedy) ? (53 lignes)\n\n\n\n\n\n\nAttention ! Cette requ√™te ne r√©pond pas √† la question :\n\n\n\nSELECT DISTINCT ac.*\nFROM pagila.actor ac NATURAL JOIN\n     (SELECT * FROM pagila.film_actor\n      WHERE film_id NOT IN\n        (SELECT * FROM pagila.film_id_cat('Comedy') )\n      ) as X;\nElle r√©pond √† la question : Quels sont les acteurs qui ont jou√© dans un film qui n‚Äôest pas une com√©die ?\n\n\n\n\n\n\n\n\nSolution\n\n\n\nUne r√©ponse correcte est\nSELECT DISTINCT last_name, first_name\nFROM pagila.actor A1 \n WHERE NOT EXISTS \n      (SELECT * FROM pagila.film_actor A2, (pagila.film_category JOIN pagila.category using (category_id)) C WHERE A1.actor_id=A2.actor_id AND \n name='Comedy' AND A2.film_id=C.film_id); \n\n\nou encore\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT ac.last_name, ac_first_name\nFROM pagila.actor ac\nWHERE NOT EXISTS\n     (SELECT * FROM pagila.film_actor fa\n      WHERE film_id IN\n        (SELECT * FROM entid.film_id_cat('Comedy') )\n      AND fa.actor_id = ac.actor_id\n     )  ;\n\n\n\n\n\n\n\n\nEn calcul relationnel, en consid√©rant film_id_cat('Comedy') comme une relation (ce qui est coh√©rent avec la d√©finition de la fonction) cette requ√™te s‚Äôexprime\n\\[\\begin{align*}\n  \\left\\{ a.\\texttt{last\\_name,}  \\right. & a.\\texttt{first\\_name}\n  :\n  \\texttt{actor}(a) \\wedge \\\\\n  & \\neg\n  \\left(\\exists \\mathrm{fa}\\quad \\texttt{film\\_actor}(\\mathrm{fa}) \\right.  \\wedge  \\mathrm{fa}.\\texttt{actor\\_id}=a.\\texttt{actor\\_id}  \\\\\n& \\left. \\left.   \\wedge \\texttt{film\\_id\\_cat}(\\mathrm{'Comedy'})(\\mathrm{fa}.\\texttt{film\\_id}) \\right) \\right\\}\n\\end{align*}\\]\nLe calcul relationnel traduit presque litt√©ralement la d√©marche que nous suivons lorsqu‚Äôil faut construire le r√©sultat √† la main : pour trouver les actor_id des acteurs qui n‚Äôont jamais jou√© dans une com√©die, nous examinons toutes les valeurs \\(a\\) de actor_id pr√©sentes dans la table actor (ou film_actor), et pour chacune de ces valeurs, nous verifions qu‚Äôil n‚Äôexiste pas de tuple de la table film_actor o√π l‚Äôattribut actor_id soit √©gal √† \\(a\\) et o√π l‚Äôattribut film_id d√©signe un film qui appara√Æt dans le r√©sultat de film_id_cat('Comedy').\nNous d√©crivons/explicitons ainsi les propri√©t√©s du r√©sultat de la requ√™te Quels sont les acteurs qui n‚Äôont jamais jou√© dans une com√©die (‚ÄòComedy‚Äô) ?.\nSi maintenant nous cherchons √† 1 ce r√©sultat, nous pouvons d‚Äôabord calculer la liste des actor_id des acteurs qui ont jou√© dans une com√©die, calculer la liste de tous les actor_id connus dans le schema et faire la diff√©rence, en alg√®bre relationnelle, cela se r√©sume √†\n\\[\\pi_{\\texttt{actor\\_id}}\\left(\\texttt{film\\_actor}\\right) \\setminus \\pi_{\\texttt{actor\\_id}} \\left( \\texttt{film\\_actor} \\bowtie\\texttt{film\\_id\\_cat}(\\texttt{'Comedy'}) \\right)\\]\n\n\n\nQuels sont les acteurs qui ont jou√© dans un film d‚Äôhorreur (‚ÄòHorror‚Äô) et dans un film pour enfant (‚ÄòChildren‚Äô)? (130 lignes)\n\n\n\n\n\n\nIci l‚Äôerreur la plus fr√©quente consiste √† √©crire\nSELECT actor_id \nFROM pagila.film_actor AS fa\nWHERE fa.film_id IN (\n  SELECT * \n  FROM entid.film_id_cat('Children')\n) AND fa.film_id IN (\n  SELECT * \n  FROM entid.film_id_cat('Horror')\n);\nLe r√©sultat est vide et la requ√™te ne correspond pas √† la question pos√©e. Elle calcule les actor_id des acteurs qui ont dans au moins un film qui rel√®ve simultan√©ment des cat√©gories Horror et Children (ce genre de film est assez rare).\nPour calculer un r√©sultat correct, il faut pour chaque valeur \\(a\\) de actor_id rechercher deux tuples (pas n√©cessairement distincts) de film_actor o√π l‚Äôattribut actor_id vaut \\(a\\) et ou dans un cas film_id d√©signe un film pour enfants et dans l‚Äôautre un film d‚Äôhorreur. En calcul relationnel, cela donne\n\\[\\begin{align*}\n  \\left\\{ a.\\texttt{last\\_name,}  \\right. & a.\\texttt{first\\_name}\n  :\n  \\texttt{actor}(a) \\wedge \\\\\n  &\n  \\left(\\exists \\mathrm{fa}\\quad \\texttt{film\\_actor}(\\mathrm{fa}) \\right.  \\wedge  \\mathrm{fa}.\\texttt{actor\\_id}=a.\\texttt{actor\\_id}  \\\\\n& \\left.   \\wedge \\texttt{film\\_id\\_cat}(\\mathrm{'Children'})(\\mathrm{fa}.\\texttt{film\\_id}) \\right) \\\\\n&  \\left(\\exists \\mathrm{fa}\\quad \\texttt{film\\_actor}(\\mathrm{fa}) \\right.  \\wedge  \\mathrm{fa}.\\texttt{actor\\_id}=a.\\texttt{actor\\_id}  \\\\\n& \\left. \\left.   \\wedge \\texttt{film\\_id\\_cat}(\\mathrm{'Horror'})(\\mathrm{fa}.\\texttt{film\\_id}) \\right)\\right\\}\n\\end{align*}\\]\nEn alg√®bre relationnelle\n\\[\\begin{align*}\n\\pi_{\\texttt{last\\_name,}\\texttt{first\\_name}} \\bigg( &  \\texttt{actor} \\bowtie  \\\\\n     & \\Big(\\pi_{\\texttt{actor\\_id}} \\left( \\texttt{film\\_actor} \\bowtie\n                                 \\texttt{film\\_id\\_cat}(\\texttt{'Children'}) \\right) \\bigcap\\\\\n     & \\; \\pi_{\\texttt{actor\\_id}} \\left( \\texttt{film\\_actor} \\bowtie\n                                 \\texttt{film\\_id\\_cat}(\\texttt{'Horror'}) \\right) \\Big)\n                                 \\bigg)\n\\end{align*}\\]\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\nEn SQL, cela peut donner\nSELECT DISTINCT a.first_name, a.last_name  FROM pagila.actor a\nWHERE EXISTS (SELECT film_id\n              FROM film_actor AS fa1 NATURAL JOIN\n                   entid.film_id_cat('Children')\n              WHERE  fa1.actor_id = a.actor_id) AND\n      EXISTS (SELECT film_id\n              FROM film_actor AS fa2 NATURAL JOIN\n                   entid.film_id_cat('Horror')\n              WHERE  fa2.actor_id = a.actor_id) ;\nqui renvoie 129 tuples."
  },
  {
    "objectID": "solutions/td8.html",
    "href": "solutions/td8.html",
    "title": "TD 8 : Mod√©lisation",
    "section": "",
    "text": "Avec solutions\n\n\n\n\n\n\n\n\n\n\n\n\n\nL3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle"
  },
  {
    "objectID": "solutions/td2.html",
    "href": "solutions/td2.html",
    "title": "TD 2: SQL",
    "section": "",
    "text": "Avec solutions"
  },
  {
    "objectID": "solutions/td2.html#sch√©ma-world-rappel",
    "href": "solutions/td2.html#sch√©ma-world-rappel",
    "title": "TD 2: SQL",
    "section": "Sch√©ma world (rappel)",
    "text": "Sch√©ma world (rappel)\nUtiliser les commandes suivantes pour retrouver les sch√©mas de tables country, countrylanguage et city.\nbd_2023&gt; \\d world.\"nom de table\"\nVue d‚Äôensemble du sch√©ma world"
  },
  {
    "objectID": "solutions/td2.html#√©criture-de-requ√™tes",
    "href": "solutions/td2.html#√©criture-de-requ√™tes",
    "title": "TD 2: SQL",
    "section": "√âcriture de requ√™tes",
    "text": "√âcriture de requ√™tes\nPour extraire des informations d‚Äôune base de donn√©es, on utilise l‚Äôalg√®bre relationnelle (pour la th√©orie) et le langage SQL (pour la pratique).\n\n\n\n\n\n\n\n\nOp√©ration\nAlg√®bre rel.\nSQL\n\n\n\n\nProjection\n\\(\\Pi_{\\text{liste d'attributs}}(R)\\)\nSELECT attributs FROM  R\n\n\nS√©lection\n\\({\\Large \\sigma}_{\\text{condition}}{R}\\)\nSELECT * FROM R WHERE condition\n\n\nRenommage\n\\(\\rho_{\\text{nom1} \\rightarrow \\text{nom2}}(R)\\)\nSELECT nom1 AS nom2 FROM table1 AS table2\n\n\nUnion\n\\(R \\cup S\\)\n(SELECT * FROM R) UNION (SELECT * FROM S)\n\n\nDiff√©rence\n\\(R - S\\)\n(SELECT * FROM R) EXCEPT (SELECT * FROM S)\n\n\nProduit\n\\(R \\times S\\)\nSELECT * FROM R,S\n\n\nIntersection\n\\(R \\cap S\\)\n(SELECT * FROM R) INTERSECT (SELECT * FROM S)"
  },
  {
    "objectID": "solutions/td2.html#op√©rations-avanc√©es",
    "href": "solutions/td2.html#op√©rations-avanc√©es",
    "title": "TD 2: SQL",
    "section": "Op√©rations avanc√©es",
    "text": "Op√©rations avanc√©es\n\nJointures\nLa jointure est une op√©ration qui permet de recoller deux relations ensemble. On la note avec le signe \\(\\bowtie_C\\) o√π \\(C\\) est une condition. Formellement, ce n‚Äôest qu‚Äôune s√©lection selon la condition \\(C\\) d‚Äôun produit cart√©sien, c‚Äôest-√†-dire, par d√©finition : \\[R {\\Large \\bowtie}_C S = {\\Large \\sigma}_{C}{(R \\times S)}.\\]\nCette op√©ration est tr√®s courante dans les requ√™tes. Cela vient du fait que les bases de donn√©es sont con√ßues pour ne pas avoir d‚Äôinformation redondante.\nPrenons l‚Äôexemple du sch√©ma world et des tables world.country et world.city. La table world.country poss√®de une colonne capital qui contient le num√©ro d‚Äôidentification d‚Äôune ville de la table world.city. Par exemple, pour la France, la colonne capital vaut 2974 et la ville num√©ro 2974 est Paris:\nbd_2023-24&gt; SELECT capital \nFROM world.country \nWHERE countrycode='FRA';\nbd_2023-24&gt; SELECT name \nFROM world.city \nWHERE id = 2974;\nPour lister les noms des capitales mondiales, on va avoir besoin de recoller les deux tables en prenant soin de respecter la condition d‚Äô√©galit√© entre la capitale et le num√©ro d‚Äôidentification de la ville. Cela peut s‚Äô√©crire en SQL comme suit:\nSELECT name\nFROM world.city AS V JOIN \n     world.country AS P ON \n     V.id = P.capital;\nParfois, on veut recoller deux tables avec la condition que les colonnes qui ont le m√™me nom doivent √™tre √©gales. Cela arrive souvent si la base de donn√©es a bien √©t√© con√ßue. On appelle cette jointure une jointure naturelle, qu‚Äôon peut √©crire avec NATURAL JOIN. La requ√™te\nSELECT name \nFROM world.city NATURAL JOIN world.country\nWHERE continent = 'Oceania';\nrenvoie la liste des villes d‚ÄôOc√©anie. La jointure est faite implicitement sur la condition\nworld.city.countrycode = world.country.countrycode\nla table r√©sultante n‚Äôaura qu‚Äôune seule colonne countrycode. Si l‚Äôon souhaite ne faire la jointure naturelle que sur un sous-ensemble a1,...,ak des attributs communs, on peut utiliser JOIN ... USING (a1,...,ak).\n\n\nRequ√™tes nomm√©es : utilisation de WITH\nLorsque les requ√™tes se compliquent, il est parfois commode de la d√©couper en plusieurs requ√™tes qu‚Äôon manipulera par la suite. Par exemple, trouver le nom des capitales europ√©ennes ayant plus d‚Äôun million d‚Äôhabitants peut se d√©couper ainsi: on r√©sout la requ√™te CAP qui contient le nom, le continent et la population des capitales. Puis on r√©sout la requ√™te finale en filtrant CAP. Cela peut s‚Äô√©crire avec l‚Äôop√©rateur WITH:\nWITH CAP AS (\n  SELECT name, continent, population\n  FROM world.city AS V JOIN \n    world.country AS P ON  V.id=P.capital\n)\n\nSELECT name\nFROM CAP\nWHERE continent = 'Europe' AND population &gt; 1000000;"
  },
  {
    "objectID": "solutions/td2.html#requ√™tes",
    "href": "solutions/td2.html#requ√™tes",
    "title": "TD 2: SQL",
    "section": "Requ√™tes",
    "text": "Requ√™tes\n\nQuels sont les noms des capitales Sud-Am√©ricaines ? (14 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT name\nFROM world.city JOIN \n  world.country ON capital=id\nWHERE continent = 'South America';\n\n\n\nQuels sont les noms des pays o√π le fran√ßais est langue officielle ? (18 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT name_country\nFROM world.country NATURAL JOIN world.countrylanguage\nWHERE isofficial AND language='French';\n\n\n\nQuels sont les pays dont le gouvernement est monarchique (constitutionnelle ou pas) ? (43 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT name_country \nFROM world.country \nWHERE governmentform LIKE '%Monarchy%';\n\n\n\nQuelles sont les monarchies d‚ÄôEurope dont la capitale compte moins d‚Äôun million d‚Äôhabitants ? (8 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH T1 AS (\n  SELECT *\n  FROM world.country\n  WHERE governmentform LIKE '%Monarchy%' AND continent='Europe' )\n\nSELECT name_country\nFROM T1 JOIN world.city ON capital=id\nWHERE population &lt; 1000000;\n\n\n\nQuelles sont les r√©gions o√π on ne trouve pas de monarchie ? (9 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH monarchy AS (\n  SELECT region\n  FROM world.country\n  WHERE governmentform LIKE '%Monarchy%')\n\n(SELECT region \n FROM world.country) \nEXCEPT \n(SELECT * \n FROM monarchy);\n\n\n\nQuelles sont les langues qui ne sont langues officielles dans aucun pays ? (355 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS (\n  SELECT language \n  FROM world.countrylanguage \n  WHERE isofficial\n)\n\n(SELECT DISTINCT language \nFROM world.countrylanguage) \nEXCEPT \n(SELECT * \nFROM R);\n\n\n\nQuels sont les pays qui n‚Äôont pas de langue officielle ? (49 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS (\n  SELECT countrycode \n  FROM world.countrylanguage\n  WHERE isofficial\n),\nS AS (\n  SELECT countrycode \n  FROM world.country\n  EXCEPT \n  SELECT * FROM R\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN S;\n\n\n\nQuels sont les pays dont la seule langue officielle est le fran√ßais ? (9 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS(\n  SELECT DISTINCT T1.countrycode \n  FROM world.countrylanguage as T1 JOIN\n      world.countrylanguage as T2 ON \n      T1.countrycode = T2.countrycode\n  WHERE T1.language &lt;&gt; T2.language AND\n      T1.isofficial AND\n      T2.isofficial),\nS AS (\n  SELECT countrycode \n  FROM world.countrylanguage\n  WHERE language='French' AND isofficial\n  EXCEPT \n  (SELECT * FROM R)\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN S;\nEn utilisant EXCEPT :\nWITH OnlyFrench AS (\n  (SELECT countrycode\n  FROM countrylanguage\n  WHERE isofficial AND language = 'French')\n  EXCEPT\n  (SELECT countrycode\n  FROM countrylanguage\n  WHERE isofficial AND language &lt;&gt; 'French')\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN OnlyFrench;\n\n\n\nLes noms des pays o√π le fran√ßais n‚Äôest pas la seule langue officielle. (9 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS (\nSELECT DISTINCT T1.countrycode FROM world.countrylanguage as T1\n                     JOIN world.countrylanguage as T2\n                     ON T1.countrycode = T2.countrycode\nWHERE T1.language &lt;&gt; T2.language AND\n     T1.language = 'French' AND\n     T1.isofficial AND\n     T2.isofficial)\n\nSELECT name_country FROM R NATURAL JOIN world.country;\nEn utilisant INTERSECT :\nWITH AlsoFrench AS (\n  (SELECT countrycode\n  FROM world.countrylanguage\n  WHERE isofficial AND language = 'French')\n  INTERSECT\n  (SELECT countrycode\n  FROM world.countrylanguage\n  WHERE isofficial AND language &lt;&gt; 'French')\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN \n     AlsoFrench;\n\n\n\nQuelles sont les r√©gions qui ne comportent qu‚Äôune seule forme de gouvernement ? (3 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS (\n  SELECT T1.region \n  FROM world.country AS T1 JOIN \n       world.country AS T2 ON \n       T1.region = T2.region\n  WHERE T1.governmentform &lt;&gt; T2.governmentform)\n\nSELECT region \nFROM world.country \nEXCEPT \nSELECT * \nFROM R;\n\n\n\nQuelles sont les langues officielles des pays dont la capitale compte plus de 5 000 000 d‚Äôhabitants ? (12 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT language\nFROM world.countrylanguage NATURAL JOIN \n     world.city JOIN world.country ON capital=id\nWHERE population &gt; 5000000 and isofficial;\n\n\n\nQuels sont les pays o√π au moins trois langues sont parl√©es chacune par strictement plus de \\(10\\%\\) de la population ? (35 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS (\n  SELECT T1.countrycode \n  FROM  world.countrylanguage AS T1 JOIN \n        world.countrylanguage AS T2 ON T1.countrycode = T2.countrycode JOIN \n        world.countrylanguage AS T3 ON T1.countrycode = T3.countrycode\n  WHERE T1.language &lt;&gt; T2.language AND\n        T2.language &lt;&gt; T3.language AND\n        T1.language &lt;&gt; T3.language AND\n        T1.percentage &gt; 10 AND\n        T2.percentage &gt; 10 AND\n        T3.percentage &gt; 10\n)\n\nSELECT DISTINCT name_country \nFROM world.country NATURAL JOIN R;\nou\nWITH tpc AS (\n  SELECT *\n  FROM world.countrylanguage\n  WHERE percentage &gt; 10), \nthree AS (\n    SELECT DISTINCT t1.countrycode\n    FROM tpc AS t1 JOIN \n         tpc AS t2 ON (t1.countrycode=t2.countrycode AND t1.language &lt; t2.language) JOIN\n         tpc AS t3 ON (t1.countrycode=t3.countrycode AND t3.language &gt; t2.language)\n)\n\nSELECT co.*\nFROM world.country co NATURAL JOIN three ;\n\n\n\nQuelles sont les r√©gions o√π il existe deux pays dont les esp√©rances de vie diff√®rent par au moins \\(10\\) ans ? (16 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nSELECT DISTINCT T1.region\nFROM world.country AS T1 JOIN \n     world.country AS T2 ON T1.region = T2.region\nWHERE T1.countrycode &lt;&gt; T2.countrycode AND \n      (T1.lifeexpectancy - T2.lifeexpectancy &gt;= 10 OR \n       T2.lifeexpectancy - T1.lifeexpectancy &gt;= 10);\n\n\n\nQuels sont les pays o√π l‚Äôanglais et le fran√ßais sont des langues officielles ? (3 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nWITH R AS (\n  SELECT T1.countrycode\n  FROM world.countrylanguage AS T1 JOIN \n       world.countrylanguage AS T2 USING (countrycode)\n  WHERE T1.language='French' AND \n        T2.language='English' AND \n        T1.isofficial AND \n        T2.isofficial)\n      \nSELECT name_country \nFROM R NATURAL JOIN \n     world.country;\n\n\n\nMontrer comment calculer l‚Äôintersection de deux tables avec une jointure (sous certaines conditions).\n\n\n\n\n\n\n\nSolution\n\n\n\nSi R et S sont deux tables de m√™me sch√©ma, une jointure naturelle des deux tables devrait (en premi√®re approximation) calculer l‚Äôintersection des deux tables.\nPourtant\n(SELECT * FROM R)\nINTERSECT\n(SELECT * FROM S)   ;\nne donne pas toujours le m√™me r√©sultat que\nSELECT *\nFROM    R NATURAL JOIN S ;\nEssayez par exemple pour l‚Äôintersection de la table country avec elle-m√™me :\n(SELECT * FROM country) \nINTERSECT \n(SELECT * FROM country);\nretourne la table country, soit 239 lignes.\nLa jointure naturelle\nSELECT * \nFROM country AS c1 NATURAL JOIN \n     country AS c2;\nne donne que 167 lignes. On peut r√©concilier les deux r√©sultats en ne conservant que les lignes pour lesquelles aucune colonne ne prend la valeur NULL.\nEn v√©rifiant quels attributs peuvent prendre la valeur NULL dans le sch√©ma, on peut tester cela par la requ√™te\nSELECT * \nFROM world.country\nWHERE indepyear IS NOT NULL AND \n      lifeexpectancy IS NOT NUL AND \n      gnp IS NOT NULL AND \n      gnpold IS NOT NULL AND \n      headofstate IS NOT NULL AND \n      capital IS NOT NULL;\nqui retourne bien 167 lignes."
  },
  {
    "objectID": "solutions/td10.html",
    "href": "solutions/td10.html",
    "title": "TD 10: Normalisation",
    "section": "",
    "text": "Avec solutions\n\n\n\n\n\n\n\n\n\n\n\n\n\nL3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle\n\n\n\n\n\n\n\n\nExercice\nSoit \\(\\mathcal{A}=\\left\\{A,B,C,D,E\\right\\}\\) un sch√©ma et soit \\(\\mathcal{A}_1=\\left\\{A,B,C\\right\\}\\). Pour chaque ensemble \\(\\Sigma\\) de d√©pendances fonctionnelles ci-dessous, d√©terminer un ensemble de DF √©quivalent √† \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\).\n\n\\(\\Sigma=\\left\\{AB\\to DE, C\\to E, D\\to C, E\\to A\\right\\}\\)\n\\(\\Sigma=\\left\\{A\\to D, BD\\to E, AC\\to E, DE\\to B\\right\\}\\)\n\\(\\Sigma=\\left\\{AB\\to D, AC\\to E, BC\\to D, D\\to A, E\\to B\\right\\}\\)\n\\(\\Sigma=\\left\\{A\\to B, B\\to C, C\\to D, D\\to E, E\\to A\\right\\}\\)\n\n\n\n\n\n\n\nSolution\n\n\n\nRappelons que \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est l‚Äôensemble des DF de la forme \\(X\\to Y\\), avec \\(X\\subset\\mathcal{A}_1\\) et \\(Y\\subset\\mathcal{A}_1\\), qui sont impliqu√©es par \\(\\Sigma\\). Un ensemble de DF √©quivalent √† \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est l‚Äôensemble des DF \\(X\\to (X^+\\cap\\mathcal{A}_1)\\setminus X\\) o√π \\(X\\subset\\mathcal{A}_1\\), \\(X\\not=\\emptyset\\) et \\(X\\not=\\mathcal{A}_1\\).\n\n\\(A^+=A\\), \\(B^+=B\\), \\(C^+=CEA\\) donc on ajoute \\(\\boxed{C\\to A}\\)\\ \\(AB^+=ABDEC\\) donc on ajoute \\(\\boxed{AB\\to C}\\)\\ \\(AC^+=ACE\\), \\(BC^+=BCEAD\\) donc on ajoute \\(\\boxed{BC\\to A}\\)\\ Donc \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{C\\to A, AB\\to C, BC\\to A\\right\\}\\) lui-m√™me √©quivalent √† \\(\\left\\{AB\\to C, C\\to A\\right\\}\\).\n\\(A^+=AD\\), \\(B^+=B\\), \\(C^+=C\\) rien √† ajouter\\ \\(AB^+=ABDE\\), \\(AC^+=ACDEB\\) donc on ajoute \\(\\boxed{AC \\to B}\\)\\ \\(BC^+=BC\\)\\ Donc \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{aC \\to B\\right\\}\\).\n\\(A^+=A\\), \\(B^+=B\\), \\(C^+=C\\) rien √† ajouter\\ \\(AB^+=ABD\\), \\(AC^+=ACEBD\\) donc on ajoute \\(\\boxed{AC \\to B}\\)\\ \\(BC^+=BCDAE\\) donc on ajoute \\(\\boxed{BC \\to A}\\) \\ Donc \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est √©quivalent √† \\(\\left\\{aC \\to B, BC\\to A\\right\\}\\).\nTout attribut est une clef, donc c‚Äôest aussi le cas pour \\(\\mathcal{A}_1\\). \\(\\pi_{\\mathcal{A}_1}(\\Sigma)\\) est donc √©quivalent √† \\(\\left\\{a\\to B, B\\to C, C\\to A\\right\\}\\).\n\n\n\n\n\nExercice\nSoit \\(\\mathcal{A}=\\left\\{A,B,C,D,E\\right\\}\\) un sch√©ma et soit la d√©composition \\(\\left\\{\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3\\right\\}\\) o√π \\[\\mathcal{A}_1=\\left\\{A,B,C\\right\\}\\quad \\mathcal{A}_2=\\left\\{B,C,D\\right\\}\\quad \\mathcal{A}_3=\\left\\{A,C,E\\right\\}\\] Pour chaque ensemble \\(\\Sigma\\) de d√©pendances fonctionnelles ci-dessous, d√©terminer quelles d√©pendances sont pr√©serv√©es par cette d√©composition, c‚Äôest-√†-dire quelles DF de \\(\\Sigma\\) sont impliqu√©es par \\(\\bigcup_{i=1}^3 \\pi_{\\mathcal{A}_i}(\\Sigma)\\).\n\n\\(\\Sigma=\\left\\{b\\rightarrow E, CE\\rightarrow A\\right\\}\\)\n\\(\\Sigma=\\left\\{aC\\rightarrow E, BC\\to D\\right\\}\\)\n\\(\\Sigma=\\left\\{a\\rightarrow D, D\\to E, B\\to D\\right\\}\\)\n\\(\\Sigma=\\left\\{a\\rightarrow D, CD\\to E, E\\to D\\right\\}\\)\n\n\n\n\n\n\n\nSolution\n\n\n\nLa DF \\(X\\to Y\\) est pr√©serv√©e si et seulement la fermeture de \\(X\\) par rapport aux DF locales \\(\\bigcup_{i=1}^3 \\pi_{\\mathcal{A}_i}(\\Sigma)\\) contient \\(Y\\). Pour calculer la fermeture de \\(X\\) par rapport aux DF locales \\(\\bigcup_{i=1}^3 \\pi_{\\mathcal{A}_i}(\\Sigma)\\) on peut utiliser l‚Äôalgorithme suivant~:\n\nInitialisation \\(Z \\leftarrow X\\)\nTant que \\(Z\\) grandit : pour \\(i=1,2,3\\), \\(Z \\leftarrow Z \\cup\\bigl( (Z\\cap \\mathcal{A}_i)^+_\\Sigma\\cap \\mathcal{A}_i\\bigr)\\)\n\nL‚Äôensemble \\(Z\\) obtenu est la fermeture recherch√©e\nL‚Äôint√©r√™t de cet algorithme est qu‚Äôon ne calcule pas toutes les DF locales. Si au cours du calcul on obtient que \\(Y\\subset Z\\), on peut conclure imm√©diatement que \\(X\\to Y\\) est pr√©serv√©e.\n\n\\(\\Sigma=\\left\\{B\\rightarrow E, CE\\rightarrow A\\right\\}\\)\n\n\\(CE\\to A\\) est pr√©serv√©e puisqu‚Äôelle est locale √† \\(\\mathcal{A}_3\\).\n\\(B\\to E\\) n‚Äôest pas pr√©serv√©e puisque\n\\((B\\cap\\mathcal{A}_1)^+\\cap\\mathcal{A}_1=B^+\\cap\\mathcal{A}_1=BE\\cap\\mathcal{A}_1=B\\)\n\\((B\\cap\\mathcal{A}_2)^+\\cap\\mathcal{A}_2=B^+\\cap\\mathcal{A}_2=BE\\cap\\mathcal{A}_2=B\\)\n\\((B\\cap\\mathcal{A}_3)^+\\cap\\mathcal{A}_3=\\emptyset\\)\n\n\\(\\Sigma=\\left\\{AC\\rightarrow E, BC\\to D\\right\\}\\) est pr√©serv√© puisqu‚Äôil ne contient que des DF locales.\n\\(\\Sigma=\\left\\{A\\rightarrow D, D\\to E, B\\to D\\right\\}\\)\n\\(B\\to D\\) est pr√©serv√©e\n\\(\\Sigma=\\left\\{A\\rightarrow D, CD\\to E, E\\to D\\right\\}\\)\nAucune DF n‚Äôest pr√©serv√©e\n\n\n\n\n\nExercice\nOn consid√®re le sch√©ma de relation suivant concernant la gestion de rendez-vous d‚Äôun service d‚Äôintervention hospitaliers. \\[\n\\mathcal{A}=\\left\\{\\texttt{IdM,NomM,PrenomM,DateRV,HeureRV,IdP,NomP,PrenomP,IdInterV}\\right\\}\n\\]\nChaque rendez-vous implique un m√©decin et un patient. Chaque m√©decin est identifi√© par un num√©ro, IdM, un nom NomM et un pr√©nom PrenomM. Le rendez-vous est √† une date, DateRV, et √† une heure, HeureRV donn√©es. Chaque patient est identifi√© par un num√©ro, IdP, un nom NomP et un pr√©nom PrenomP. Chaque rv est programm√© pour un type d‚Äôintervention m√©dical, IdInterV. On suppose que chaque jour, un m√©decin ne peut pratiquer qu‚Äôun seul type d‚Äôintervention m√©dicale (consultation, type de chirurgie donn√©e).\nOn a les d√©pendances fonctionnelles \\(\\Sigma\\) suivantes:\nIdM, DateRV,HeureRV, IdInterV ‚Üí IdP\nIdM, DateRV ‚Üí  IdInterV\nIdM ‚Üí NomM, PrenomM\nIdP ‚Üí NomP, PrenomP\nIdP,DateRV,HeureRV ‚Üí IdInterV\nIdP,DateRV,HeureRV ‚Üí  IdM,NomM\n\nQuels sont les inconv√©nients d‚Äôune telle mod√©lisation par une seule table en terme d‚Äôanomalies d‚Äôinsertion ou de suppression ?\n\n\n\n\n\n\n\nSolution\n\n\n\nA chaque nouveau rv ins√©r√© dans \\(R\\), il faut rappeler les noms, pr√©noms des m√©decins et patients. Ce qui peut se traduire par des incoh√©rences si cela n‚Äôest pas respect√©. En cas de suppression d‚Äôun groupe de rv, on peut faire disparaitre l‚Äôensemble des informations concernant un patient ou un m√©decin.\n\n\n\nCalculer \\([\\texttt{IdM}]^+_{\\Sigma}\\)\n\n\n\n\n\n\n\nSolution\n\n\n\n\\([IdM]^+_{\\Sigma}= \\{  \\texttt{IdM, NomM, PrenomM}\\}\\)\n\n\n\nProposez un ensemble d‚Äôattributs formant une cl√© de la relation.\n\n\n\n\n\n\n\nSolution\n\n\n\nIl y a plusieurs cl√©s possibles. Par exemple, {IdM, DateRV, HeureRV} mais aussi {IdP, DateRV, HeureRV}.\n\n\n\nDonner un ensemble de d√©pendances fonctionnelles \\(\\Sigma'\\) √©quivalent √† \\(\\Sigma\\) qui soit minimal (i.e.¬†sans r√®gles redondantes, notamment). Justifiez\n\n\n\n\n\n\n\nSolution\n\n\n\nIdM, DateRV, HeureRV ‚Üí IdP\nIdP, DateRV, HeureRV ‚Üí IdM\nIdM, DateRV ‚Üí IdInterV\nIdM ‚Üí NomM\nIdM ‚Üí PrenomM\nIdP ‚Üí NomP\nIdP ‚Üí PrenomP\n\n\n\n\nOn se donne la d√©composition de \\(\\mathcal{A}\\) suivante~: \\[\n\\begin{array}{l}\n    \\mathcal{A}_1=\\left\\{\\texttt{IdM,HeureRV,DateRV,IdP,NomP,PrenomP}\\right\\},\\\\\n     \\mathcal{A}_2=\\left\\{\\texttt{IdM,DateRV,IdInterV}\\right\\},\\\\\n     \\mathcal{A}_3=\\left\\{\\texttt{IdM,NomM,PrenomM}\\right\\}\n\\end{array}\n\\]\n\nToutes les d√©pendances fonctionnelles sont-elles pr√©serv√©es par cette d√©composition ?\nEst-elle sans perte d‚Äôinformation ?\nPour \\(i=1,2,3\\), d√©terminer si \\(\\mathcal{A}_i\\) est en forme normale de Boyce-Codd.\n\n\n\n\n\n\n\nSolution\n\n\n\nPr√©servation des DF\nLes d√©pendances de Œ£‚Äô sont locales aux \\(\\mathcal{A}_i\\), elles sont donc pr√©serv√©es.\n\nD√©composition SPI ?\nOui, en utilisant seulement (b) et (c) dans l‚Äôalgorithme de poursuite\\\n\\(\\mathcal{A}_i\\) est en FNBC~?\\\nRappelons que, par d√©finition, \\(\\mathcal{A}_i\\) est en FNBC si et seulement pour toute DF \\(X\\to Y\\) dans un ensemble √©quivalent √† \\(\\pi_{\\mathcal{A}_i}(\\Sigma)\\), soit \\(Y\\subset X\\) (DF triviale) soit \\(Y\\) est une super-clef pour \\(\\mathcal{A}_i\\) relativement √† \\(\\pi_{\\mathcal{A}_i}(\\Sigma)\\).\nDonc \\(\\mathcal{A}_i\\) est en FNBC si et seulement si pour tout \\(X\\subset \\mathcal{A}_i\\), pour la DF locale \\(X\\to (X\\cap\\mathcal{A}_i)^+\\cap \\mathcal{A}_i\\) on a \\((X\\cap\\mathcal{A}_i)^+\\cap \\mathcal{A}_i = X\\) (DF triviale) ou \\((X\\cap\\mathcal{A}_i)^+\\cap \\mathcal{A}_i=\\mathcal{A}_i\\) (c√†d \\(X\\) est une super-clef pour \\(\\mathcal{A}_i\\)).\nDe plus, on n‚Äôa pas besoin d‚Äôexaminer les cas \\(X=\\emptyset\\) ou \\(X=\\mathcal{A}_i\\) ou \\(cardinal(X)=cardinal(\\mathcal{A}_i)-1\\) (dans le dernier cas \\((X\\cap\\mathcal{A}_i)^+\\cap \\mathcal{A}_i=X\\) ou \\((X\\cap\\mathcal{A}_i)^+\\cap \\mathcal{A}_i=\\mathcal{A}_i\\))\n\\(\\mathcal{A}_1\\) n‚Äôest pas en FNBC car IdP ‚Üí NomP, PrenomP est locale √† \\(\\mathcal{A}_1\\) et IdP n‚Äôest pas une super-clef de \\(\\mathcal{A}_1\\).\n\\(\\mathcal{A}_2\\) est en FNBC car:\n\nIdM^+ ‚à© \\mathcal{A}_2 = {idM, NomM, PrenomM} ‚à© \\mathcal{A}_2 =IdM\n\\(DateRV^+\\cap\\mathcal{A}_2=\\left\\{dateRV\\right\\}\\cap\\mathcal{A}_2=DateRV\\)\n\\(IdInterV^+\\cap\\mathcal{A}_2=\\left\\{idInterV\\right\\}\\cap\\mathcal{A}_2=IdInterV\\)\\\n\n\\(\\mathcal{A}_3\\) est en FNBC car :\n\n\\(IdM^+\\cap\\mathcal{A}_3=\\left\\{idM,NomM,PrenomM\\right\\}\\cap\\mathcal{A}_3=\\mathcal{A}_3\\)\\\n\\(NomM^+\\cap\\mathcal{A}_3=\\left\\{nomM\\right\\}\\cap\\mathcal{A}_3=NomM\\)\\\n\\(PrenomM^+\\cap\\mathcal{A}_3=\\left\\{prenomM\\right\\}\\cap\\mathcal{A}_3=PrenomM\\)\n\n\n\n\nM√™mes questions pour la d√©composition :\n\n\\[\n\\begin{array}{rl}\n\\mathcal{A}_1 &=\\left\\{\\texttt{IdM,HeureRV,DateRV,IdP}\\right\\}\\\\\n\\mathcal{A}_2 &=\\left\\{\\texttt{IdP,NomP,PrenomP}\\right\\}, \\\\\n\\mathcal{A}_3 &=\\left\\{\\texttt{IdM,DateRV,IdInterV}\\right\\},\\\\\n\\mathcal{A}_4 &=\\left\\{\\texttt{IdM,NomM,PrenomM}\\right\\}\n\\end{array}\n\\]\n\n\n\n\n\n\nSolution\n\n\n\nLa d√©composition est SPI. \\[\n\\begin{array}{|c|c|c|c|c|c|c|c|c|c|}\n\\hline  & IdM & NomM & PrenomM & DateRV & HeureRV & IdP & NomP & PrenomP & IdInterV \\\\\\hline\n\\hline \\mathcal{A}_1  & a & b_1 &  c_1& d & e & f & g_1 & h_1 & i_1 \\\\\n\\hline  \\mathcal{A}_2 & a_2 & b_2 & c_2 & d_2 & e_2 & f & g & h & i_2 \\\\\n\\hline \\mathcal{A}_3 & a & b_3 & c_3 & d & e_3 & f_3 & g_3 & h_3 & i \\\\\n\\hline \\mathcal{A}_4 & a & b & c & d_4 & e_4 & f_4 & g_4 & h_4 & i_4\\\\\n\\hline\n\\end{array}\n\\] (c) donne \\(b_1=b\\) et \\(c_1=c\\). (d) donne \\(g_1=g\\) et \\(h_1=h\\). (b) donne \\(i_1=i\\). La premi√®re ligne est \\((a,b,\\dots,i)\\).\\ \\ (b), (c), (d) sont pr√©serv√©es puisque locales.\\ Est-ce que (e) est pr√©serv√©e~? Initialisation \\(Z:=\\left\\{idP,DateRV,HeureRV\\right\\}\\)\\ \\((Z\\cap\\mathcal{A}_1)^+\\cap\\mathcal{A}_1=\\left\\{idP,DateRV,HeureRV\\right\\}^+\\cap\\mathcal{A}_1=\\mathcal{A}\\cap\\mathcal{A}_1=\\mathcal{A}_1\\), donc \\(Z:=\\mathcal{A}_1\\).\\ \\((Z\\cap\\mathcal{A}_3)^+\\cap\\mathcal{A}_3=\\left\\{idM,DateRV\\right\\}^+\\cap\\mathcal{A}_3=\\mathcal{A}_3\\) qui contient \\(IdInterV\\). On conclut que (e) est pr√©serv√©e.\\ (f) est pr√©serv√©e car (f) est impliqu√©e par \\(IdP,DateRV,HeureRV\\to IdM\\) (locale √† \\(\\mathcal{A}_1\\)) et (c). Est-ce que (a) est pr√©serv√©e~? Initialisation \\(Z:=\\left\\{idM,DateRV,HeureRV,IdInterV\\right\\}\\)\\ \\((Z\\cap\\mathcal{A}_1)^+\\cap\\mathcal{A}_1=\\left\\{idM,DateRV,HeureRV\\right\\}^+\\cap\\mathcal{A}_1=ALL\\cap\\mathcal{A}_1=\\mathcal{A}_1\\) qui contient \\(IdP\\). Donc (a) est pr√©serv√©e.\\ \\ car\\ \\(IdM^+\\cap\\mathcal{A}_1=IdM\\), \\(HeureRV^+\\cap\\mathcal{A}_1=HeureRV\\), \\(DateRV^+\\cap\\mathcal{A}_1=DateRV\\), \\(IdP^+\\cap\\mathcal{A}_1=IdP\\)\\ \\(\\left\\{idM,HeureRV\\right\\}^+\\cap\\mathcal{A}_1=\\left\\{idM,HeureRV\\right\\}\\), \\(\\left\\{idM,DateRV\\right\\}^+\\cap\\mathcal{A}_1=\\left\\{idM,DateRV\\right\\}\\), \\(\\left\\{idM,IdP\\right\\}^+\\cap\\mathcal{A}_1=\\left\\{idM,IdP\\right\\}\\), \\(\\left\\{heureRV,DateRV\\right\\}^+\\cap\\mathcal{A}_1=\\left\\{heureRV,DateRV\\right\\}\\), \\(\\left\\{heureRV,IdP\\right\\}^+\\cap\\mathcal{A}_1=\\left\\{heureRV,IdP\\right\\}\\), \\(\\left\\{dateRV, IdP\\right\\}^+\\cap\\mathcal{A}_1=\\left\\{dateRV, IdP\\right\\}\\)\\ car\\ \\(IdP^+\\cap\\mathcal{A}_2=\\mathcal{A}_2\\), \\(NomP^+\\cap\\mathcal{A}_2=NomP\\), \\(PrenomP^+\\cap\\mathcal{A}_2=PrenomP\\)\\ car\\ \\(IdM^+\\cap\\mathcal{A}_3=IdM\\), \\(DateRV^+\\cap\\mathcal{A}_3=DateRV\\), \\(IdInterV^+\\cap\\mathcal{A}_3=IdInterV\\)\\ car\\ \\(IdM^+\\cap\\mathcal{A}_4=\\mathcal{A}_4\\), \\(NomM^+\\cap\\mathcal{A}_4=NomM\\), \\(PrenomM^+\\cap\\mathcal{A}_4=PrenomM\\)\n\n\n\n\nExercice\nSoit une relation concernant des personnes r√©sidant en France avec les attributs suivants:\nNom, Num√©ro de s√©curit√© sociale, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone\navec l‚Äôensemble \\(\\Sigma\\) de DF suivantes~:\nNum√©ro de s√©curit√© sociale ‚Üí Nom, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone \nCommune ‚Üí D√©partement \nCode postal ‚Üí Commune, D√©partement\n\nCe sch√©ma est-il en forme normale de Boyce-Codd ?\n\nSoit la d√©composition \\[\\mathcal{A}_1=\\left\\{\\texttt{Code postal}, \\texttt{Commune}, \\texttt{D√©partement}\\right\\}\\] et \\[\\mathcal{A}_2=\\left\\{\\texttt{Num√©ro de s√©curit√© sociale}, \\texttt{Nom}, \\texttt{Code postal},\\texttt{Num√©ro de t√©l√©phone}\\right\\}\\]\n\nChaque \\(\\mathcal{A}_i\\) est-elle en forme normale de Boyce-Codd ?\nCette d√©composition pr√©serve-t-elle les d√©pendances fonctionnelles ?\nCette d√©composition est-elle sans perte d‚Äôinformation ?\nM√™mes questions pour la d√©composition \\[\\mathcal{A}_1=\\left\\{\\texttt{Commune}, \\texttt{D√©partement}\\right\\}\\]\n\n\\[\\mathcal{A}_2=\\left\\{\\texttt{Num√©ro de s√©curit√© sociale}, \\texttt{Nom}, \\texttt{Commune}, \\texttt{Code postal},\\texttt{Num√©ro de t√©l√©phone}\\right\\}\\]\n\n\n\n\n\n\nSolution\n\n\n\n\nNon, car on a \\(\\texttt{Commune} \\to \\texttt{D√©partement}\\) et \\(\\texttt{Commune}\\) n‚Äôest pas une clef.\n\\(\\mathcal{A}_1\\) n‚Äôest pas en FNBC car \\(\\texttt{Commune} \\to \\texttt{D√©partement}\\) est locale √† \\(\\mathcal{A}_1\\) et \\(\\texttt{Commune}\\) n‚Äôest pas une clef de \\(\\mathcal{A}_1\\).\\ \\(\\mathcal{A}_2\\) est en FNBC puisque \\(\\pi_{\\mathcal{A}_2}(\\Sigma)\\) est √©quivalent √†\\ \\(\\left\\{\\texttt{Num√©ro de s√©curit√© sociale}\\to \\texttt{Nom, Code postal, Num√©ro de t√©l√©phone }\\right\\}\\)\\ Les DF sont pr√©serv√©es car \\(\\Sigma\\) est √©quivalent √†\\ \\[\\{\\texttt{Num√©ro de s√©curit√© sociale}\\to \\texttt{Nom, Code postal, Num√©ro de t√©l√©phone }\\};\\] \\[\\texttt{Commune}\\to\\texttt{D√©partement} ;\\texttt{Code postal}\\to\\{\\texttt{Commune, D√©partement}\\}\\] qui ne contient que des DF locales.\\ La d√©composition est SPI.\n\\(\\mathcal{A}_1\\) est en FNBC car \\(\\mathcal{A}_2\\) est de cardinal 2.\\ \\(\\mathcal{A}_2\\) n‚Äôest pas en FNBC car \\(\\texttt{CodePostal} \\to \\texttt{D√©partement}, \\texttt{Commune}\\) est locale et \\(\\texttt{CodePostal}\\) n‚Äôest pas une cl√© de \\(\\mathcal{A}_2\\)\\ La d√©composition est SPI et pr√©serve les DF.\n\n\n\n\n\nExercice\nSoit un sch√©ma d‚Äôattributs \\(A_1, A_2,\\dots A_n\\) et un ensemble de d√©pendances fonctionnelles. Calculer le nombre de super-clefs (en fonction de \\(n\\)) dans les cas suivants~:\n\nLa seule clef est \\(\\left\\{A_1\\right\\}\\).\nLes seules clefs sont \\(\\left\\{A_1\\right\\}\\) et \\(\\left\\{A_2\\right\\}\\).\nLes seules clefs sont \\(\\left\\{A_1,A_2\\right\\}\\) et \\(\\left\\{A_3,A_4\\right\\}\\).\nLes seules clefs sont \\(\\left\\{A_1,A_2\\right\\}\\) et \\(\\left\\{A_1,A_3\\right\\}\\).\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\\(2^{n-1}\\)\n\\(2^{n-2} + 2^{n-2} + 2^{n-2}\\)\n\\(2^{n-4}Titremes 3Titremes 2 + 2^{n-4}\\)\n\\(3Titremes 2^{n-3}\\)\n\n\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\{ A \\to B, B \\to C\\} \\]\n\nQuelle est la fermeture \\(\\{A\\}^+\\) de \\(\\{A\\}\\) ?\n\n\n\n\n\n\n\nSolution\n\n\n\nInitialisation : \\(X  =\\{A\\}\\)\nEtape 1 : Il existe une DF dont la partie gauche est incluse dans $ X$ : \\(A \\to B\\). On rajoute les attributs en partie droite.\nD‚Äôo√π \\(X  = \\{A, B\\}\\)\nEtape 2: Il existe une DF dont la partie gauche est incluse dans $ X$ : \\(B \\to C\\). On rajoute les attributs en partie droite.\nD‚Äôo√π \\(X  = \\{A,B,C\\}\\).\nC‚Äôest fini, plus de DF √† utiliser. Conclusion \\(\\left\\{A\\right\\}^+=\\left\\{A,B,C\\right\\}\\)\n\n\n\nQuelles sont les super-cl√©s ? Les cl√©s ?\n\n\n\n\n\n\n\nSolution\n\n\n\nUne clef doit contenir \\(\\left\\{A,D\\right\\}\\) puis ces deux attributs ne sont √† droite d‚Äôaucune DF de \\(\\Sigma\\). De plus \\(\\left\\{A,D\\right\\}^+=\\left\\{A,B,C,D\\right\\}\\). La seule clef est donc \\(\\{A,D\\}\\).\n\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D,E,F\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\Bigl\\{ \\left\\{A,B\\right\\}\\to C, \\left\\{B,C\\right\\}\\to \\left\\{A,D\\right\\}, D\\to E, \\left\\{C,F\\right\\}\\to B \\Bigr\\}\\]\n\nCalculer la fermeture \\(\\left\\{A,B\\right\\}^+\\) de \\(\\left\\{A,B\\right\\}\\).\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(\\left\\{A,B\\right\\}\\to D\\)~?\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(D\\to A\\)~?\n\n\n\n\n\n\n\nSolution\n\n\n\n\nOn obtient \\(\\left\\{A,B\\right\\}^+=\\left\\{A,B,C,D,E\\right\\}\\).\nOui car \\(D\\in\\left\\{A,B\\right\\}^+\\)\nNon car \\(\\left\\{D\\right\\}^+=\\left\\{D,E\\right\\}\\) ne contient pas \\(A\\).\n\n\n\n\n\n\nExercice\nOn consid√®re une sch√©ma \\(\\mathcal{A}\\) avec les attributs\nPropri√©taire, Occupant, Adresse, Noapt, Nbpi√®ces, Nbpersonnes\nUn nuplet/tuple (p, o, a, n, nb1, nb2) ayant la signification suivante : La personne o habite avec nb2 personnes l‚Äôappartement de num√©ro n ayant nb1 pi√®ces dont le propri√©taire est p.\nUne analyse de cette relation nous fournit un ensemble initial \\(\\Sigma\\) de d√©pendances fonctionnelles\nOccupant ‚Üí Adresse\nOccupant ‚Üí Noapt\nOccupant ‚Üí Nbpersonnes\nAdresse, Noapt ‚Üí Proprietaire\nAdresse, Noapt ‚Üí Occupant\nAdresse, Noapt ‚Üí Nbpieces\n\nD√©terminer les cl√©s du sch√©mas\nLes sch√©ma est-il en FN3 ?\nSi la r√©ponse est Non, d√©composer sans perte d‚Äôinformation et sans perte de d√©pendances fonctionnelles.\n\n\n\nExercice\n\nSoit le sch√©ma \\[\\mathcal{A}=\\{\\texttt{IdLivre, Titre, Langue, Pays, IdTraducteur, Nom, Date}\\}\\] et l‚Äôensemble de DF\nIdLivre ‚Üí Titre \nLangue ‚Üí Pays \nIdTraducteur ‚Üí Nom \nIdLivre, IdTraducteur, Langue ‚Üí Date\nIdLivre, IdTraducteur ‚Üí Langue\nAppliquer l‚Äôalgorithme de d√©composition vu en cours pour obtenir une d√©composition de \\(\\mathcal{A}\\) qui respecte la FNBC et est sans perte d‚Äôinformation. D√©terminer quelles DF sont pr√©serv√©es.\n\n\n\n\n\n\nSolution\n\n\n\n\\(\\texttt{IdLivre}^+=\\texttt{IdLivre, Titre}\\) \\[ \\mathcal{A}_1=\\texttt{IdLivre,Titre} \\quad \\mathcal{A}_2=\\texttt{IdLivre, Langue, Pays, IdTraducteur, Nom, Date}\\] \\(\\texttt{Langue}^+= \\texttt{Langue, Pays}\\) \\[ \\mathcal{A}_{2,1}=\\texttt{Langue, Pays} \\quad \\mathcal{A}_{2,2}=\\texttt{IdLivre, Langue, IdTraducteur, Nom, Date} \\] \\(\\texttt{IdTraducteur}^+=\\texttt{IdTraducteur, Nom}\\) \\[ \\mathcal{A}_{221}=\\texttt{IdTraducteur, Nom} \\quad \\mathcal{A}_{222}=\\texttt{IdLivre,Langue, IdTraducteur, Date}\\] La d√©composition FNBC obtenue est \\[ \\{\\texttt{IdLivre,Titre} \\}\\quad \\{\\texttt{Langue, Pays}\\} \\quad \\{\\texttt{IdTraducteur, Nom}\\} \\quad \\{\\texttt{IdLivre,Langue, IdTraducteur, Date}\\}\\] qui pr√©serve toutes les DF.\n\n\n\n\nExercice\nSoit le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H‚ÄÉ \nF ‚Üí CD‚ÄÉ \nD ‚Üí G\n\nAppliquer l‚Äôalgorithme de d√©composition vu en cours pour obtenir une d√©composition de \\(\\mathcal{A}\\) qui respecte la FNBC et est sans perte d‚Äôinformation. D√©terminer quelles DF sont pr√©serv√©es.\nPeut-on, en ajoutant un sous-sch√©ma √† la d√©composition, obtenir une d√©composition FNBC sans perte d‚Äôinformation et sans perte de DF ?\n\n\n\n\n\n\n\nSolution\n\n\n\nRappelons l‚Äôalgorithme pour d√©composer un sch√©ma \\(\\mathcal{A}\\)~:\n\nOn consid√®re la d√©composition initiale \\(\\rho=\\{\\mathcal{A}\\}\\).\nTant qu‚Äôil existe un sous-sch√©ma \\(\\mathcal{B}\\in\\rho\\) et \\(X\\subset \\mathcal{B}\\) tels que \\(X^+\\cap\\mathcal{B}\\not=X\\) et \\(X^+\\cap\\mathcal{B}\\not=\\mathcal{B}\\) (ce qui signifie que la DF locale \\(X\\to X^+\\cap\\mathcal{B}\\) est une violation de FNBC pour \\(\\mathcal{B}\\)), on remplace \\(\\mathcal{B}\\) par les deux sous-sch√©mas \\[\\mathcal{B}_1=X^+\\cap\\mathcal{B} \\text{ et } \\mathcal{B}_2=(\\mathcal{B}\\setminus X^+)\\cup X\\] De plus il n‚Äôy a pas besoin de consid√©rer les parties \\(X\\subset\\mathcal{B}\\) telles que \\(card(X)=card(\\mathcal{B})-1\\) puisque dans ce cas on \\(X^+\\cap \\mathcal{B}=X\\) ou \\(X^+\\cap\\mathcal{B}=\\mathcal{B}\\).\n\nIl est garanti que la d√©composition finale est en FNBC et SPI. Par contre toutes les DF ne sont pas pr√©serv√©es en g√©n√©ral. De plus on obtient, en g√©n√©ral, des d√©compositions diff√©rentes si on change les DF (violant FNBC) utilis√©es. } - \\(BE^+=BEACH\\) donc on remplace \\(\\mathcal{A}\\) par \\[ \\mathcal{A}_1=BEACH \\quad \\mathcal{A}_2=BDEFG\\] \\(B^+=BH\\) donc on remplace \\(\\mathcal{A}_1\\) par \\[\\mathcal{A}_{11}=BH \\quad \\mathcal{A}_{12}=BEAC\\] \\(\\mathcal{A}_{11}\\) est en FNBC car de cardinal 2. \\(\\mathcal{A}_{12}\\) est en FNBC car \\[B^+\\cap\\mathcal{A}_{12}=B, E^+\\cap\\mathcal{A}_{12}=E, A^+\\cap\\mathcal{A}_{12}=A, C^+\\cap\\mathcal{A}_{12}=C \\] \\[BE^+\\cap\\mathcal{A}_{12}=BEAC, BA^+\\cap\\mathcal{A}_{12}=BA, BC^+\\cap\\mathcal{A}_{12}=BC, EA^+\\cap\\mathcal{A}_{12}=EA, EC^+\\cap\\mathcal{A}_{12}=EC\\] \\[ AC^+\\cap\\mathcal{A}_{12}=AC\\] \\(D^+=DG\\) donc on remplace \\(\\mathcal{A}_2\\) par \\[\\mathcal{A}_{21}=DG \\quad \\mathcal{A}_{22}=BDEF\\] \\(\\mathcal{A}_{21}\\) est en FNBC car de cardinal 2. \\(F^+=CD\\) donc on remplace \\(\\mathcal{A}_{22}\\) par \\[\\mathcal{A}_{221}=FD \\quad \\mathcal{A}_{222}=BEF\\] qui sont tous deux en FNBC\nD√©composition obtenue~:\nBH  BEAC  DG  FD  BEF\nLa seule DF qui n‚Äôest pas pr√©serv√©e est \\(F\\to C\\). Toutes les variantes (en changeant les DF utilis√©es) que j‚Äôai test√©es, donne une d√©composition qui ne pr√©serve pas toutes les DF. Bien s√ªr ce n‚Äôest pas une preuve que l‚Äôalgorithme ne peut pas donner une d√©composition sans perte de DF. - En ajoutant \\(FC\\) √† la d√©composition pr√©c√©dente, on obtient\nBH ‚ÄÉ BEAC ‚ÄÉ DG ‚ÄÉ FD ‚ÄÉ BEF ‚ÄÉ FC\nqui est en FNBC et pr√©serve les DF. De plus elle est SPI puisque la d√©composition initiale est SPI. (\\(R \\bowtie \\pi_{FC}(R)=R\\) pour toute relation \\(R\\))\n\n\n\n\nExercice\nReprendre les questions de l‚Äôexercice pr√©c√©dent pour le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H\nF ‚Üí CD\nD ‚Üí G\nA‚Üí E\n\n\n\n\n\n\nSolution\n\n\n\n\nDe mani√®re similaire √† l‚Äôexercice pr√©c√©dent on arrive √†\n\nBH ‚ÄÉ BEAC ‚ÄÉ DG ‚ÄÉ FD ‚ÄÉ BEF\nmais, ici, BEAC n‚Äôest pas en FNBC (les autres le sont). A^+=AE donc on remplace BEAC par AE et ABC. Une d√©composition FNBC est donc BH ‚ÄÉ AE ‚ÄÉ ABC ‚ÄÉ DG ‚ÄÉ FD ‚ÄÉ BEF Les DF BE ‚Üí AC et F ‚Üí C ne sont pas pr√©serv√©es. Les autres sont pr√©serv√©es.\n\nIl n‚Äôexiste de d√©composition FNBC qui pr√©serve BE ‚Üí A. En effet, si BE ‚Üí A est pr√©serv√©e, il existe une DF locale √† un sous-sch√©ma \\(\\mathcal{B}\\) de la forme X ‚Üí A. Cela implique que BE ‚äÇ X et donc BEA ‚äÇ B. Par suite \\(\\mathcal{B}\\) n‚Äôest pas en FNBC √† cause de \\(A^+=AE\\)."
  },
  {
    "objectID": "solutions/td4.html",
    "href": "solutions/td4.html",
    "title": "TD 4: SQL",
    "section": "",
    "text": "Avec solutions\nDocumentation Postgres\nDocumentation Postgres en Fran√ßais"
  },
  {
    "objectID": "solutions/td4.html#count",
    "href": "solutions/td4.html#count",
    "title": "TD 4: SQL",
    "section": "Count",
    "text": "Count\nPour compter les pays en Europe, on √©crira :\nSELECT COUNT(countrycode)\nFROM world.country\nWHERE continent='Europe';\nCette requ√™te renvoie une table ayant une ligne et une colonne contenant le nombre de lignes dans le r√©sultat de la requ√™te."
  },
  {
    "objectID": "solutions/td4.html#sum-max-min-avg",
    "href": "solutions/td4.html#sum-max-min-avg",
    "title": "TD 4: SQL",
    "section": "Sum, Max, Min, Avg",
    "text": "Sum, Max, Min, Avg\nUne autre fonction importante est la fonction SUM(col) qui effectue la somme des valeurs (num√©riques) d‚Äôune colonne :\nSELECT SUM(population_country)\nFROM world.country;\nrenvoie la population mondiale.\nOn peut de m√™me utiliser GROUP BY pour faire des paquets :\nSELECT continent, SUM(population_country)\nFROM world.country\nGROUP BY continent;\nrenvoie la population de chaque continent.\nOn peut m√™me faire des op√©rations sur la colonne √† l‚Äôint√©rieur de SUM. Par exemple: SUM(percentage/100).\n\n√âcrire une requ√™te qui renvoie le nombre de langues officielles par pays\n\n\n\n\n\n\n\nSolution\n\n\n\n\nWITH s AS(\n    SELECT L.countrycode, sum(CAST (isofficial AS INTEGER)) AS n_official\n    FROM  world.countrylanguage as L\n    GROUP BY L.countrycode)\nSELECT s.*, c.name_country\nFROM world.country c NATURAL JOIN s\nORDER BY s.n_official DESC, s.countrycode;"
  },
  {
    "objectID": "solutions/td5.html",
    "href": "solutions/td5.html",
    "title": "TD 5: SQL",
    "section": "",
    "text": "Avec solutions"
  },
  {
    "objectID": "solutions/td5.html#over-partition-by",
    "href": "solutions/td5.html#over-partition-by",
    "title": "TD 5: SQL",
    "section": "OVER (PARTITION BY ‚Ä¶)",
    "text": "OVER (PARTITION BY ‚Ä¶)\nCette construction peut √™tre combin√©e avec n‚Äôimporte quelle fonction d‚Äôaggr√©gation.\nCette requ√™te indique pour chaque ville, la ‚Äúpopulation moyenne‚Äù des villes de ce pays (cette moyenne n‚Äôa aucun sens).\nSELECT id, name_city, population_city, \n       avg(population_city) OVER (PARTITION BY countrycode)  AS avg_pop\nFROM world.city;  \nSans le m√©canisme de fen√™trage, on pourrait obtenir le r√©sultat au prix d‚Äôune jointure\n WITH tmp AS (\n  SELECT c.countrycode, AVG(c.population_city) AS avg_pop\n  FROM world.city c\n  GROUP BY c.countrycode\n ) \n  SELECT cc.id, cc.name_city, cc.population_city, tmp.avg_pop\n  FROM world.city cc NATURAL JOIN tmp;"
  },
  {
    "objectID": "solutions/td5.html#over-partition-by-order-by",
    "href": "solutions/td5.html#over-partition-by-order-by",
    "title": "TD 5: SQL",
    "section": "OVER (PARTITION BY ‚Ä¶ ORDER BY)",
    "text": "OVER (PARTITION BY ‚Ä¶ ORDER BY)\nOn peut partitioner et trier.\nCette construction est tr√®s pratique pour ranger les tuples d‚Äôun sous-groupe.\nDans world, si on veut ranger les langues parl√©es dans un pays par popularit√© d√©croissante, on peut proc√©der ainsi.\nSELECT countrycode, LANGUAGE, \nRANK() OVER (PARTITION BY countrycode ORDER BY percentage DESC)  AS rnk\nFROM world.countrylanguage ;"
  },
  {
    "objectID": "solutions/td5.html#rank-over",
    "href": "solutions/td5.html#rank-over",
    "title": "TD 5: SQL",
    "section": "RANK() OVER ()",
    "text": "RANK() OVER ()\nOn peut ne pas partitionner en utilisant l‚Äôexpression OVER (). Par exemple, si on veut obtenir le rang des tuples d‚Äôune table sur un tri particulier.\nSELECT countrycode, name_country, \n       RANK() OVER (ORDER BY population_country DESC)  AS rnk\nFROM world.country ;"
  },
  {
    "objectID": "solutions/td5.html#autres-types-de-fen√™tres",
    "href": "solutions/td5.html#autres-types-de-fen√™tres",
    "title": "TD 5: SQL",
    "section": "Autres types de fen√™tres",
    "text": "Autres types de fen√™tres\nLa construction OVER ( ...) n‚Äôest pas utilis√©e exclusivement avec des partitions (peut-√™tre triviales), on peut aussi d√©finir des fen√™tres glissantes.\nLes fonctions fen√™tre ne sont autoris√©es que dans la liste SELECT et la clause ORDER BY de la requ√™te. Elles sont interdites ailleurs, par exemple dans les clauses GROUP BY, HAVING et WHERE."
  },
  {
    "objectID": "solutions/td5.html#forme-g√©n√©rale",
    "href": "solutions/td5.html#forme-g√©n√©rale",
    "title": "TD 5: SQL",
    "section": "Forme g√©n√©rale",
    "text": "Forme g√©n√©rale\nCREATE OR REPLACE FUNCTION  schema_name.func_name(p_arg1 p_arg1_datatype, ..., [OUT o_arg1 o_arg1_datatype, ...])\nRETURNS some type | RECORD | SETOF some type | TABLE (..) \nLANGUAGE SQL AS\n$$\nSQL statement ;\nSQL statement ;\n...\nSQL statement ;\n$$ ;"
  },
  {
    "objectID": "solutions/td5.html#fonctions-qui-retournent-un-type-simple",
    "href": "solutions/td5.html#fonctions-qui-retournent-un-type-simple",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent un type simple",
    "text": "Fonctions qui retournent un type simple\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la population maximale parmi les capitales de la r√©gion (voir td2 requ√™te 1).\nCREATE OR REPLACE FUNCTION username.taille_max_capitale_region(p_region text)\nRETURNS INTEGER LANGUAGE SQL AS\n$$\nSELECT MAX(population_city) AS max_pop\nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region AND cc.population_city IS NOT NULL;\n$$ ;"
  },
  {
    "objectID": "solutions/td5.html#fonctions-qui-retournent-un-type-compos√©",
    "href": "solutions/td5.html#fonctions-qui-retournent-un-type-compos√©",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent un type compos√©",
    "text": "Fonctions qui retournent un type compos√©\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie le nom et la population de la capitale la plus peupl√©e de cette r√©gion (voir td2 requ√™te 1).\nOn peut utiliser le qualifiant OUT pour d√©signer des param√®tres de sortie.\nCREATE OR REPLACE FUNCTION username.capitale(p_region text, OUT o_name_capital TEXT, OUT o_population_capital INTEGER)\nRETURNS RECORD  LANGUAGE SQL AS\n$$\nWITH r AS(\n  SELECT cc.*, RANK() OVER (PARTITION BY c.region \n                            ORDER BY cc.population_city DESC) AS rnk\n  FROM world.country c JOIN world.city cc ON (c.capital=cc.id)\n  WHERE c.region=p_region)\nSELECT r.name_city,  r.population_city\nFROM r \nWHERE r.rnk = 1 ;\n$$ ;"
  },
  {
    "objectID": "solutions/td5.html#fonctions-qui-retournent-un-type-compos√©-d√©fini-par-les-lignes-dune-table",
    "href": "solutions/td5.html#fonctions-qui-retournent-un-type-compos√©-d√©fini-par-les-lignes-dune-table",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent un type compos√© d√©fini par les lignes d‚Äôune table",
    "text": "Fonctions qui retournent un type compos√© d√©fini par les lignes d‚Äôune table\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la description de la capitale la plus peupl√©e de cette r√©gion (voir td2 requ√™te 1).\nCREATE OR REPLACE FUNCTION username.capitale(p_region text)\nRETURNS world.city  LANGUAGE SQL AS\n$$\nWITH r AS(\n  SELECT cc.*, RANK() OVER (PARTITION BY c.region \n                            ORDER BY cc.population_city DESC) AS rnk\n  FROM world.country c JOIN world.city cc ON (c.capital=cc.id)\n  WHERE c.region=p_region\n)\nSELECT r.id, r.name_city, r.countrycode, r.district, r.population_city\nFROM r \nWHERE r.rnk = 1 ;\n$$ ;"
  },
  {
    "objectID": "solutions/td5.html#fonctions-qui-retournent-une-table",
    "href": "solutions/td5.html#fonctions-qui-retournent-une-table",
    "title": "TD 5: SQL",
    "section": "Fonctions qui retournent une table",
    "text": "Fonctions qui retournent une table\nDans le sch√©ma world, on veut √©crire une fonction qui prend en argument une r√©gion et renvoie la table des capitales de la r√©gion (voir td2 requ√™te 1).\n\nTable de sch√©ma explicite\nOn se contente d‚Äôabord de renvoyer le nom de la capitale. On explicite le sch√©ma de la table r√©sultat\nCREATE OR REPLACE FUNCTION username.capitales_region(p_region text)\nRETURNS TABLE (name_capital text) LANGUAGE SQL AS\n$$\nSELECT cc.name_city \nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region ;\n$$ ;\n\n\nTable de m√™me sch√©ma qu‚Äôune autre table\nDocumentation\nOn veut maintenant r√©cup√©rer une table de m√™me sch√©ma que city.\n\n\n\n\n\n\nLa solution est tr√®s simple. On profite de ce qu‚Äô√† chaque table correspond un type de m√™me nom et on utilise le mot-cl√© SETOF.\n\n\n\nCREATE OR REPLACE FUNCTION username.capitales_region_large(p_region text)\nRETURNS SETOF world.city  LANGUAGE SQL AS\n$$\nSELECT cc.* \nFROM world.country c JOIN world.city cc ON (c.capital=cc.id)\nWHERE c.region=p_region ;\n$$ ;"
  },
  {
    "objectID": "solutions/td9.html",
    "href": "solutions/td9.html",
    "title": "TD 9: Normalisation et d√©pendances",
    "section": "",
    "text": "Avec solutions\n\n\n\n\n\n\n\n\n\n\n\n\nAvec solutions\n\n\n\n\n\n\n\n\n\n\n\n\n\nL3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle\n\n\n\n\n\n\n\n\nD√©finitions\nUne d√©pendance fonctionnelle est une expression de la forme \\[A_1,A_2,\\ldots,A_k \\rightarrow A_{k+1},\\ldots,A_n\\] o√π \\(A_1,A_2,\\ldots,A_k, A_{k+1},\\ldots,A_n\\) sont des attributs (colonnes) d‚Äôune base de donn√©es.\nElle signifie que deux tuples ayant la m√™me valeur sur \\(A_1,\\ldots,A_k\\) doivent avoir la m√™me valeur sur chaque colonnes \\(A_{k+1},\\ldots, A_n\\) (en fran√ßais : \\(A_1,\\ldots,A_k\\) d√©terminent \\(A_{k+1},\\ldots,A_n\\). On dit que les attributs \\(A_{k+1},\\ldots, A_n\\) d√©pendent fonctionnellement de \\(A_1,A_2,\\ldots,A_k\\).\nLa notion de d√©pendance est transitive : si \\(A \\rightarrow B\\) et \\(B \\rightarrow C\\) alors \\(A \\rightarrow C\\).\nUn ensemble de d√©pendances fonctionnelles \\(\\mathcal{F}\\) est 1 si aucune d√©pendance ne peut √™tre d√©duite des autres en utilisant les r√®gles suivantes :\n\ntrivialit√© : si \\(Y\\subseteq X\\) alors \\(X\\rightarrow Y\\)\naugmentation : si \\(X\\rightarrow Y\\) alors \\(X,Z\\rightarrow Y,Z\\) pour toute suite d‚Äôattributs \\(Z\\).\ntransitivit√© : si \\(X\\rightarrow Y\\) et \\(Y\\rightarrow Z\\) alors \\(X\\rightarrow Z\\)\nunion : si \\(X\\rightarrow Y\\) et \\(X\\rightarrow Z\\) alors \\(X\\rightarrow Y,Z\\)\nd√©composition/s√©paration si \\(X\\rightarrow Y\\) et \\(Z\\subseteq Y\\) alors \\(X\\rightarrow Z\\)\n\nLa cl√¥ture transitive des attributs \\(A_1,\\ldots, A_k\\) pour un ensemble de d√©pendances fonctionnelles \\(\\mathcal F\\) est l‚Äôensemble des attributs \\(B_1,\\ldots, B_{\\ell}\\) qui d√©pendent fonctionnellement de \\(A_1,\\ldots, A_k\\).\nOn la note \\[[A_1,\\ldots, A_k]^+_{\\mathcal{F}}\\] en oubliant \\(\\mathcal{F}\\) si le contexte est clair.\nUn ensemble d‚Äôattributs \\(A_1,\\ldots, A_k\\) est une super-cl√© pour une relation \\(R(B_1,\\ldots, B_{\\ell})\\) si ce sont des attributs de \\(R\\) et si sa cl√¥ture transitive contient \\(B_1,\\ldots, B_{\\ell}\\). C‚Äôest une cl√© si elle est minimale, c‚Äôest-√†-dire, aucun sous-ensemble strict de cette super-cl√© n‚Äôest une cl√©.\nUn sch√©ma est en :\n\n\\(\\text{FN}_1\\) si tout attribut est atomique.\n\\(\\text{FN}_2\\) si un attribut ne fait pas partie d‚Äôune clef, il ne peut pas d√©pendre d‚Äôune partie stricte d‚Äôune clef.\n\\(\\text{FN}_3\\) Pour toute d√©pendance fonctionnelle non triviale, le membre de gauche contient une clef ou tout attribut du membre de droit appartient √† une clef.\n\nUn sch√©ma et un ensemble de d√©pendances fonctionnelles peut se d√©composer en une collection de sch√©mas, dans le sens o√π chaque relation \\(R\\) peut se d√©composer en \\(R_1,\\ldots, R_k\\) tels que \\(R_i = \\pi_i(R)\\) pour une certaine projection \\(\\pi_i\\).\nOn dit cette d√©composition si toute relation \\(R\\) du sch√©ma d‚Äôorigine peut √™tre retrouv√©e √† partir des relations \\(R_1,\\ldots, R_k\\) : \\(R = \\pi_1(R) \\bowtie \\ldots \\bowtie \\pi_k(R)\\).\nOn dit que cette d√©composition respecte les d√©pendances fonctionnelles si celles-ci sont toujours satisfaites par la nouvelle d√©composition.\n\n\nExercice\nSoit une relation concernant des personnes en France avec les attributs suivants~:\\ Nom, Num√©ro de s√©curit√© sociale, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone\nQuelles sont les d√©pendances fonctionnelles cens√©es √™tre satisfaites~?\n\n\n\n\n\n\nSolution\n\n\n\n\nNum√©ro de s√©curit√© sociale \\(\\to\\) Nom, Commune, D√©partement, Code postal, Num√©ro de t√©l√©phone\nCommune, D√©partement \\(\\longrightarrow\\) Code postal\nCode postal \\(\\to\\) D√©partement\n\n\n\n\n\nExercice\nSoit un sch√©ma d‚Äôattributs \\(A_1, A_2,\\dots A_n\\) et un ensemble de d√©pendances fonctionnelles. Calculer le nombre de super-clefs (en fonction de \\(n\\)) dans les cas suivants~:\n\nLa seule clef est \\(\\{A_1\\}\\).\nLes seules clefs sont \\(\\{A_1\\}\\) et \\(\\{A_2\\}\\).\nLes seules clefs sont \\(\\{A_1,A_2\\}\\) et \\(\\{A_3,A_4\\}\\).\nLes seules clefs sont \\(\\{A_1,A_2\\}\\) et \\(\\{A_1,A_3\\}\\).\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\\(2^{n-1}\\)\n\\(2^{n-2} + 2^{n-2} + 2^{n-2}\\)\n\\(2^{n-4}\\times 3\\times 2 + 2^{n-4}\\)\n\\(3\\times 2^{n-3}\\)\n\n\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\{ A \\longrightarrow B, B \\longrightarrow C\\} \\]\n\nQuelle est la fermeture \\(\\{A\\}^+\\) de \\(\\{A\\}\\) ?\n\n\n\n\n\n\n\nSolution\n\n\n\nInitialisation : \\(X  =\\{A\\}\\)\nEtape 1 : Il existe une DF dont la partie gauche est incluse dans $ X$ : \\(A \\longrightarrow B\\). On rajoute les attributs en partie droite. D‚Äôo√π \\(X  = \\{A, B\\}\\)\nEtape 2: Il existe une DF dont la partie gauche est incluse dans $ X$ : \\(B \\longrightarrow C\\). On rajoute les attributs en partie droite. D‚Äôo√π \\(X  = \\{A,B,C\\}\\).\nC‚Äôest fini, plus de DF √† utiliser. Conclusion \\(\\{A\\}^+=\\{A,B,C\\}\\)\n\n\n\nQuelles sont les super-cl√©s ? Les cl√©s ?\n\n\n\n\n\n\n\nSolution\n\n\n\nUne clef doit contenir \\(\\{A,D\\}\\) puisque ces deux attributs ne sont √† droite d‚Äôaucune DF de \\(\\Sigma\\). De plus \\(\\{A,D\\}^+=\\{A,B,C,D\\}\\). La seule clef est donc \\(\\{A,D\\}\\).\n\n\n\n\nExercice\nSoit le sch√©ma \\(\\mathcal{A}=\\{A,B,C,D,E,F\\}\\) et l‚Äôensemble de d√©pendances fonctionnelles \\[\\Sigma = \\Bigl\\{ \\{A,B\\}\\to C, \\{B,C\\}\\to \\{A,D\\}, D\\to E, \\{C,F\\}\\to B \\Bigr\\}\\]\n\nCalculer la fermeture \\(\\{A,B\\}^+\\) de \\(\\{A,B\\}\\).\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(\\{A,B\\}\\to D\\)~?\nEst-ce que \\(\\Sigma\\) implique la d√©pendance fonctionnelle \\(D\\to A\\)~?\n\n\n\n\n\n\n\nSolution\n\n\n\n\nOn obtient \\(\\{A,B\\}^+=\\{A,B,C,D,E\\}\\).\nOui car \\(D\\in\\{A,B\\}^+\\)\nNon car \\(\\{D\\}^+=\\{D,E\\}\\) ne contient pas \\(A\\).\n\n\n\n\n\nExercice\nMontrer que les assertions suivantes sont fausses~:\n\n\\(A\\to B\\) implique \\(B\\to A\\).\nSi \\(\\{A,B\\}\\to C\\) et \\(A\\to C\\) alors \\(B\\to C\\).\nSi \\(\\{A,B\\}\\to C\\) alors \\(A\\to C\\) ou \\(B\\to C\\).\n\n\n\n\n\n\n\nSolution\n\n\n\n\nLa relation \\[\n\\begin{array}{|c|c|}\n\\hline A & B \\\\\\hline\n\\hline 1 & 2  \\\\\n\\hline 4 & 2  \\\\\n\\hline\n\\end{array}\n\\] satisfait \\(A\\to B\\) mais pas \\(B\\to A\\).\nLa relation \\[\n\\begin{array}{|c|c|c|}\n\\hline A & B & C\\\\\\hline\n\\hline 1 & 2 & 3 \\\\\n\\hline 4 & 2 & 4  \\\\\n\\hline\n\\end{array}\n\\] satisfait \\(\\{A,B\\}\\to C\\) et \\(A\\to C\\) mais pas \\(B\\to C\\).\nLa relation \\[\n\\begin{array}{|c|c|c|}\n\\hline A & B & C\\\\\\hline\n\\hline 1 & 2 & 3 \\\\\n\\hline 4 & 2 & 4  \\\\\n\\hline 1 & 3 & 1 \\\\\n\\hline\n\\end{array}\n\\] satisfait \\(\\{A,B\\}\\to C\\) mais ni \\(A\\to C\\) ni \\(B\\to C\\).\n\n\n\n\n\nExercice\n\nSoit le sch√©ma \\(\\mathcal{A}=\\{A, B,C, D, E, F, G, H\\}\\) et soit \\[\\Sigma = \\{AB \\longrightarrow C; \\ B \\longrightarrow D;  \\ CD \\longrightarrow E;  \\ CE \\longrightarrow GH; \\  G \\longrightarrow A\\} \\] Est-ce que les d√©pendances\n\\(A,B \\longrightarrow E\\)\n\\(B,G \\longrightarrow C\\)\n\\(A,B \\longrightarrow G\\)\n\nsont d√©ductibles de \\(\\Sigma\\)~?\n\n\n\n\n\n\nSolution\n\n\n\noui‚Ä¶ M√©thode √† suivre : pour la premi√®re et la troisi√®me, on calcule la fermeture de \\(\\{A,B\\}\\). On a \\(\\{A,B\\}^+=\\{A,B,C,D,E,G,H\\}\\).\nPour la seconde, on a \\(\\{B,G\\}^+=\\{A,B,C,D,E,G,H\\}\\).\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\nPour que \\(\\mathcal{F}\\) soit minimale, il y a 3 conditions √† remplir :\n\nF est sous forme canonique, un seul attribut √† droite.\nAucune DF redondante , i.e.¬†ne pouvant √™tre d√©duite des autres.\nAucune DF redondante √† gauche.\n\nn‚Äôest pas minimale: $C,E H $ est redondante √† gauche.\nOn la remplace par $C H $.\nDe m√™me \\(A \\longrightarrow H\\) est redondante.\nUne version minimale est :\n\\[\\mathcal{F} = \\{A \\longrightarrow B ; C \\longrightarrow H ; C \\longrightarrow E ; A \\longrightarrow C\\}\\]\n\n\n\nSoit \\[\\Sigma_1 = \\{A \\longrightarrow B ; C,E \\longrightarrow H ; C \\longrightarrow E ; A \\longrightarrow C,H\\}\\] et \\[\\Sigma_2 = \\{A \\longrightarrow B,C ;  C \\longrightarrow E,H\\}\\] Les deux ensembles de d√©pendances fonctionnelles \\(\\Sigma_1\\) et \\(\\Sigma_2\\) sont-ils √©quivalents ?\n\n\n\n\n\n\n\nSolution\n\n\n\nMontrons que \\(\\Sigma_1\\) implique \\(\\Sigma_2\\). \\(A\\to B\\) et \\(C\\to E\\) sont dans \\(\\Sigma_1\\). \\(A\\to C\\) est impliqu√© par \\(A\\to CH \\in \\Sigma_1\\). Donc \\(A\\to BC\\) se d√©duit de \\(\\Sigma_1\\). De plus \\(\\Sigma_1\\) implique \\(C\\to H\\) (puisque \\(\\Sigma_1\\) contient \\(C\\to E\\) et \\(CE\\to H\\)). Donc \\(\\Sigma_1\\) implique \\(C\\to EH\\). On a montr√© que toutes les DF de \\(\\Sigma_2\\) sont impliqu√©es par \\(\\Sigma_1\\).\\ Montrons que \\(\\Sigma_2\\) implique \\(\\Sigma_1\\).\\ \\(\\Sigma_2\\) contient \\(A\\to B\\).\\ \\(\\Sigma_2\\) contient \\(C\\to EH\\) qui implique \\(C\\to H\\) qui implique \\(CE\\to H\\).\\ \\(\\Sigma_2\\) contient \\(C\\to EH\\) qui implique \\(C\\to E\\).\\ \\(\\Sigma_2\\) implique \\(A\\to CH\\)‚Ä¶\n\n\n\n\nExercice : D√©composition et perte d‚Äôinformation\n\nOn consid√®re le sch√©ma de relation \\(\\mathcal{A}=\\{A,B,C\\}\\) et la d√©pendance fonctionnelle suivante:\n\n\\[\\Sigma=\\{  A,B \\longrightarrow C   \\}.\\]\nD√©terminer si la d√©composition suivante est sans perte d‚Äôinformation\n\\[\\mathcal{A}_1=\\{A,B\\} , \\quad \\mathcal{A}_2=\\{B,C\\}\\]\nen √©tudiant le cas de la table suivante :\n\n\n\n\n\nA\nB\nC\n\n\n\n\n1\n2\n3\n\n\n4\n2\n5\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\nCette relation satisfait \\(AB\\to C\\). De plus, la jointure naturelle des deux projections contient les deux nouveaux tuples (1,2,5) et (4,2,3). Donc il y a perte d‚Äôinformation.\n\n\n\nOn consid√®re le sch√©ma de relation \\(\\mathcal{A}=\\{A,B,C,D,E\\}\\) et les d√©pendances fonctionnelles suivantes:\n\n\\[\\Sigma=\\{  A \\longrightarrow C ; B \\longrightarrow C ; C \\longrightarrow D ; D,E \\longrightarrow C ; C,E \\longrightarrow A    \\}.\\]\nAppliquer l‚Äôalgorithme de poursuite pour d√©terminer si la d√©composition suivante est sans perte d‚Äôinformation :\n\\[ \\mathcal{A}_1=\\{A,D\\} , \\mathcal{A}_2=\\{A,B\\}    , \\mathcal{A}_3=\\{B,E\\} , \\mathcal{A}_4=\\{C,D,E\\}, \\mathcal{A}_5=\\{A,E\\} \\]\nM√™me question pour la d√©composition: \\[ \\mathcal{A}_1=\\{A,D\\}, \\mathcal{A}_2=\\{A,B\\}, \\mathcal{A}_3=\\{B,E\\}, \\mathcal{A}_4=\\{C,D\\}, \\mathcal{A}_5=\\{D,E\\}, \\mathcal{A}_6=\\{A,E\\} \\]\n\n\n\n\n\n\nSolution\n\n\n\nLa premi√®re d√©composition est SPI. On doit montrer que :\n\\(R=\\pi_{A,D}(R)\\bowtie \\pi_{A,B}(R)\\bowtie \\pi_{B,E}(R)\\bowtie \\pi_{C,D,E}(R) \\bowtie \\pi_{A,E}(R)\\).\nOn voit facilement que : \\(R \\subseteq\\pi_{A,D}(R)\\bowtie \\pi_{A,B}(R)\\bowtie \\pi_{B,E}(R)\\bowtie \\pi_{C,D,E}(R) \\bowtie \\pi_{A,E}(R)\\) et il faut montrer l‚Äôautre inclusion.\\ On consid√®re un tuple \\(t=(a,b,c,d,e)\\) de la jointure naturelle. Pour \\(1\\le i\\le 5\\), comme \\(\\pi_{\\mathcal{A}_i}(t) \\in \\pi_{\\mathcal{A}_i}(R)\\) il existe un tuple \\(t_i\\in R\\) tel que \\(\\pi_{\\mathcal{A}_i}(t)=\\pi_{\\mathcal{A}_i}(t_i)\\), ce que l‚Äôon repr√©sente par le tableau \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_2 & d_2 & e_2 \\\\\n\\hline  a_3& b & c_3 & d_3 & e \\\\\n\\hline  a_4 & b_4 & c & d & e \\\\\n\\hline  a & b_5 & c_5 & d_5 & e \\\\\n\\hline\n\\end{array}\n\\]\nPar la d√©pendance \\(A \\longrightarrow C\\), on sait que deux tuples ayant la m√™me valeur sur \\(A\\), ont la m√™me sur \\(C\\). On remplace dans la table les valeurs indic√©es par la valeur \\(c\\) quand c‚Äôest possible, ou on unifie simplement les valeurs indic√©es sinon (ici on prendra \\(c_1\\)).\n\\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d_2 & e_2 \\\\\n\\hline  a_3& b & c_3 & d_3 & e \\\\\n\\hline  a_4 & b_4 & c & d & e \\\\\n\\hline  a & b_5 & c_1 & d_5 & e \\\\\n\\hline\n\\end{array}\n\\]\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\nOn traite maintenant \\(B \\longrightarrow C\\).\n\\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d_2 & e_2 \\\\\n\\hline  a_3& b & c_1 & d_3 & e \\\\\n\\hline  a_4 & b_4 & c & d & e \\\\\n\\hline  a & b_5 & c_1 & d_5 & e \\\\\n\\hline\n\\end{array}\n\\]\nPour la d√©pendance \\(C \\longrightarrow D\\), on obtient :\n\\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d & e_2 \\\\\n\\hline  a_3& b & c_1 & d & e \\\\\n\\hline  a_4 & b_4 & c & d & e \\\\\n\\hline  a & b_5 & c_1 & d & e \\\\\n\\hline\n\\end{array}\n\\]\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\nPour \\(D,E \\longrightarrow C\\), on a cette fois (notez qu‚Äôon remplace tous les \\(c_1\\) du coup comme l‚Äôun d‚Äôentre eux devait l‚Äô√™tre) :\n\\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c& d & e_1 \\\\\n\\hline a & b & c & d & e_2 \\\\\n\\hline  a_3& b & c & d & e \\\\\n\\hline  a_4 & b_4 & c & d & e \\\\\n\\hline  a & b_5 & c & d & e \\\\\n\\hline\n\\end{array}\n\\]\nEnfin, on termine avec \\(C,E \\longrightarrow A\\) :\n\\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c& d & e_1 \\\\\n\\hline a & b & c & d & e_2 \\\\\n\\hline  a& b & c & d & e \\\\\n\\hline  a & b_4 & c & d & e \\\\\n\\hline  a & b_5 & c & d & e \\\\\n\\hline\n\\end{array}\n\\]\nOn voit que le tuple \\((a,b,c,d,e)\\) apparait.  En d‚Äôautres termes : \\(R \\supset\\pi_{A,D}(R)\\bowtie \\pi_{A,B}(R)\\bowtie \\pi_{B,E}(R)\\bowtie \\pi_{C,D,E}(R) \\bowtie \\pi_{A,E}(R)\\). La d√©composition est donc SPI.\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\nLa seconde d√©composition n‚Äôest pas SPI~: l‚Äôalgorithme de poursuite √©choue. Le tableau de d√©part s‚Äô√©crit~: \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_2 & d_2 & e_2 \\\\\n\\hline  a_3& b & c_3 & d_3 & e \\\\\n\\hline  a_4 & b_4 & c & d & e_4 \\\\\n\\hline  a_5 & b_5 & c_5 & d & e \\\\\n\\hline  a & b_6 & c_6 & d_6 & e \\\\\n\\hline\n\\end{array}\n\\]\n\n\\(A\\to C\\) donc \\(c_1=c_2=c_6\\) \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d_2 & e_2 \\\\\n\\hline  a_3& b & c_3 & d_3 & e \\\\\n\\hline  a_4 & b_4 & c & d & e_4 \\\\\n\\hline  a_5 & b_5 & c_5 & d & e \\\\\n\\hline  a & b_6 & c_1 & d_6 & e \\\\\n\\hline\n\\end{array}\n\\]\n\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\n\n\\(B\\to C\\) donc \\(c_3=c_1\\) \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d_2 & e_2 \\\\\n\\hline  a_3& b & c_1 & d_3 & e \\\\\n\\hline  a_4 & b_4 & c & d & e_4 \\\\\n\\hline  a_5 & b_5 & c_5 & d & e \\\\\n\\hline  a & b_6 & c_1 & d_6 & e \\\\\n\\hline\n\\end{array}\n\\]\n\\(C\\to D\\) donc \\(d_1=d_3=d_6=d\\) \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d & e_2 \\\\\n\\hline  a_3& b & c_1 & d & e \\\\\n\\hline  a_4 & b_4 & c & d & e_4 \\\\\n\\hline  a_5 & b_5 & c_5 & d & e \\\\\n\\hline  a & b_6 & c_1 & d & e \\\\\n\\hline\n\\end{array}\n\\]\n\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\n\n\\(DE\\to C\\) donc \\(c_5=c1\\) \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d & e_2 \\\\\n\\hline  a_3& b & c_1 & d & e \\\\\n\\hline  a_4 & b_4 & c & d & e_4 \\\\\n\\hline  a_5 & b_5 & c_1 & d & e \\\\\n\\hline  a & b_6 & c_1 & d & e \\\\\n\\hline\n\\end{array}\n\\]\n\\(CE\\to A\\) donc \\(a_3=a_5=a\\) \\[\n\\begin{array}{|c|c|c|c|c|}\n\\hline A & B & C & D & E \\\\\\hline\n\\hline a & b_1 &  c_1& d & e_1 \\\\\n\\hline a & b & c_1 & d & e_2 \\\\\n\\hline  a& b & c_1 & d & e \\\\\n\\hline  a_4 & b_4 & c & d & e_4 \\\\\n\\hline  a & b_5 & c_1 & d & e \\\\\n\\hline  a & b_6 & c_1 & d & e \\\\\n\\hline\n\\end{array}\n\\] Toutes les DF de \\(\\Sigma\\) sont satisfaites et aucune ligne n‚Äôest √©gale √† \\((a,b,c,d,e)\\). Donc la d√©composition n‚Äôest pas SPI.\\ Si on suppose que pour tout \\(1\\le i\\le 6\\), \\(a_i\\not=a\\), \\(b_i\\not=b\\), \\(c_i\\not=c\\), \\(d_i\\not=d\\), \\(e_i\\not=e\\), ce dernier tableau fournit un exemple de relation strictement plus petite que la jointure naturelle des projections. En effet \\(\\Sigma\\) est satisfait et \\((a,b,c,d,e)\\) est clairement dans la jointure naturelles des projections. Or \\((a,b,c,d,e)\\) n‚Äôest pas dans la relation.\n\n\n\n\n\nExercice\nSoit \\(\\mathcal{A}=\\{A,B,C,D,E\\}\\) un sch√©ma et soit la d√©composition \\(\\{\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3\\}\\) o√π \\[\\mathcal{A}_1=\\{A,B,C\\}\\quad \\mathcal{A}_2=\\{B,C,D\\}\\quad \\mathcal{A}_3=\\{A,C,E\\}\\] Pour chaque ensemble \\(\\Sigma\\) de d√©pendances fonctionnelles ci-dessous, appliquer l‚Äôalgorithme de poursuite pour d√©terminer si la d√©composition est sans perte d‚Äôinformation. Dans le cas o√π il y a perte d‚Äôinformation, donner une relation \\(R\\) de sch√©ma \\(\\mathcal{A}\\) satisfaisant \\(\\Sigma\\) et telle que \\[ \\pi_{\\mathcal{A}_1}(R)\\bowtie\\pi_{\\mathcal{A}_2}(R)\\bowtie\\pi_{\\mathcal{A}_3}(R)\\not\\subset R\\]\n\n\\(\\Sigma=\\{B\\rightarrow E, CE\\rightarrow A\\}\\)\n\\(\\Sigma=\\{AC\\rightarrow E, BC\\to D\\}\\)\n\\(\\Sigma=\\{A\\rightarrow D, D\\to E, B\\to D\\}\\)\n\\(\\Sigma=\\{A\\rightarrow D, CD\\to E, E\\to D\\}\\)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_3 & e \\\\\n\\hline\n\\end{array}\n\\] \\(B\\to E\\) donc \\(e_1=e_2\\). Ensuite \\(CE\\to A\\) donc \\(a_2=a\\). On obtient \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a & b & c & d & e_1 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_3 & e \\\\\n\\hline\n\\end{array}\n\\] Toutes les DF de \\(\\Sigma\\) sont satisfaites. Donc il y a perte d‚Äôinformation. Ce dernier tableau est une relation \\(R\\) qui satisfait \\(\\Sigma\\) et telle que \\[\\pi_{\\mathcal{A}_1}(R)\\bowtie\\pi_{\\mathcal{A}_2}(R)\\bowtie\\pi_{\\mathcal{A}_3}(R)\\not\\subset R\\] puisque \\((a,b,c,d,e)\\notin R\\).\n\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\n\n\\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_3 & e \\\\\n\\hline\n\\end{array}\n\\] \\(AC\\to E\\) donc \\(e_1=e\\). Ensuite \\(BC\\to D\\) donc \\(d_1=d\\). On obtient \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d & e \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_3 & e \\\\\n\\hline\n\\end{array}\n\\] Le premier tuple est \\((a,b,c,d,e)\\). Donc la d√©composition est SPI.\n\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\n\n\\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_3 & e \\\\\n\\hline\n\\end{array}\n\\] \\(A\\to D\\) donc \\(d_3=d_1\\). \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_1 & e \\\\\n\\hline\n\\end{array}\n\\] \\(D\\to E\\) donc \\(e_1=e\\) \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_1 & e \\\\\n\\hline\n\\end{array}\n\\] \\(B\\to D\\) donc \\(d_1=d\\) \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d & e \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_1 & e \\\\\n\\hline\n\\end{array}\n\\] La d√©composition est donc SPI.\n\n\n\n\n\n\n\n\n\nSolution (suite)\n\n\n\n\n\\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_3 & e \\\\\n\\hline\n\\end{array}\n\\] \\(A\\to D\\) donc \\(d_3=d_1\\). \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e_1 \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_1 & e \\\\\n\\hline\n\\end{array}\n\\] \\(CD\\to E\\) donc \\(e_1=e\\). \\[\n\\begin{array}{|c|c|c|c|c|c|}\n\\hline  & A & B & C & D & E \\\\\\hline\n\\hline \\{A,B,C\\}  & a & b &  c& d_1 & e \\\\\n\\hline  \\{B,C,D\\} & a_2 & b & c & d & e_2 \\\\\n\\hline  \\{A,C,E\\} & a & b_3 & c & d_1 & e \\\\\n\\hline\n\\end{array}\n\\] \\(E\\to D\\) est satisfaite ainsi que les deux premi√®res DF. Donc la d√©composition n‚Äôest pas SPI.\n\n\n\n\n\nExercice : Normalisation\nOn consid√®re le sch√©ma de relation R(C,T,H,S,E,N) :\nR(Cours, Enseignant, Horaire, Salle, √âtudiant, Note)\net les d√©pendances fonctionnelles suivantes:\n\\[\\mathcal{F}=\\{  \\texttt{C} \\to \\texttt{T}; \\quad \\texttt{H,S} \\to \\texttt{C}; \\quad \\texttt{H,T} \\to \\texttt{S}; \\quad \\texttt{C,E} \\to \\texttt{N}; \\quad \\texttt{H,E} \\to S \\}. \\]\n\nCalculer une cl√©.\n\n\n\n\n\n\n\nSolution\n\n\n\nH,E n‚Äô√©tant jamais √† droite, ils font obligatoirement partis d‚Äôune cl√©. Or HE+ = ALL\n\n\n\nMettre en Boyce-Codd Normal Form (BCNF), donner plusieurs r√©sultats possibles.\n\n\n\n\n\n\n\nSolution\n\n\n\n1er version:\nC -&gt; T donne T1(CT) et T2(CHSEN).\nCE -&gt; N donne T1(CT),T2(C,E,N) T3(CHSE)\nHE -&gt; S donne (HES ; HEC)\n2eme version:\nCE -&gt; N donne T1(CENT), T2(CEHS) ..."
  },
  {
    "objectID": "solutions/td11.html",
    "href": "solutions/td11.html",
    "title": "TD 11: Normalisation et d√©pendances",
    "section": "",
    "text": "Avec solutions\n\n\n\n\n\n\n\n\n\n\n\n\n\nL3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle\n\n\n\n\n\n\n\n\nExercice\nSoit le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H‚ÄÉ \nF ‚Üí CD‚ÄÉ \nD ‚Üí G\n\nAppliquer l‚Äôalgorithme de d√©composition vu en cours pour obtenir une d√©composition de \\(\\mathcal{A}\\) qui respecte la FNBC et est sans perte d‚Äôinformation. D√©terminer quelles DF sont pr√©serv√©es.\nPeut-on, en ajoutant un sous-sch√©ma √† la d√©composition, obtenir une d√©composition FNBC sans perte d‚Äôinformation et sans perte de DF ?\n\n\n\n\n\n\n\nSolution\n\n\n\nRappelons l‚Äôalgorithme pour d√©composer un sch√©ma \\(\\mathcal{A}\\)~:\n\nOn consid√®re la d√©composition initiale \\(\\rho=\\{\\mathcal{A}\\}\\).\nTant qu‚Äôil existe un sous-sch√©ma \\(\\mathcal{B}\\in\\rho\\) et \\(X\\subset \\mathcal{B}\\) tels que \\(X^+\\cap\\mathcal{B}\\not=X\\) et \\(X^+\\cap\\mathcal{B}\\not=\\mathcal{B}\\) (ce qui signifie que la DF locale \\(X\\to X^+\\cap\\mathcal{B}\\) est une violation de FNBC pour \\(\\mathcal{B}\\)), on remplace \\(\\mathcal{B}\\) par les deux sous-sch√©mas \\[\\mathcal{B}_1=X^+\\cap\\mathcal{B} \\text{ et } \\mathcal{B}_2=(\\mathcal{B}\\setminus X^+)\\cup X\\] De plus il n‚Äôy a pas besoin de consid√©rer les parties \\(X\\subset\\mathcal{B}\\) telles que \\(card(X)=card(\\mathcal{B})-1\\) puisque dans ce cas on \\(X^+\\cap \\mathcal{B}=X\\) ou \\(X^+\\cap\\mathcal{B}=\\mathcal{B}\\).\n\nIl est garanti que la d√©composition finale est en FNBC et SPI. Par contre toutes les DF ne sont pas pr√©serv√©es en g√©n√©ral. De plus on obtient, en g√©n√©ral, des d√©compositions diff√©rentes si on change les DF (violant FNBC) utilis√©es. } - \\(BE^+=BEACH\\) donc on remplace \\(\\mathcal{A}\\) par \\[ \\mathcal{A}_1=BEACH \\quad \\mathcal{A}_2=BDEFG\\] \\(B^+=BH\\) donc on remplace \\(\\mathcal{A}_1\\) par \\[\\mathcal{A}_{11}=BH \\quad \\mathcal{A}_{12}=BEAC\\] \\(\\mathcal{A}_{11}\\) est en FNBC car de cardinal 2. \\(\\mathcal{A}_{12}\\) est en FNBC car \\[B^+\\cap\\mathcal{A}_{12}=B, E^+\\cap\\mathcal{A}_{12}=E, A^+\\cap\\mathcal{A}_{12}=A, C^+\\cap\\mathcal{A}_{12}=C \\] \\[BE^+\\cap\\mathcal{A}_{12}=BEAC, BA^+\\cap\\mathcal{A}_{12}=BA, BC^+\\cap\\mathcal{A}_{12}=BC, EA^+\\cap\\mathcal{A}_{12}=EA, EC^+\\cap\\mathcal{A}_{12}=EC\\] \\[ AC^+\\cap\\mathcal{A}_{12}=AC\\] \\(D^+=DG\\) donc on remplace \\(\\mathcal{A}_2\\) par \\[\\mathcal{A}_{21}=DG \\quad \\mathcal{A}_{22}=BDEF\\] \\(\\mathcal{A}_{21}\\) est en FNBC car de cardinal 2. \\(F^+=CD\\) donc on remplace \\(\\mathcal{A}_{22}\\) par \\[\\mathcal{A}_{221}=FD \\quad \\mathcal{A}_{222}=BEF\\] qui sont tous deux en FNBC\nD√©composition obtenue~:\nBH  BEAC  DG  FD  BEF\nLa seule DF qui n‚Äôest pas pr√©serv√©e est \\(F\\to C\\). Toutes les variantes (en changeant les DF utilis√©es) que j‚Äôai test√©es, donne une d√©composition qui ne pr√©serve pas toutes les DF. Bien s√ªr ce n‚Äôest pas une preuve que l‚Äôalgorithme ne peut pas donner une d√©composition sans perte de DF. - En ajoutant \\(FC\\) √† la d√©composition pr√©c√©dente, on obtient\nBH ‚ÄÉ BEAC ‚ÄÉ DG ‚ÄÉ FD ‚ÄÉ BEF ‚ÄÉ FC\nqui est en FNBC et pr√©serve les DF. De plus elle est SPI puisque la d√©composition initiale est SPI. (\\(R \\bowtie \\pi_{FC}(R)=R\\) pour toute relation \\(R\\))\n\n\n\n\nExercice\nReprendre les questions de l‚Äôexercice pr√©c√©dent pour le sch√©ma \\[\\mathcal{A}=\\left\\{\\texttt{A,B,C,D,E,F,G,H}\\right\\}\\] et l‚Äôensemble de DF\nBE ‚Üí AC‚ÄÉ \nB ‚Üí H\nF ‚Üí CD\nD ‚Üí G\nA‚Üí E\n\n\n\n\n\n\nSolution\n\n\n\n\nDe mani√®re similaire √† l‚Äôexercice pr√©c√©dent on arrive √†\n\nBH ‚ÄÉ BEAC ‚ÄÉ DG ‚ÄÉ FD ‚ÄÉ BEF\nmais, ici, BEAC n‚Äôest pas en FNBC (les autres le sont). A^+=AE donc on remplace BEAC par AE et ABC. Une d√©composition FNBC est donc BH ‚ÄÉ AE ‚ÄÉ ABC ‚ÄÉ DG ‚ÄÉ FD ‚ÄÉ BEF Les DF BE ‚Üí AC et F ‚Üí C ne sont pas pr√©serv√©es. Les autres sont pr√©serv√©es.\n\nIl n‚Äôexiste de d√©composition FNBC qui pr√©serve BE ‚Üí A. En effet, si BE ‚Üí A est pr√©serv√©e, il existe une DF locale √† un sous-sch√©ma \\(\\mathcal{B}\\) de la forme X ‚Üí A. Cela implique que BE ‚äÇ X et donc BEA ‚äÇ B. Par suite \\(\\mathcal{B}\\) n‚Äôest pas en FNBC √† cause de \\(A^+=AE\\)."
  },
  {
    "objectID": "solutions/td7.html",
    "href": "solutions/td7.html",
    "title": "TD 7 : Contraintes (suite)",
    "section": "",
    "text": "Avec solutions\n\n\n\n\n\n\n\n\n\n\n\n\n\nL3 MIASHS/Ing√©math\nUniversit√© Paris Cit√©\nAnn√©e 2024-2025\nCourse Homepage\n\nMoodle"
  },
  {
    "objectID": "workshops-chatgpt/td2-chatgpt.html",
    "href": "workshops-chatgpt/td2-chatgpt.html",
    "title": "TD 2: SQL",
    "section": "",
    "text": "Avec solutions\n\n\n\nAu del√† des solutions calcul√©es √† la main, nous pr√©sentons des solutions propos√©es par un chatbot, en l‚Äôoccurrence, chatgpt 3.5 de https://openai.com"
  },
  {
    "objectID": "workshops-chatgpt/td2-chatgpt.html#sch√©ma-world-rappel",
    "href": "workshops-chatgpt/td2-chatgpt.html#sch√©ma-world-rappel",
    "title": "TD 2: SQL",
    "section": "Sch√©ma world (rappel)",
    "text": "Sch√©ma world (rappel)\nUtiliser les commandes suivantes pour retrouver les sch√©mas de tables country, countrylanguage et city.\nbd_2023&gt; \\d world.\"nom de table\"\nVue d‚Äôensemble du sch√©ma world"
  },
  {
    "objectID": "workshops-chatgpt/td2-chatgpt.html#informer-le-chatbot-du-sch√©ma-utilis√©",
    "href": "workshops-chatgpt/td2-chatgpt.html#informer-le-chatbot-du-sch√©ma-utilis√©",
    "title": "TD 2: SQL",
    "section": "Informer le chatbot du sch√©ma utilis√©",
    "text": "Informer le chatbot du sch√©ma utilis√©\nIci nous utilisons chatgpt 3.5 (voir https://openai.com).\nNous partons d‚Äôune description du sch√©ma world construite par le client dbSchema. Le client dbSchema est connect√© au sch√©ma world du catalogue bd_2023-24 sur le serveur etu-pgsql. Le mod√®le (menu Model) est export√© (sous menu Export) au format HTML/PDF (en markdown) et sauv√© dans un fichier world_schema.md.\nDans la conversation avec le chatbot, nous attachons le fichier world_schema.md et nous pr√©cisons son usage.\nThe attachment contains the definition of the world database.\n\nWrite an sql query for determining the capitals of countries from region \"Western Europe\""
  },
  {
    "objectID": "workshops-chatgpt/td2-chatgpt.html#requ√™tes",
    "href": "workshops-chatgpt/td2-chatgpt.html#requ√™tes",
    "title": "TD 2: SQL",
    "section": "Requ√™tes",
    "text": "Requ√™tes\n\nQuels sont les noms des capitales d‚ÄôEurope de l‚Äôouest? (14 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nWrite an sql query for determining the capitals of countries from region \"Western Europe\".\nLa r√©ponse est :\nBased on the structure provided from the world database, it appears that:\n\nThe country table contains the region, name_country, and capital fields.  \nThe city table contains city-related information, including the name of  \nthe city and its id, which is linked to the capital field in the country  \ntable through a foreign key. We can join the country and city tables  \nusing the capital (in country) and id (in city) fields to find the capital     \ncities of countries in the \"Western Europe\" region.\n\nHere is the SQL query:\nSELECT \n  city.name AS capital_name, \n  country.name_country AS country_name\nFROM \n  world.country JOIN \n  world.city ON \n  country.capital = city.id\nWHERE \n  country.region = 'Western Europe';\nThis query retrieves the capital names and their corresponding  \ncountry names for countries in the \"Western Europe\" region  \nby joining the country and city tables. ‚Äã‚Äã\nLa r√©ponse √† la main √©tait:\nSELECT city.name\nFROM world.city JOIN \n  world.country ON capital=id\nWHERE continent = 'Western Europe';\n\n\n\nQuels sont les noms des pays o√π le fran√ßais est langue officielle ? (18 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion au chatbot:\nIn which countries is French an official language?\nLa r√©ponse est:\nTo find the countries where French is an official language,  \nwe need to reference the `countrylanguage` table.  \nThis table contains information about languages spoken  \nin countries, including whether a language is official.  \nThe table can be joined with the `country` table to get the country names.\net la requ√™te SQL est\nSELECT \n  country.name_country AS country_name\nFROM \n  world.country\nJOIN \n  world.countrylanguage ON \n  country.countrycode = countrylanguage.countrycode\nWHERE \n  countrylanguage.language = 'French' AND \n  countrylanguage.isofficial = TRUE;\n√† comparer avec a requ√™te construite √† la main\nSELECT name_country\nFROM world.country NATURAL JOIN world.countrylanguage\nWHERE isofficial AND language='French';\n\n\n\nQuels sont les pays dont le gouvernement est monarchique (constitutionnelle ou pas) ? (43 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot:\nWhich countries are monarchies?\nR√©ponse:\nTo identify countries that are monarchies, we need  \nto check the governmentform column in the country  \ntable, as it likely contains information about the type  \nof government each country has.\nEt la requ√™te SQL est :\nSELECT name_country AS country_name\nFROM world.country \nWHERE governmentform LIKE '%Monarchy%';\nThis query retrieves the names of countries  \nwhere the form of government includes the word \"Monarchy\"  \nin the governmentform field.\n\n\n\nQuelles sont les monarchies d‚ÄôEurope dont la capitale compte moins d‚Äôun million d‚Äôhabitants ? (8 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot:\nIn which European monarchies has the capital  \nless than 1 million inhabitants? \nR√©ponse du chatbot:\nTo find European monarchies where the capital city  \nhas less than 1 million inhabitants, we need to:\n\nFilter for countries in Europe that are monarchies.\n\nJoin the country and city tables to get the population  \nof the capital city.\n\nEnsure the population of the capital city is less than 1 million.\nRequ√™te SQL:\nSELECT \n  country.name_country AS country_name, \n  city.name AS capital_name, \n  city.population AS capital_population\nFROM \n  world.country JOIN \n  world.city ON \n  country.capital = city.id\nWHERE \n  country.governmentform LIKE '%Monarchy%' AND \n  country.continent = 'Europe' AND \n  city.population &lt; 1000000;\n√Ä comparer avec:\nWITH T1 AS (\n  SELECT *\n  FROM world.country\n  WHERE governmentform LIKE '%Monarchy%' AND continent='Europe' )\n\nSELECT name_country\nFROM T1 JOIN world.city ON capital=id\nWHERE population &lt; 1000000;\n\n\n\nQuelles sont les r√©gions o√π on ne trouve pas de monarchie ? (9 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nIn which regions are there no monarchies?\nR√©ponse :\nTo find the regions where there are no monarchies, we can:\n\nIdentify regions that do not have any countries with a monarchy.\n\nUse the governmentform field in the country table to filter out monarchies.\nRequ√™te SQL :\nSELECT DISTINCT region\nFROM world.country\nWHERE region NOT IN (\n    SELECT region\n    FROM world.country\n    WHERE governmentform LIKE '%Monarchy%'\n);\n√Ä comparer avec\nWITH monarchy AS (\n  SELECT region\n  FROM world.country\n  WHERE governmentform LIKE '%Monarchy%')\n\n(SELECT region \n FROM world.country) \nEXCEPT \n(SELECT * \n FROM monarchy);\n\n\n\nQuelles sont les langues qui ne sont langues officielles dans aucun pays ? (355 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nWhich languages are nowhere official?\nR√©ponse :\n\nTo find languages that are not official in any country, we need to:\n\nQuery the countrylanguage table for languages where isofficial  \nis FALSE across all entries.\nUse GROUP BY and HAVING to ensure the language is not marked  \nas official in any country.\nRequ√™te SQL :\nSELECT \n  language\nFROM \n  world.countrylanguage\nGROUP BY \n  language\nHAVING \n  SUM(CASE WHEN isofficial = TRUE THEN 1 ELSE 0 END) = 0;\n√Ä comparer avec :\nWITH R AS (\n  SELECT language \n  FROM world.countrylanguage \n  WHERE isofficial\n)\n\n(SELECT DISTINCT language \n FROM world.countrylanguage\n) \nEXCEPT \n(SELECT * \n FROM R\n);\nOn peut demander au chatbot de revoir sa copie :\nCan you write an equiavlent query without any aggregation?\nR√©ponse :\nYes! To write an equivalent query without aggregation,  \nwe can look for languages that do not appear with `isofficial = TRUE`  \nin the `countrylanguage` table. This can be done  \nby using a `NOT EXISTS` subquery to exclude any language  \nthat is official in any country.\n\nHere is the SQL query:\nSELECT DISTINCT language\nFROM world.countrylanguage cl\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM world.countrylanguage cl2\n    WHERE cl.language = cl2.language\n      AND cl2.isofficial = TRUE\n);\nThis query finds distinct languages from the `countrylanguage` table  \nwhere no entry for that language exists with `isofficial = TRUE`.\n\n\n\nQuels sont les pays qui n‚Äôont pas de langue officielle ? (49 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nFind the countries with no official language\nR√©ponse :\nTo find the countries with no official language, we need to:\n\n1. Identify countries that do not have any language marked  \nas official in the `countrylanguage` table.  \n2. Use a `NOT EXISTS` subquery to check for countries  \nwithout any official language.\n\nHere is the SQL query:\nSELECT name_country AS country_name\nFROM world.country c\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM world.countrylanguage cl\n    WHERE c.countrycode = cl.countrycode\n      AND cl.isofficial = TRUE\n);\nThis query selects the names of countries  \nwhere there is no corresponding entry  \nin the `countrylanguage` table with `isofficial = TRUE`.\n√Ä comparer avec :\nWITH R AS (\n  SELECT countrycode \n  FROM world.countrylanguage\n  WHERE isofficial\n),\nS AS (\n  SELECT countrycode \n  FROM world.country\n  EXCEPT \n  SELECT * FROM R\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN S;\n\n\n\nQuels sont les pays dont la seule langue officielle est le fran√ßais ? (9 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nIn which countries is French the only official language?\nR√©ponse :\nTo find countries where French is the only official language,  \nwe need to:\n\n1. Identify countries where French is an official language.\n2. Ensure no other languages are marked as official  \nin those countries.\n\nHere is the SQL query:\nSELECT c.name_country AS country_name\nFROM world.country c\nJOIN world.countrylanguage cl ON c.countrycode = cl.countrycode\nWHERE cl.language = 'French'\n  AND cl.isofficial = TRUE\n  AND NOT EXISTS (\n    SELECT 1\n    FROM world.countrylanguage cl2\n    WHERE cl2.countrycode = c.countrycode\n      AND cl2.language != 'French'\n      AND cl2.isofficial = TRUE\n);\nThis query retrieves the countries where French  \nis the only official language by checking that no other language  \nis marked as official for those countries.\n√Ä comparer avec :\nWITH R AS(\n  SELECT DISTINCT T1.countrycode \n  FROM world.countrylanguage as T1 JOIN\n      world.countrylanguage as T2 ON \n      T1.countrycode = T2.countrycode\n  WHERE T1.language &lt;&gt; T2.language AND\n      T1.isofficial AND\n      T2.isofficial),\nS AS (\n  SELECT countrycode \n  FROM world.countrylanguage\n  WHERE language='French' AND isofficial\n  EXCEPT \n  (SELECT * FROM R)\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN S;\nOu encore, en utilisant EXCEPT :\nWITH OnlyFrench AS (\n  (SELECT countrycode\n  FROM countrylanguage\n  WHERE isofficial AND language = 'French')\n  EXCEPT\n  (SELECT countrycode\n  FROM countrylanguage\n  WHERE isofficial AND language &lt;&gt; 'French')\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN OnlyFrench;\n\n\n\nLes noms des pays o√π le fran√ßais n‚Äôest pas la seule langue officielle. (9 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nFind the countries where French is not the only official language. \nR√©ponse :\nTo find countries where French is an official language  \nbut not the only official language, we need to:\n\n1. Identify countries where French is an official language.\n2. Ensure that there is at least one other language marked  \nas official in those countries.\n\nHere is the SQL query:\nSELECT c.name_country AS country_name\nFROM world.country c\nJOIN world.countrylanguage cl ON c.countrycode = cl.countrycode\nWHERE cl.language = 'French'\n  AND cl.isofficial = TRUE\n  AND EXISTS (\n    SELECT 1\n    FROM world.countrylanguage cl2\n    WHERE cl2.countrycode = c.countrycode\n      AND cl2.language != 'French'\n      AND cl2.isofficial = TRUE\n);\nThis query retrieves the countries where French is one  \nof the official languages, but there is at least  \none other official language in the same country.\n√Ä comparer avec :\nWITH R AS (\nSELECT DISTINCT T1.countrycode FROM world.countrylanguage as T1\n                     JOIN world.countrylanguage as T2\n                     ON T1.countrycode = T2.countrycode\nWHERE T1.language &lt;&gt; T2.language AND\n     T1.language = 'French' AND\n     T1.isofficial AND\n     T2.isofficial)\n\nSELECT name_country FROM R NATURAL JOIN world.country;\nEn utilisant INTERSECT :\nWITH AlsoFrench AS (\n  (SELECT countrycode\n  FROM world.countrylanguage\n  WHERE isofficial AND language = 'French')\n  INTERSECT\n  (SELECT countrycode\n  FROM world.countrylanguage\n  WHERE isofficial AND language &lt;&gt; 'French')\n)\n\nSELECT name_country \nFROM world.country NATURAL JOIN \n     AlsoFrench;\n\n\n\nQuelles sont les r√©gions qui ne comportent qu‚Äôune seule forme de gouvernement ? (3 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nName the regions where there is only one form  of government \nR√©ponse :\nTo find regions where there is only one form of government \nacross all countries in that region, we need to:\n\n1. Group countries by region and government form.\n2. Ensure that each region has only one unique government form.\n\nHere is the SQL query:\nSELECT region\nFROM world.country\nGROUP BY region\nHAVING COUNT(DISTINCT governmentform) = 1;\nThis query groups the countries by region and checks  \nthat each region has only one distinct `governmentform`. \nThe `HAVING` clause ensures that only regions \nwith exactly one form of government are selected.\n√Ä comparer avec :\nWITH R AS (\n  SELECT T1.region \n  FROM world.country AS T1 JOIN \n       world.country AS T2 ON \n       T1.region = T2.region\n  WHERE T1.governmentform &lt;&gt; T2.governmentform)\n\nSELECT region \nFROM world.country \nEXCEPT \nSELECT * \nFROM R;\n Le chatbot est capable de formuler une r√©ponse qui n‚Äôutilise pas d‚Äôaggr√©gation.\nCould you write another solution without using aggregation?\nconduit √†\nCertainly! To solve this without aggregation, we can approach it by:\n\n1. Finding regions where every country has the same government form.\n2. Using a `NOT EXISTS` subquery to ensure  \nthere is no country in the region with a different government form.\n\nHere‚Äôs the SQL query:\nSELECT DISTINCT c1.region\nFROM world.country c1\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM world.country c2\n    WHERE c1.region = c2.region\n      AND c1.governmentform != c2.governmentform\n);\nThis query selects distinct regions where no country  \nin the same region has a different form of government,  \nensuring that only one government form exists within the region.\n\n\n\nQuelles sont les langues officielles des pays dont la capitale compte plus de 5 000 000 d‚Äôhabitants ? (12 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nWhat are the official languages of countries  \nwhich capital has more than 5 000 000 inhabitants ?\nR√©ponse :\nTo find the official languages of countries where the capital city  \nhas more than 5 million inhabitants, we need to:\n\n1. Join the `country` and `city` tables to filter countries  \nwhere the capital's population exceeds 5 million.\n2. Then, join the `countrylanguage` table to get  \nthe official languages of these countries.\n\nHere is the SQL query:\nSELECT DISTINCT cl.language\nFROM \n  world.country c JOIN \n  world.city ci ON c.capital = ci.id JOIN \n  world.countrylanguage cl ON c.countrycode = cl.countrycode\nWHERE \n  ci.population &gt; 5000000 AND \n  cl.isofficial = TRUE;\nThis query retrieves the distinct official languages  \nfrom the `countrylanguage` table, for countries  \nwhere the capital city has a population greater than 5 million.\n√Ä comparer avec :\nSELECT DISTINCT language\nFROM \n  world.countrylanguage NATURAL JOIN \n  world.city JOIN \n  world.country ON capital=id\nWHERE \n  population &gt; 5000000 and isofficial;\n\n\n\nQuels sont les pays o√π au moins trois langues sont parl√©es chacune par strictement plus de \\(10\\%\\) de la population ? (35 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nIn which countries, can we find three languages  \nwhich are spoken by at least 10% of the population? \nR√©ponse :\nTo find countries where at least three languages  \nare spoken by at least 10% of the population, we can:\n\n1. Filter the `countrylanguage` table for languages spoken  \nby at least 10% of the population.\n2. Group the results by country and count how many languages  \nmeet the 10% threshold.\n3. Filter countries where the count is 3 or more.\n\nHere is the SQL query:\nSELECT \n  c.name_country AS country_name\nFROM \n  world.country c JOIN \n  world.countrylanguage cl ON c.countrycode = cl.countrycode\nWHERE \n  cl.percentage &gt;= 10\nGROUP BY c.name_country\nHAVING COUNT(cl.language) &gt;= 3;\nThis query finds countries where at least three languages  \nare spoken by 10% or more of the population,  \nbased on the `percentage` column in the `countrylanguage` table.\n√Ä comparer avec :\nWITH R AS (\n  SELECT T1.countrycode \n  FROM  world.countrylanguage AS T1 JOIN \n        world.countrylanguage AS T2 ON T1.countrycode = T2.countrycode JOIN \n        world.countrylanguage AS T3 ON T1.countrycode = T3.countrycode\n  WHERE T1.language &lt;&gt; T2.language AND\n        T2.language &lt;&gt; T3.language AND\n        T1.language &lt;&gt; T3.language AND\n        T1.percentage &gt; 10 AND\n        T2.percentage &gt; 10 AND\n        T3.percentage &gt; 10\n)\n\nSELECT DISTINCT name_country \nFROM world.country NATURAL JOIN R;\nou\nWITH tpc AS (\n  SELECT *\n  FROM world.countrylanguage\n  WHERE percentage &gt; 10), \nthree AS (\n    SELECT DISTINCT t1.countrycode\n    FROM tpc AS t1 JOIN \n         tpc AS t2 ON (t1.countrycode=t2.countrycode AND t1.language &lt; t2.language) JOIN\n         tpc AS t3 ON (t1.countrycode=t3.countrycode AND t3.language &gt; t2.language)\n)\n\nSELECT co.*\nFROM \n  world.country co NATURAL JOIN \n  three ;\n\n\n\nQuelles sont les r√©gions o√π il existe deux pays dont les esp√©rances de vie diff√®rent par au moins \\(10\\) ans ? (16 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nIn which regions do the largest and the smallest life expectancy  \ndiffer by more than 10 years ?\nR√©ponse :\nTo find regions where the difference between the largest and  \nsmallest life expectancy among countries is more than 10 years, we can:\n\n1. Group countries by region.\n2. Calculate the maximum and minimum life expectancy  \nfor each region.\n3. Filter regions where the difference between the maximum and  \nminimum life expectancy is greater than 10 years.\n\nHere is the SQL query:\nSELECT region\nFROM world.country\nGROUP BY region\nHAVING MAX(lifeexpectancy) - MIN(lifeexpectancy) &gt; 10;\nThis query groups countries by region, calculates the difference  \nbetween the maximum and minimum life expectancy  \nwithin each region, and selects only those regions  \nwhere the difference is greater than 10 years.\n√Ä comparer avec :\nSELECT DISTINCT T1.region\nFROM world.country AS T1 JOIN \n     world.country AS T2 ON T1.region = T2.region\nWHERE T1.countrycode &lt;&gt; T2.countrycode AND \n      (T1.lifeexpectancy - T2.lifeexpectancy &gt;= 10 OR \n       T2.lifeexpectancy - T1.lifeexpectancy &gt;= 10);\n\n\n\nQuels sont les pays o√π l‚Äôanglais et le fran√ßais sont des langues officielles ? (3 lignes)\n\n\n\n\n\n\n\nSolution\n\n\n\nQuestion pos√©e au chatbot :\nIn which countries are both English and French official languages?\nR√©ponse :\nTo find the countries where both English and French  \nare official languages, we need to:\n\n1. Filter for countries where English is an official language.\n2. Ensure that French is also an official language in the same country.\n\nHere‚Äôs the SQL query:\nSELECT c.name_country AS country_name\nFROM world.country c\nJOIN world.countrylanguage cl1 ON c.countrycode = cl1.countrycode\nJOIN world.countrylanguage cl2 ON c.countrycode = cl2.countrycode\nWHERE cl1.language = 'English' AND cl1.isofficial = TRUE\n  AND cl2.language = 'French' AND cl2.isofficial = TRUE;\nThis query selects countries where both English and French  \nare marked as official languages by joining   \nthe `countrylanguage` table twice, once for each language.\n√Ä comparer avec :\nWITH R AS (\n  SELECT T1.countrycode\n  FROM world.countrylanguage AS T1 JOIN \n       world.countrylanguage AS T2 USING (countrycode)\n  WHERE T1.language='French' AND \n        T2.language='English' AND \n        T1.isofficial AND \n        T2.isofficial)\n      \nSELECT name_country \nFROM R NATURAL JOIN \n     world.country;\n\n\n\nMontrer comment calculer l‚Äôintersection de deux tables avec une jointure (sous certaines conditions).\n\n\n\n\n\n\n\nSolution\n\n\n\nSi R et S sont deux tables de m√™me sch√©ma, une jointure naturelle des deux tables devrait (en premi√®re approximation) calculer l‚Äôintersection des deux tables.\nPourtant\n(SELECT * FROM R)\nINTERSECT\n(SELECT * FROM S)   ;\nne donne pas toujours le m√™me r√©sultat que\nSELECT *\nFROM    R NATURAL JOIN S ;\nEssayez par exemple pour l‚Äôintersection de la table country avec elle-m√™me :\n(SELECT * FROM country) \nINTERSECT \n(SELECT * FROM country);\nretourne la table country, soit 239 lignes.\nLa jointure naturelle\nSELECT * \nFROM country AS c1 NATURAL JOIN \n     country AS c2;\nne donne que 167 lignes. On peut r√©concilier les deux r√©sultats en ne conservant que les lignes pour lesquelles aucune colonne ne prend la valeur NULL.\nEn v√©rifiant quels attributs peuvent prendre la valeur NULL dans le sch√©ma, on peut tester cela par la requ√™te\nSELECT * \nFROM world.country\nWHERE indepyear IS NOT NULL AND \n      lifeexpectancy IS NOT NUL AND \n      gnp IS NOT NULL AND \n      gnpold IS NOT NULL AND \n      headofstate IS NOT NULL AND \n      capital IS NOT NULL;\nqui retourne bien 167 lignes.\nOn peut aussi demander l‚Äôavis du chatbot:\nIs it possible to compute the intersection of two tables using joins?"
  },
  {
    "objectID": "exams/cc3-2022-10-21.html#popularit√©",
    "href": "exams/cc3-2022-10-21.html#popularit√©",
    "title": "MA15Y030 - Automne 2024",
    "section": "Popularit√©",
    "text": "Popularit√©\n\n\n\n\n\n\nQuestion\n\n\n\n√âcrire une fonction SQL nomm√©e top_k_names_by_year qui prend en argument une ann√©e yyyy et un entier n et renvoie une table (name TEXT, sex integer, rank integer) qui contient, selon la table babynames.bebes, les k pr√©noms les plus populaires (attribu√©s) de l‚Äôann√©e yyyy pour chaque sexe.\n\n\n\n\n\n\n\n\nR√©ponse attendue pour SELECT * FROM top_k_names_by_year(1950, 5); :\n+----+---------+----+\n|F   |MARIE    |   1|\n|F   |MARTINE  |   2|\n|F   |FRAN√áOISE|   3|\n|F   |MONIQUE  |   4|\n|F   |NICOLE   |   5|\n|H   |JEAN     |   1|\n|H   |MICHEL   |   2|\n|H   |ALAIN    |   3|\n|H   |G√âRARD   |   4|\n|H   |BERNARD  |   5|\n\n\n\n\n\n\n\n\n\nsolution\n\n\n\nPremi√®re question pos√©e au chatbot :\nFor every year and sex, find the 5 most popular names.\nR√©ponse :\nTo find the 5 most popular names for each year and sex \nin the babynames.bebes table, you can use `ROW_NUMBER()`. \nHere's a query that retrieves the top 5 names \nfor each combination of year and sex:\nWITH RankedNames AS (\n    SELECT\n        name, year, sex, count,\n        ROW_NUMBER() OVER (PARTITION BY year, sex ORDER BY count DESC) AS rank\n    FROM\n        babynames.bebes\n)\n\nSELECT\n    name, year, sex, count\nFROM\n    RankedNames\nWHERE\n    rank &lt;= 5\nORDER BY\n    year, sex, rank;\nExplanation:\n\n- The `ROW_NUMBER()` function ranks names \nwithin each `year` and `sex` partition,   \nordered by the `count` of babies in descending order.\n- The `PARTITION BY year, sex` groups the data by each year and sex.\n- The `ORDER BY count DESC` ensures that the most popular names \n(with the highest counts) are ranked first.\n- In the `WHERE` clause, we filter for the top 5 names (`rank &lt;= 5`) \nfor each year and sex.\n\nThis query will return the most popular 5 names \nfor both males and females for each year in the dataset.\nPour d√©finir la fonction, on peut demander de l‚Äôaide au chatbot:\nDesign a sql function that takes as input a year y and an integer k, \nand returns a table wih columns name, sex and rank \ncontaining the k most popular names in year y for each sex\nLa r√©ponse est\nCREATE OR REPLACE FUNCTION top_k_names_by_year(y INT, k INT)\nRETURNS TABLE(name VARCHAR(500), sex INT, rank INT) AS $$\nBEGIN\n    RETURN QUERY\n    WITH RankedNames AS (\n        SELECT\n            name, sex, count,\n            ROW_NUMBER() OVER (PARTITION BY sex ORDER BY count DESC) AS rank\n        FROM\n            babynames.bebes\n        WHERE\n            year = y\n    )\n    SELECT\n        name, sex, rank\n    FROM\n        RankedNames\n    WHERE\n        rank &lt;= k\n    ORDER BY\n        sex, rank;\nEND;\n$$ LANGUAGE plpgsql;\nEn insistant pour obtenir une fonction SQL on obtient:\nCREATE OR REPLACE FUNCTION top_k_names_by_year(y INT, k INT)\nRETURNS TABLE(name VARCHAR(500), sex INT, rank INT) AS $$\n    WITH RankedNames AS (\n        SELECT\n            name, sex, count,\n            ROW_NUMBER() OVER (PARTITION BY sex ORDER BY count DESC) AS rank\n        FROM\n            babynames.bebes\n        WHERE\n            year = y\n    )\n    SELECT\n        name, sex, rank\n    FROM\n        RankedNames\n    WHERE\n        rank &lt;= k\n    ORDER BY\n        sex, rank;\n$$ LANGUAGE sql;\nSure! If you‚Äôd prefer a pure SQL function (without using PL/pgSQL), here‚Äôs how you can implement it. In PostgreSQL, you can create a function using SQL that performs the required query:\nCREATE OR REPLACE FUNCTION top_k_names_by_year(y INT, k INT)\nRETURNS TABLE(name VARCHAR(500), sex INT, rank INT) AS $$\n    WITH RankedNames AS (\n        SELECT\n            name, sex, count,\n            ROW_NUMBER() OVER (PARTITION BY sex ORDER BY count DESC) AS rank\n        FROM\n            babynames.bebes\n        WHERE\n            year = y\n    )\n    SELECT\n        name, sex, rank\n    FROM\n        RankedNames\n    WHERE\n        rank &lt;= k\n    ORDER BY\n        sex, rank;\n$$ LANGUAGE sql;\n\nExplanation:\n- **Function Definition:**\n  - The function `top_k_names_by_year` accepts  \n  two parameters: `y` (year) and `k` (number of top names).\n  - It returns a table with three columns:  \n  `name` (name of the baby),  \n  `sex` (gender: 1 for male, 2 for female), and  \n  `rank` (the rank of the name by popularity).\n\n- **WITH Clause:**\n  - The `WITH RankedNames AS` clause ranks names \n  by the count of babies for each sex \n  in the specified year (`y`) using the `ROW_NUMBER()` window function. \n  It partitions by `sex` and orders by `count DESC` to assign ranks \n  starting from the most popular.\n\n- **WHERE Clause:**\n  - The main query filters for names with a rank less \n  than or equal to `k` to get only the top `k` names for each sex.\n\n- **Language:**\n  - The function is written in **pure SQL** (as specified by `LANGUAGE sql`).\n\nThis SQL function will return the top `k` names for each sex in the specified year (`y`)."
  },
  {
    "objectID": "exams/cc3-2022-10-21.html#fen√™tre-glissante",
    "href": "exams/cc3-2022-10-21.html#fen√™tre-glissante",
    "title": "MA15Y030 - Automne 2024",
    "section": "Fen√™tre glissante",
    "text": "Fen√™tre glissante\nDonn√©es dans le sch√©ma babynames\n\n\n\n\n\n\nQuestion\n\n\n\nCr√©er une vue cc_vue_10 de sch√©ma (prenom  TEXT, sexe TEXT, annee INTEGER, moy NUMERIC) qui, pour chaque pr√©nom, sexe et ann√©e, donne le nombre moyen d‚Äôattributions du pr√©nom aux enfants du sexe en question durant l‚Äôintervalle form√© par les deux ann√©es qui pr√©c√®dent et les deux ann√©es qui suivent l‚Äôann√©e courante (incluse).\n\n\n\n\n\n\n\n\nSELECT *\nFROM cc_vue_10\nWHERE prenom='PATRICK' AND\n      annee BETWEEN 1955 AND 1960 ;\n+-------+----+-----+--------+\n|prenom |sexe|annee|moy     |\n+-------+----+-----+--------+\n|PATRICK|F   | 1959|    3.00|\n|PATRICK|H   | 1955|20381.00|\n|PATRICK|H   | 1956|20673.80|\n|PATRICK|H   | 1957|20532.20|\n|PATRICK|H   | 1958|20173.80|\n|PATRICK|H   | 1959|19443.20|\n|PATRICK|H   | 1960|18479.60|\n\n\n\nLa mani√®re la plus simple de r√©pondre √† cette question 10 est d‚Äôutiliser une fen√™tre glissante. Les fen√™tres glissantes √©tendent les fen√™tres d√©finies par PARTITION BY ... ORDER BY ....\nLa syntaxe de l‚Äôinvocation des fonctions fen√™tres est d√©crite dans la documentation PostgreSQL.\nL‚Äôinvocation d‚Äôune fonction op√©rant sur une fen√™tre suit la forme :\nfunction_name ([expression [, expression ... ]])\n      [ FILTER ( WHERE filter_clause ) ]\n      OVER ( window_definition )\n\n-- OU\n\nfunction_name ( * )\n      [ FILTER ( WHERE filter_clause ) ]\n      OVER ( window_definition )\nNous n‚Äôavons pas eu besoin d‚Äôutiliser la clause FILTER (WHERE filter_clause)\nLa d√©finition de la fen√™tre window definition est de la forme\n[ PARTITION BY expression [, ...] ]\n[ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\n[ frame_clause ]\nRappel : une expression entre [] est optionnelle.\nLa derni√®re clause optionnelle frame_clause permet de calculer des fen√™tres glissantes et d‚Äôautres types de fen√™tres. Elle peut se d√©cliner en\n{ RANGE | ROWS | GROUPS } frame_start [ frame_exclusion ]\n{ RANGE | ROWS | GROUPS } BETWEEN frame_start AND frame_end [ frame_exclusion ]\no√π frame_start (d√©but du cadre/de la fen√™tre) peut prendre les formes suivantes :\nUNBOUNDED PRECEDING  -- ou\noffset PRECEDING  -- ou\nCURRENT ROW   --ou\noffset FOLLOWING  -- ou\nUNBOUNDED FOLLOWING  -- ou\nframe_end se d√©finit de la m√™me mani√®re.\nSi on veut calculer le nombre cumul√© d‚Äôattributions d‚Äôun pr√©nom depuis l‚Äôorigine des temps on pourra proc√©der ainsi:\nWITH R AS (\nSELECT prenom, sexe, annee, SUM(nombre)\n      OVER (PARTITION BY prenom, sexe\n            ORDER BY annee\n            RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\n      as cumule\nFROM babynames.bebes\n)\n\nSELECT * FROM R\nWHERE prenom IN ('PATRICK', 'MICHEL') ;  -- pour limiter la taille du r√©sultat\n\n\n\n\n\n\nsolution\n\n\n\nTODO"
  },
  {
    "objectID": "exams/cc3-2022-10-21.html",
    "href": "exams/cc3-2022-10-21.html",
    "title": "MA15Y030 - Automne 2024",
    "section": "",
    "text": "Sur le serveur, dans votre sch√©ma personnel (celui dont le nom est votre username), cr√©er les fonctions SQL et vues correspondant aux cinq questions suivantes."
  },
  {
    "objectID": "exams/cc3-2022-10-21.html#nombre-de-naissances",
    "href": "exams/cc3-2022-10-21.html#nombre-de-naissances",
    "title": "MA15Y030 - Automne 2024",
    "section": "Nombre de naissances",
    "text": "Nombre de naissances\nDonn√©es dans le sch√©ma babynames.\n\n\n\n\n\n\nQuestion\n\n\n\n√âcrire une fonction SQL nomm√©e cc_fonc_7 qui prend en argument une ann√©e yyyy et renvoie le rapport entre le nombre total de naissances f√©minines et le nombre total de naissances masculines cette ann√©e l√† selon la table babynames.bebes.\n\n\n\n\n\n\n\n\nR√©ponse attendue pour SELECT * FRON cc_fonc_7(1922);\n+---------+\n|cc_fonc_7|\n+---------+\n|     1.05|\nNB: pr√©cision demand√©e : 0.1\n\n\n\n\n\n\n\n\n\nsolution\n\n\n\nTODO"
  },
  {
    "objectID": "exams/cc3-2022-10-21.html#popularit√©-relative-et-rang-de-popularit√©",
    "href": "exams/cc3-2022-10-21.html#popularit√©-relative-et-rang-de-popularit√©",
    "title": "MA15Y030 - Automne 2024",
    "section": "Popularit√© relative et rang de popularit√©",
    "text": "Popularit√© relative et rang de popularit√©\nDonn√©es dans le sch√©ma babynames\n\n\n\n\n\n\nQuestion\n\n\n\n√âcrire une vue nomm√©e cc_vue_8 de schema\n(sexe text, prenom text, annee integer, rang integer, popularite numeric)\nqui donne pour chaque pr√©nom, ann√©e, sexe, la popularit√© relative (nombre sur nombre total de naissance de ce sexe cette ann√©e l√†) et le rang par popularit√© d√©croissante.\n\n\n\n\n\n\n\n\nR√©ponse attendue pour\nSELECT *\nFROM cc_vue_8\nWHERE prenom='TH√âO' AND\n      sexe = 'H' AND\n      annee &gt;1999 AND\n      annee &lt; 2005;\n+----+------+-----+----+----------+\n|sexe|prenom|annee|rang|popularite|\n+----+------+-----+----+----------+\n|H   |TH√âO  | 2000|   6|     0.019|\n|H   |TH√âO  | 2001|   6|     0.022|\n|H   |TH√âO  | 2002|   5|     0.022|\n|H   |TH√âO  | 2003|   5|     0.020|\n|H   |TH√âO  | 2004|   7|     0.016|\nNB: pr√©cision demand√©e pour la popularit√© 0.01\n\n\n\n\n\n\n\n\n\nsolution\n\n\n\nTODO"
  },
  {
    "objectID": "exams/cc3-2022-10-21.html#requ√™te-fen√™tre",
    "href": "exams/cc3-2022-10-21.html#requ√™te-fen√™tre",
    "title": "MA15Y030 - Automne 2024",
    "section": "Requ√™te fen√™tre",
    "text": "Requ√™te fen√™tre\nDonn√©es dans le sch√©ma world\n\n\n\n\n\n\nQuestion\n\n\n\n√âcrire une vue nomm√©e cc_vue_9 de sch√©ma:\n(region TEXT,\n min_gnp_cap NUMERIC, poorest_country_name TEXT,\n max_gnp_per_cap NUMERIC, richest_country_name TEXT)\no√π chaque ligne indique pour une r√©gion donn√©e, le minimum du PIB (gnp) par habitant, un des pays de la r√©gion o√π ce minimum est r√©alis√©, le maximum du PIB par habitant et un des pays o√π ce maximum est r√©alis√©.\n\n\n\n\n\n\n\n\nSELECT region, richest_country, poorest_country\nFROM cc_vue_9\nWHERE region='Eastern Asia' ;\n+------------+---------------+---------------+\n|region      |richest_country|poorest_country|\n+------------+---------------+---------------+\n|Eastern Asia|Japan          |North Korea    |\n\n\n\n\n\n\n\n\n\nsolution\n\n\n\nTODO"
  }
]