{
  "hash": "54805cc6bd8c47fe4cbd99d751cccc9f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"BD : `dplyr` une mise oeuvre de l'Algèbre Relationnelle\"\nsubtitle: \"Bases de Données Licences MIASHS et Mathématiques\"\nauthor: \"Équipe BD\"\ninstitute: \"Université de Paris\"\n\nexecute: \n  echo: true\n  eval: true\n---\n\n\n\n\n# `dplyr`\n\n\n## Table `babynames`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstopifnot(\n  require(dplyr),\n  require(tibble),\n  require(babynames),\n  require(gt)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,924,665\nColumns: 5\n$ year <dbl> 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", …\n$ name <chr> \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    <int> 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop <dbl> 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n```\n\n\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames[1:5,] |> \n  gt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vrvbsxqobs\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vrvbsxqobs table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vrvbsxqobs thead, #vrvbsxqobs tbody, #vrvbsxqobs tfoot, #vrvbsxqobs tr, #vrvbsxqobs td, #vrvbsxqobs th {\n  border-style: none;\n}\n\n#vrvbsxqobs p {\n  margin: 0;\n  padding: 0;\n}\n\n#vrvbsxqobs .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vrvbsxqobs .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vrvbsxqobs .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vrvbsxqobs .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vrvbsxqobs .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vrvbsxqobs .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vrvbsxqobs .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vrvbsxqobs .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vrvbsxqobs .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vrvbsxqobs .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vrvbsxqobs .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vrvbsxqobs .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vrvbsxqobs .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vrvbsxqobs .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vrvbsxqobs .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vrvbsxqobs .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vrvbsxqobs .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vrvbsxqobs .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vrvbsxqobs .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vrvbsxqobs .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vrvbsxqobs .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vrvbsxqobs .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vrvbsxqobs .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vrvbsxqobs .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vrvbsxqobs .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vrvbsxqobs .gt_left {\n  text-align: left;\n}\n\n#vrvbsxqobs .gt_center {\n  text-align: center;\n}\n\n#vrvbsxqobs .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vrvbsxqobs .gt_font_normal {\n  font-weight: normal;\n}\n\n#vrvbsxqobs .gt_font_bold {\n  font-weight: bold;\n}\n\n#vrvbsxqobs .gt_font_italic {\n  font-style: italic;\n}\n\n#vrvbsxqobs .gt_super {\n  font-size: 65%;\n}\n\n#vrvbsxqobs .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vrvbsxqobs .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vrvbsxqobs .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vrvbsxqobs .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vrvbsxqobs .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vrvbsxqobs .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vrvbsxqobs .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"year\">year</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sex\">sex</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"name\">name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n\">n</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"prop\">prop</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">1880</td>\n<td headers=\"sex\" class=\"gt_row gt_left\">F</td>\n<td headers=\"name\" class=\"gt_row gt_left\">Mary</td>\n<td headers=\"n\" class=\"gt_row gt_right\">7065</td>\n<td headers=\"prop\" class=\"gt_row gt_right\">0.07238359</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">1880</td>\n<td headers=\"sex\" class=\"gt_row gt_left\">F</td>\n<td headers=\"name\" class=\"gt_row gt_left\">Anna</td>\n<td headers=\"n\" class=\"gt_row gt_right\">2604</td>\n<td headers=\"prop\" class=\"gt_row gt_right\">0.02667896</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">1880</td>\n<td headers=\"sex\" class=\"gt_row gt_left\">F</td>\n<td headers=\"name\" class=\"gt_row gt_left\">Emma</td>\n<td headers=\"n\" class=\"gt_row gt_right\">2003</td>\n<td headers=\"prop\" class=\"gt_row gt_right\">0.02052149</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">1880</td>\n<td headers=\"sex\" class=\"gt_row gt_left\">F</td>\n<td headers=\"name\" class=\"gt_row gt_left\">Elizabeth</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1939</td>\n<td headers=\"prop\" class=\"gt_row gt_right\">0.01986579</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">1880</td>\n<td headers=\"sex\" class=\"gt_row gt_left\">F</td>\n<td headers=\"name\" class=\"gt_row gt_left\">Minnie</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1746</td>\n<td headers=\"prop\" class=\"gt_row gt_right\">0.01788843</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n# LMD : Opérateurs  {background-color=\"#1c191c\"}\n\n\n\n## Opérateurs de base\n\n\n::: {.callout-important}\n\n\n### Liste des opérateurs\n\nL'algèbre relationnelle est d'abord un *Langage de Manipulation de Données& (LMD)}.\n\n\n- Union: $\\Large{\\cup}$  \n\n- Intersection: $\\Large{\\cap}$ \n\n- Différence: $\\Large{\\backslash}$ \n\n- Projection:  $\\Large{\\Pi}$  \n\n- Sélection: $\\Large{\\sigma}$ \n\n- Produit cartésien:  $\\Large{\\times}$ \n\n- Renommage:  $\\Large{\\rho}$ \n\n\ns'appliquent à des relations pour produire d'autres relations (le résultat).\n\n:::\n\n\n## Union $\\cup$ et intersection  $\\cap$\n\n::: {.callout-important}\n\n### Définition\n\n- L'*union* et l'*intersection* sont des  opérations portant sur deux relations $R_1$ et $R_2$ de **même  schéma**\n\n- $T=R_1\\cup R_2$  est  constituée des tuples appartenant à $R_1$ *ou* à\n$R_2$.\n\n- $T=R_1\\cap R_2$  est  constituée des tuples appartenant à $R_1$ *et* à\n$R_2$.\n\n- Les Schémas de  $R_1\\cup R_2$, $R_1\\cap R_2$ sont les mêmes que ceux de $R_1$  et  $R_2$\n\n:::\n\n## Union et intersection\n\n## Exemple\n\n::::: {.columns}\n\n::: {.column}\n\n**Train 1**\n\n| **h-dep**   | **dest**            | **num**           |\n|:--------:|:-----------------|:----------------|\n|    13h15    | Lyon         |     213         |\n|    13h29    | Marseille    |    1024         |\n|    14h15    | Lyon         |    214          |\n\n\n**Train 2**\n\n| **h-dep**   | **dest**             | **num**            |\n|:--------:|:-----------------|:----------------|\n|    13h39   | Avignon       |     43          |\n|    14h15   | Lyon          |     214         |\n\n:::\n\n::: {.column}\n\n**Train 1 $\\cup$ Train 2**\n\n| **h-dep**   | **dest**     |    **num**      |\n|:-----------:|:-------------|:----------------|\n|    13h15    | Lyon         |     213         |\n|    13h29    | Marseille    |    1024         |\n|    14h15    | Lyon         |    214          |\n|    13h39    | Avignon      |     43          |\n\n\n**Train 1 $\\cap$ Train 2**\n\n| **h-dep**   | **dest**             | **num**            |\n|:--------:|:-----------------|----------------:|\n|    14h15    | Lyon         |    214          |\n\n:::\n\n:::::\n\n\n\n## Différence\n\n\n::: {.callout-important}\n\n### Définition\n\n\n- La **différence** de deux relations $R_1$ et $R_2$ (de même schéma) est une relation $T$\n\n- de même schéma que $R_1$ et $R_2$ \n\n- constituée des tuples appartenant à $R_1$ et n'appartenant pas à $R_2$.\n\n\n- On note $T = R_1 - R_2$.\n\n:::\n\n. . .\n\n::: {.callout-caution}\n\n### Opération non *commutative* !\n\nR_1 - R_2\\neq  R_2 - R_1$ (en général).\n\n\n:::\n\n\n\n## Différence : exemple\n\n\n::::: {.columns}\n\n\n::: {.column}\n\n:::\n\n::: {.column}\n\n\n:::\n\n:::::\n\n\n\n\n## Produit Cartésien\n\n\n\n::: {.callout-important}\n\n### Définition\n\n- Soient:\n  -  $R_1$ de schéma $R_1(A_1,A_2,...,A_k)$\n  -  $R_2$ de schéma $R_2(B_1,B_2,...,B_\\ell)$\n  -  avec $A_i\\neq B_j$, pour tout $i=1,...,k$, $j=1,..,\\ell$\n\n-  Dans le contexte \"classique\" : $R_1 \\times R_2= \\{(e_1,e_2): e_1\\in R_1, e_2\\in R_2\\}$\n\n- $R=R_1 \\times R_2$  de schéma $R(A_1,A_2,...,A_k,B_1,B_2,...,B_\\ell)$. Le schéma de $R$ est *l'union* des schémas de $R_1$ et $R_2$\n\n:::\n\n::: {.callout-caution}\n\n### Attention \n\nEn algèbre relationnelle, cette opération est commutative  ( $R_1\\times R_2 = R_2\\times R_1$ ) et associative\n \n:::\n\n## Produit cartésien :\n\n\n::: {.callout-important}\n\n###  Définition formelle\n\n$R=R_1\\times R_2$ est la relation de schéma $R(A_1,A_2,...,A_k,B_1,B_2,...,B_\\ell)$ vérifiant~:\n\n\n- Pour tout $t\\in R$, il existe $t_1\\in R_1$, $t_2\\in R_2$  ($\\forall t \\in R, \\exists t_1 \\in R_1, \\exists t_2 \\in R_2, \\ldots$) tels que :\n\n$$t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell$$\n\n- Réciproquement, pour tout $t_1\\in R_1$, $t_2\\in R_2$ , il existe $t\\in R$ tels que :\n\n$$t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad \\text{et} \\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell$$\n\n$$\\forall t_1 \\in R_1, \\forall t_2 \\in R_2, \\exists t \\in R, \\qquad  t.A_1=t_1.A_1, \\ldots, t.A_k=t_1.A_k,\\quad \\text{et} \\quad t.B_1=t_2.B_1, \\ldots, t.B_\\ell=t_2.B_\\ell$$\n:::\n\n\n\n## Produit cartésien avec `dplyr`: `dplyr::cross_join()`\n\n\n$R \\times S$ se traduit en \n\n```{.r}\ncross_join(R, S)\n```\n\n\n## Projection  ( $\\Large{\\pi}$ )\n\n\n::: {.callout-important}\n\n### Définition\n\n- La *projection* d'une relation $R$ de schéma $R(A_1,\\dots, A_k)$\n sur les attributs $A_{i_1}, \\dots, A_{i_p}$, $i_1,..., i_p\\in \\{1,...,k\\}$,  est la relation $S$\n  - de schéma $S(A_{i_1}, \\dots,A_{i_p})$\n  - dont les tuples sont obtenus par élimination des attributs\nnon mentionnés dans $A_{i_1}, \\dots, A_{i_p}$ (et par élimination\ndes doublons).\n  - On note $S = \\pi_{A_{i_1}, \\dots, A_{i_p}} (R)$.\n\n- Définition formelle :\n\n$$s\\in S\\quad  \\iff \\quad \\exists t\\in R, \\forall n\\in\\left\\{1,\\dots,p\\right\\}\\qquad s.A_{i_n}=t.A_{i_n}$$\n\n:::\n\n\nImplicitement, on a *élimination des doublons* car une projection peut produire plusieurs fois le même tuple.\n\n\n## Projection avec `dplyr::select()`\n\n$S = \\pi_{A_{i_1}, \\dots, A_{i_p}} (R)$ se traduit en \n\n```{.r}\nS <- dplyr::select(R, Ai1, Ai2, ..., Aip)\n```\n\n\n## Projection : Exemples\n\n\n\n## Projection vitaminée (`tidy selection`)\n\n\n\n## Sélection  ( $\\Large{\\sigma}$ ) \n\n\n::: {.callout-important}\n\n### Définition\n\n- La *sélection* d'une relation $R$\npar une condition $C$ est une relation $S$\n\n  - de même schéma que $R$ \n\n  - dont les tuples sont ceux de $R$ qui satisfont la condition $C$.\n\n- On note $S = \\sigma_C (R)$.\n\n- La condition $C$  \n\n  - s'exprime à l'aide des noms d'attributs de la relation ou de constantes (pour les opérandes)\n\n  - on peut utiliser des opérateurs arithmétiques de comparaison ( $=, \\neq, \\leq, \\geq, <, >$ ) ainsi que des connecteurs logiques ( $\\lnot, \\land, \\lor$ )..\n\n:::\n\n## Sélection avec `dplyr::filter`\n\n\n$S = \\sigma_C (R)$  se traduit en\n\n```{.r}\nS <- dplyr::filter(R, C)\n```\n\n\n## Sélection : Exemple\n\n\n\n## Renommage\n\n::: {.callout-important}\n\n### Définition\n\n- Soit  $R$ de schéma $R(A_1,\\dots, A_k)$, le *renommage* d'un attribut $A_i$, $i\\leq k$, en $B$ est une relation $S$ :\n  - de même contenu  (mêmes lignes)\n  - de schéma $S(A_1,...,A_{i-1},B,A_{i+1},..., A_k)$\n  - On le note $S=\\rho_{A_i\\mapsto B}(R)$\n\n:::\n\n\n## Renommage avec `dplyr::rename()`\n\n$S=\\rho_{A_i\\mapsto B}(R)$  se traduit en \n\n```{.r}\nS <- dplyr::rename(R, B=Ai)\n```\n\n## Exemple\n\n\t\n\n\n\n\n*Utilité* Va permettre d'étendre certains opérateurs pour des relations de schémas non-disjoints\n\n\n# Composer les opérations avec `\\>` (pipe)\n\n## Les opérateurs comme fonctions\n\n$\\pi_{Ai1, Aip}\\left(\\sigma_C(R)\\right)$\n\nse traduit en \n\n```{.r}\ndplyr::select(dplyr::filter(R, C), Ai1, ..., Aip)\n```\n\nqui s'avère difficile à lire, surtout si on compose plus d'opérations élémentaires \n\nLa composition de fonctions se conçoit facilement mais l'expression correspondante est difficile à lire \n\n## Réécriture de la composition avec `|>`\n\n```{.r}\nS <- dplyr::select(dplyr::filter(R, C), Ai1, ..., Aip)\n```\n\npeut être réécrite en\n\n```{.r}\nS <- R |> \n  dplyr::filter(C) |>\n  dplyr::select(Ai1,.., Aip)\n```\n\n\n\n# Opérations complémentaires : les jointures  {background-color=\"#1c191c\"}\n\n\n## Les jointures\n\nOn va définir des opérations pratiques pour la manipulation de données~: les *jointures*\n\n- Jointure\n\n- Jointure *naturelle*\n\n- $\\theta$-jointure et équi-jointure\n\n\n\n## Jointure\n\n\n::: {.callout-important}\n\n### Définition\n\nLa jointure $T=R_1\\bowtie_C R_2$ de deux relations $R_1$ et $R_2$ de schémas disjoints sous la condition $C$ est la relation $T$:\n\n- de schéma la *concaténation* des schémas de $R_1$ et $R_2$\n\n- formée des tuples du produit cartésien $R_1  \\times R_2$ qui satisfont la condition $C$\n\n\nRègles de formation de la *condition de jointure* : comme pour la sélection\n\n\n:::\n\n\n::: {.callout-important}\n\n### Définition formelle\n\n$$R_1 \\bowtie_C R_2 = \\sigma_C(R_1\\times R_2)$$\n\n:::\n\n\n## Exemple\n\n`TrDep`\n\n|  **hdep**   | **dest**   | **numdep** |\n|:----------------:|:--------------|--------:|\n|    13h15         | Lyon          |     213 |\n|    13h29         | Marseille     |    1024 |\n\n\n`TrArr`\n\n| **harr**      | **prov**     | **numarr**   |\n|:----------------:|:--------------|--------:|\n|    13h39         | Avignon        |     43       |\n|    15h15         | Paris          |     213       |\n\n\n\n$\\texttt{TrDep} \\bowtie_{\\text{numdep} > \\text{numar}} \\texttt{TrArr}$\n\n| **hdep**         | **dest**         | **numdep** | **harr**       | **prov**         | **numarr** |\n|:----------------:|:--------------|--------:|:----------------:|:--------------|--------:|\n|    13h15              | Lyon               |     213           |     13h39          | Avignon            |     43  |        |\n|    13h29              | Marseille          |    1024           |     13h39          | Avignon            |     43   |        |\n|    13h29              | Marseille          |    1024           |     15h15          | Paris              |     213   |       |\n\n\n## Équi-jointure, $\\theta$-jointure\n\n\n::: {.callout-important}\n\n### Équi-jointure  \n\nJointure avec égalité entre attributs de types comparables\n\n:::\n\n\n$$\\texttt{TrDep} \\bowtie_{\\text{numdep} = \\text{numarr}} \\texttt{TrArr}$$\n\n|**hdep**         | **dest**         | **numdep** | **harr**       | **prov**         | **numarr** |\n|:----------------:|:--------------|--------:|:----------------:|:--------------|--------:|\n|  13h15          | Lyon             |     213    |     15h15      | Paris            |     213    |\n\n\n. . .\n\n::: {.callout-important}\n\n### $\\theta$-*jointure*\n\nCondition de jointure entre attributs de types comparables et avec un opérateur différent de l'égalité, c'est-à-dire dans $\\left\\{<,>,\\leq,\\geq, \\neq\\right\\}$.\n\n$$\\text{TrDep} \\bowtie_{\\text{numdep} > \\text{numarr}} \\text{TrArr}$$\n\n:::\n \n\n\n\n\n\n## Jointure naturelle\n\n::: {.callout-important}\n\n### Définition\n\nC'est une équi-jointure concernant les attributs communs (même nom et même type) de deux relations   \n\nOn ne garde dans le résultat qu'une copie des attributs communs {{< fa  triangle-exclamation >}}\n\n:::\n\n\nOn considère\n\n- $R_1$ d'attributs $A_1,..,A_k,B_1,...,B_h$\n\n- $R_2$ d'attributs $A_1,..,A_k,B_{h+1},...,B_\\ell$\n\n- $A_1,..., A_k$ : attributs communs et $\\{B_1,...,B_h\\}\\cap \\{ B_{h+1},...,B_\\ell \\}=\\emptyset$\n\n- Soit $A'_1, ...., A'_k$ tels que $\\{A_1,..., A_k\\}\\cap \\{ A'_1, ...., A'_k \\}=\\emptyset$\n\n\n\n## Jointure naturelle  (formalisation)\n\nConsidérons $S$ d'attributs $A_1',..,A_k',B_{h+1},...,B_l$ définie par :\n\n$$S=\\rho_{A_1\\mapsto A_1'}(\\rho_{A_2\\mapsto A_2'}(\\cdots (\\rho_{A_k\\mapsto A_k'}(R_2)\\cdots ))$$\n\n\nLa *jointure naturelle* sur deux relations $R_1$ et $R_2$ est la relation\n\n- d'attributs $A_1,..,A_k,B_1,...,B_h, B_{h+1},...,B_\\ell$\n\n- définie par :\n\n$$\\pi_{A_1,..,A_k,B_1,...,B_h, B_{h+1},...,B_\\ell}(R_1\\bowtie_{C} S)$$\n\n\noù $C$ est $(A_1=A_1') \\wedge (A_2=A'_2) \\wedge \\ldots \\wedge (A_k=A_k')$\n\n{{< fa  hand-point-right >}} on réalise une équi-jointure sur tous les attributs communs et on ne garde qu'un seul \"exemplaire\" de ces attributs communs par projection.\n\nOn note cette opération : $R_1 \\bowtie R_2$.\n\n. . .\n\n\n\nPour éviter le renommage, on peut décider de préfixer les noms des attributs par ceux de la relation. La condition $C$ devient :\n\n$$(R_1.A_1=R_2.A_1) \\wedge \\ldots \\wedge (R_1.A_k=R_2.A_k)$$\n\n\n\n\n\n## Exemple de Jointure naturelle\n\n::::: {.columns}\n::: {.column}\n\n`TrDep`\n\n|  **hdep**   | **dest**   | **num** |\n|:----------------:|:--------------|--------:|\n|    13h15         | Lyon          |     213 |\n|    13h29         | Marseille     |    1024 |\n\n\n`TrArr`\n\n| **harr**      | **prov**     | **num**   |\n|:----------------:|:--------------|--------:|\n|    13h39         | Avignon        |     43       |\n|    15h15         | Paris          |     213       |\n\n:::\n::: {.column}\n\n\n$$\\text{TrDep} \\bowtie \\text{TrArr}$$ \n\n| **hdep**         | **dest**         | **num** | **harr**       | **prov**      |\n|:-----------------:|:----------------|--------:|:--------------:|--------------:|\n|    13h15          | Lyon            |     213 |     15h15      | Paris         |\n\n:::\n\n:::::\n\n\n## Exemples de requêtes\n\nBase constituée des trois tables suivantes:\n\n\n`fournisseurs(fno, nom, adresse, ville)`\n\n`produits(pno, design, prix, poids, couleur)`\n\n`commandes(cno, fno, pno, qte)`\n\n\n\n## Exemples de requêtes (suite) \n\n- déterminer les numéros des fournisseurs ayant comme nom \"Durand\"\n\n\n$$\\pi_{\\text{fno}} \\bigl( \\sigma_{\\text{nom}=\\text{'Durand'}} (\\text{fournisseurs})\\bigr)$$\n\n\n- déterminer les références, prix et quantités des produits commandés à plus de 10 exemplaires.\n\n\n$$\\pi_{\\text{pno,prix,qte}} \\bigl( \\sigma_{\\text{qte}>10} (\\text{commandes} \\bowtie \\text{produits})\\bigr)$$\n\n\n\n\n\n# Encore des opérations...  {background-color=\"#1c191c\"}\n\n\n\n\n## Jointure externe\n\n::: {.callout-note}\n\n### Perte d'information dans jointure naturelle\n\nLes tuples ne satisfaisant pas la condition (non appariés) disparaissent\n\n:::\n\n::: {.callout-important}\n\n### Définition\n\n<!-- TODO -->\n\nOn ajoute symboliquement\" une ligne dont les valeurs sont vides (ou avec valeur spéciale `NULL`) pour garder les tuples initiaux \"non satisfaisants\" après la jointure\n\nOn note cette opération entre deux relations $R$ et $S$  :\n\n$$R \\bowtie^+ S$$\n\n:::\n\n\n## Jointure externe (exemple)\n\n\n::::: {.columns}\n::: {.column}\n\n`TrDep`\n\n|  **hdep**   | **dest**   | **num** |\n|:----------------:|:--------------|--------:|\n|    13h15         | Lyon          |     213 |\n|    13h29         | Marseille     |    1024 |\n\n\n`TrArr`\n\n| **harr**      | **prov**     | **num**   |\n|:----------------:|:--------------|--------:|\n|    13h39         | Avignon        |     43       |\n|    15h15         | Paris          |     213       |\n\n:::\n::: {.column}\n\n$$\\text{TrDep} \\bowtie^+ \\text{TrArr}$$\n\n\n| **hdep**         | **dest**         | **num** | **harr**       | **prov**     |\n|:-----------------:|:------------------|------:|:----------------:|:----------------|\n|    13h15              | Lyon               |     213           |     15h15         | Paris       |\n|    13h29              | Marseille          |    1024           |     -          |  -              |\n|   -              | -           |    43          |     13h39          | Avignon                    |\n\n:::\n:::::\n\n## Division\n\n::: {.callout-important}\n\n### Définition\n\nLa *division* ou *quotient*\n\n- d'une relation $R$ de schéma\n$R(A_1,A_2,\\dots,A_k)$\n\n- par une relation $S$ de schéma\n$S(A_{p+1},\\dots ,A_k)$\n\nest la relation $T$ de schéma $T(A_1, \\dots, A_p)$ formée des tuples qui complétés par chaque tuple\nde $S$ donnent un tuple de $R$.\n\nAutrement dit\n\n$$\\begin{array}{l} t\\in T(A_1,\\dots,A_p)  \\quad \\Longleftrightarrow \\\\\n\\forall s\\in S(A_{p+1},\\dots ,A_k) \\quad \\exists r\\in R \\quad \\begin{cases}\nt.A_1=r.A_1, \\dots, t.A_p=r.A_p\\\\ s.A_{p+1}=r.A_{p+1},\\dots, s.A_{k}=r.A_{k} \\end{cases} \\end{array}$$\n\n\nOn note \n$$T = R \\div S$$\n\n\n\n:::\n\n\n## Division (exemple)\n\n\n::: {.columns}\n::: {.column}\n\n`Voyage` : contient  pour chaque numéro de\nclient la ville de départ et d'arrivée des voyages qu'il a\neffectué\n\n\n| **numclient**  | **vdep**   | **varr**|\n|---------------:|:-----------------|:----------------|\n|   1           | Paris              | Marseille    |\n|   3           | Marseille          | Lyon  |\n|   1            | Paris              | Nantes |\n|   5            | Marseille          | Avignon |\n|   4           | Paris              | Nantes   |\n|   3           | Paris              | Marseille |\n|   2           | Caen               | Le Mans   |\n|   3           | Paris              | Nantes |\n\n:::\n::: {.column}\n\n\n`Villes` contient des couples  villes de départ/villes d'arrivée\n\n\n| **vdep**   | **varr** |\n|:-------------|:---------------|\n|  Paris             | Marseille       |\n|  Paris             | Nantes          |\n\n:::\n\n:::\n\n\n\n\n## Division (exemple, suite)\n\n\n$$\\texttt{Voyage} \\div \\texttt{Villes}$$\n\n\n| **numclient** |\n|-------------:|\n|  1          |\n|  3             |\n\n*Résultat* :  numéros des clients ayant\neffectué tous les voyages entre les villes de la table `Villes` (i.e. à la fois un Paris-Marseille et un Paris-Nantes.)\n\n\n\n## Interdéfinissabilité des opérateurs\n\n\n- L'union, la différence, le produit cartésien, la sélection et la projection et le renommage sont *suffisants* pour définir tous les opérateurs que l'on a vu.\n\n- Mais avoir un panier  plus large d'opérateurs simplifie l'écriture des requêtes.\n\n\n\n\n\nQuelques définitions\n\n- Pour la *Jointure* : $R \\bowtie_C S \\equiv \\sigma_C (R \\times S)$\n\n\n- Pour l'*intersection* : $A \\cap B = A \\cup B - ((B - A) \\cup (A - B))$\n\n\n\n## Définition de la division\n\n::: {.callout-important}\n\n### Formalisation\n\nSoient  $R$ de schéma\n$R(A_1,A_2,\\dots,A_k)$, $S$ de schéma\n$S(A_{p+1},\\dots ,A_k)$\n\nest la relation $T= R \\div S$ de schéma $T(A_1, \\dots, A_p)$.\n\n\\begin{center}\n\\begin{tikzpicture}\n%\\Tree [.$\\pi_{pno,prix,qte}$ [.$\\sigma_{qte>10}$ [.$\\bowtie_{pno}$ [.commandes ] [.produit ] ] ] ]\n\\Tree [.$-$ [.$\\pi_{A_1,...,A_p}$ $R$ ] [.$\\pi_{A_1,...,A_p}$ [.$-$ [.$\\times$ [.$\\pi_{A_1,...,A_p}$ $R$ ] [.S ] ] [.R ] ] ] ]\n%[.$\\pi_{A_1,...,A_p}$ [.- [.\\times [.$\\pi_{A_1,...,A_p}$ $R$ ] [.S ] ] [.R ] ]\n\\end{tikzpicture}\n\\end{center}\n\n:::\n\n# The story    {background-color=\"#1c191c\"}\n\n\n##  From Wikipedia {smaller}\n\n> In the 1960s and 1970s he worked out his theories of data arrangement, issuing his paper \"A Relational Model of Data for Large Shared Data Banks\"[14] in 1970, after an internal IBM paper one year earlier.[15] To his disappointment, IBM proved slow to exploit his suggestions until commercial rivals started implementing them.[16]\n\n> Initially, IBM refused to implement the relational model to preserve revenue from IMS/DB.[citation needed] Codd then showed IBM customers the potential of the implementation of its model, and they in turn pressured IBM. Then IBM included in its Future Systems project a System R subproject – but put in charge of it developers who were not thoroughly familiar with Codd's ideas, and isolated the team from Codd.[citation needed] As a result, they did not use Codd's own Alpha language but created a non-relational one, SEQUEL. Even so, SEQUEL was so superior to pre-relational systems that it was copied, in 1979, based on pre-launch papers presented at conferences, by Larry Ellison, of Relational Software Inc, in his Oracle Database, which actually reached market before SQL/DS – because of the then-already proprietary status of the original name, SEQUEL had been renamed SQL.\n\n> Codd continued to develop and extend his relational model, sometimes in collaboration with Christopher J. Date. One of the normalised forms, the Boyce–Codd normal form, is named after him.\n\n> Codd's theorem, a result proven in his seminal work on the relational model, equates the expressive power of relational algebra and relational calculus.[14]\n\n\n\n\n# Fin  {background-color=\"#1c191c\"}\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}