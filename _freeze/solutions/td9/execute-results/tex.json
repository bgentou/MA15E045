{
  "hash": "152c800dda9b7b9553c296953fba491c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TD 9: Normalisation et dépendances\"\nsubtitle: \"Dépendances fonctionnelles\"\ncategories: [Normalisation, Dépendances fonctionnelles, BCNF, Fermeture, Poursuite, Décomposition, Perte Information]\ndate: \"2024-11-22\"\n\n\nformat:\n  pdf:\n    code-annotations: below\n    keep-tex: false\n    code-fold: false\n    toc: false\n    output-file: td9.pdf\n    include-in-header:\n      - text: \"\\\\lhead{{\\\\sf  Base de données \\\\\\\\ TD 9}}\"\n  html:\n    embed-resources: true\n    code-fold: true\n    output-file: td9.html\nparams:\n    year: 2024 \n    curriculum: \"L3 MIASHS/Ingémath\"\n    university: \"Université Paris Cité\"\n    homepage: \"https://s-v-b.github.io/MA15Y030/\"\n    moodle: \"https://moodle.u-paris.fr/course/view.php?id=2313\"\n\nengine: knitr\n---\n\n\n\n\n\n::: {.content-visible when-profile='solution'} \n\n::: {.callout-warning}\n\n### Avec solutions\n\n::: \n\n:::\n\n\n::: {layout=\"[80,20]\"}\n\n::: {#first-column}\n\n\n\n- **L3 MIASHS/Ingémath**\n- **[Université Paris Cité](https://www.u-paris.fr)**\n- Année 2024-2025\n- [Course Homepage](https://s-v-b.github.io/MA15Y030/)  \n- [Moodle](https://moodle.u-paris.fr/course/view.php?id=2313)\n\n::: \n\n::: {#second-column}\n![](../images/UniversiteParis_monogramme_couleur_RVB.png){align=\"right\" style=\"size:50px;\" width=75}\n:::\n\n:::\n\n\n\n\n\n\n### Définitions\n\nUne *dépendance fonctionnelle* est une expression de la forme\n$$A_1,A_2,\\ldots,A_k \\rightarrow A_{k+1},\\ldots,A_n$$\noù $A_1,A_2,\\ldots,A_k, A_{k+1},\\ldots,A_n$ sont des attributs (colonnes) d'une base de données. \n\nElle signifie que deux tuples ayant la même valeur sur $A_1,\\ldots,A_k$ doivent avoir la même valeur sur chaque colonnes $A_{k+1},\\ldots, A_n$ (en français : $A_1,\\ldots,A_k$ *déterminent* $A_{k+1},\\ldots,A_n$. On dit que les attributs $A_{k+1},\\ldots, A_n$ *dépendent fonctionnellement* de $A_1,A_2,\\ldots,A_k$.\n\nLa notion de dépendance est transitive : si $A \\rightarrow B$ et $B \\rightarrow C$ alors $A \\rightarrow C$. \n\nUn ensemble de dépendances fonctionnelles $\\mathcal{F}$ est *irréductible*  si aucune dépendance ne peut être déduite des autres en utilisant les règles suivantes :\n\n- trivialité : si $Y\\subseteq X$ alors $X\\rightarrow Y$\n- augmentation :  si $X\\rightarrow Y$ alors $X,Z\\rightarrow Y,Z$ pour toute suite  d'attributs $Z$. \n- transitivité :  si $X\\rightarrow Y$ et $Y\\rightarrow Z$ alors $X\\rightarrow Z$ \n- union : si $X\\rightarrow Y$ et $X\\rightarrow Z$ alors $X\\rightarrow Y,Z$\n- décomposition/séparation si $X\\rightarrow Y$ et $Z\\subseteq Y$ alors  $X\\rightarrow Z$ \n\nLa *clôture transitive* des attributs $A_1,\\ldots, A_k$ pour un ensemble de dépendances fonctionnelles $\\mathcal F$ est l'ensemble des attributs $B_1,\\ldots, B_{\\ell}$ qui dépendent fonctionnellement de $A_1,\\ldots, A_k$. \n\nOn la note \n$$[A_1,\\ldots, A_k]^+_{\\mathcal{F}}$$\nen oubliant $\\mathcal{F}$ si le contexte est clair. \n\nUn ensemble d'attributs $A_1,\\ldots, A_k$ est une *super-clé pour une relation $R(B_1,\\ldots, B_{\\ell})$* si ce sont des attributs de $R$ et si sa clôture transitive contient $B_1,\\ldots, B_{\\ell}$. C'est une clé si elle est minimale, c'est-à-dire, aucun sous-ensemble strict de cette super-clé n'est une clé.\n\nUn schéma est en : \n\n- $\\text{FN}_3$ si pour toute dépendance fonctionnelle non triviale, le membre de gauche contient une clef ou tout attribut du membre de droit appartient à une clef. \n- FNBC si pour toute dépendance fonctionnelle non triviale, le membre de gauche contient une clef.\n \nUn schéma et un ensemble de dépendances fonctionnelles peut se *décomposer* en une collection de schémas, dans le sens où chaque relation $R$ peut se décomposer en $R_1,\\ldots, R_k$ tels que $R_i = \\pi_i(R)$ pour une certaine projection $\\pi_i$.\n \nOn dit cette décomposition *sans perte d'information* si toute relation $R$ du schéma d'origine peut être retrouvée à partir des relations $R_1,\\ldots, R_k$ : $R = \\pi_1(R) \\bowtie \\ldots \\bowtie \\pi_k(R)$.\n \nOn dit que cette décomposition *respecte les dépendances fonctionnelles* si celles-ci sont toujours satisfaites par la nouvelle décomposition. \n \n\n\n\n### Exercice\n\nSoit une relation concernant des personnes en France avec les attributs suivants~:\n\n```\nNom, Numéro de sécurité sociale, Commune, Département, Code postal, Numéro de téléphone\n```\n\nQuelles sont les dépendances fonctionnelles censées être satisfaites ?\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n- `Numéro de sécurité sociale → Nom, Commune, Département, Code postal`\n- `Commune, Département → Code postal`  (presque : Paris est une commune et un département. Paris possède plusieurs codes postaux )\n- `Code postal → Département`\n\n:::\n\n:::\n\n### Exercice\n\nSoit un schéma d'attributs $A_1, A_2,\\dots A_n$ et un ensemble de dépendances fonctionnelles.\nCalculer le nombre de super-clefs (en fonction de $n$) dans les cas suivants~:\n\n\n- La seule clef est $\\{A_1\\}$.\n- Les seules clefs sont $\\{A_1\\}$ et $\\{A_2\\}$.\n- Les seules clefs sont $\\{A_1,A_2\\}$ et $\\{A_3,A_4\\}$.\n- Les seules clefs sont $\\{A_1,A_2\\}$ et $\\{A_1,A_3\\}$.\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n\n\n- $2^{n-1}$\n- $3 \\times 2^{n-2}$\n- $2^{n-4}\\times 3\\times 2 + 2^{n-4}$\n- $3\\times 2^{n-3}$\n\n\n\n:::\n\n:::\n\n\n\n### Exercice\n\nSoit le schéma $\\mathcal{A}=\\{A,B,C,D\\}$ et l'ensemble de dépendances fonctionnelles\n$$\\Sigma = \\{ A ⟶ B, B ⟶ C\\} $$\n\n\n\n- Quelle est la fermeture $\\{A\\}^+$ de $\\{A\\}$ ?\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\nInitialisation :  $X  =\\{A\\}$\n\nEtape 1 : Il existe une DF dont la partie gauche est incluse dans $ X$ : $A \\longrightarrow B$.  On rajoute les attributs en partie droite.\nD'où $X  = \\{A, B\\}$\n\nEtape 2: Il existe une DF dont la partie gauche est incluse dans  $ X$ : $B \\longrightarrow C$.  On rajoute les attributs en partie droite.\nD'où $X  = {A,B,C}$.\n\nC'est fini, plus de DF à utiliser. Conclusion $\\{A\\}^+={A,B,C}$\n\n:::\n\n:::\n\n-  Quelles sont les super-clés ? Les clés ?\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\nUne clef doit contenir $\\{A,D\\}$ puisque ces deux attributs ne sont à droite d'aucune DF de $\\Sigma$.\n\nDe plus $\\{A,D\\}^+=\\{A,B,C,D\\}$.\n\nLa seule clef est donc $\\{A,D\\}$.\n\n:::\n\n:::\n\n\n\n### Exercice\n\nSoit le schéma $\\mathcal{A}=\\{A,B,C,D,E,F\\}$ et l'ensemble de dépendances fonctionnelles\n$$\\Sigma = \\Bigl\\{ \\{A,B\\}\\to C, \\{B,C\\}\\to \\{A,D\\}, D\\to E, \\{C,F\\}\\to B \\Bigr\\}$$\n\n\n- Calculer la fermeture $\\{A,B\\}^+$ de $\\{A,B\\}$.\n- Est-ce que $\\Sigma$ implique la dépendance fonctionnelle $\\{A,B\\}\\to D$~?\n- Est-ce que $\\Sigma$ implique la dépendance fonctionnelle $D\\to A$~?\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n\n\n- On obtient $\\{A,B\\}^+=\\{A,B,C,D,E\\}$.\n- Oui car $D\\in\\{A,B\\}^+$\n- Non car $\\{D\\}^+=\\{D,E\\}$ ne contient pas $A$.\n\n\n\n:::\n\n:::\n\n\n\n### Exercice\n\nMontrer que les assertions suivantes sont fausses :\n\n\n- $A\\to B$ implique $B\\to A$.\n- Si $\\{A,B\\}\\to C$ et $A\\to C$ alors $B\\to C$.\n- Si $\\{A,B\\}\\to C$ alors $A\\to C$ ou $B\\to C$.\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n\n\n- La relation\n\n|   A  |   B   |\n|:----:|:-----:|\n| 1    | 2     | \n| 4    | 2     |\n\nsatisfait $A\\to B$ mais pas $B\\to A$.\n\n- La relation\n\n| A | B | C  | \n|:----:|:-----:|:-----:|\n| 1 | 2 | 3  | \n| 4 | 2 | 4  | \n\nsatisfait $\\{A,B\\}\\to C$ et $A\\to C$ mais pas $B\\to C$.\n\n- La relation\n\n| A | B | C |\n|:-:|:-:|:-:|:-:|\n| 1 | 2 | 3 |\n| 4 | 2 | 4 |\n| 1 | 3 | 1 |\n\nsatisfait $\\{A,B\\}\\to C$ mais ni $A\\to C$ ni $B\\to C$.\n\n\n:::\n\n:::\n\n\n\n\n### Exercice : déductions  de DF\n\nSoit le schéma $\\mathcal{A}=\\{A, B,C, D, E, F, G, H\\}$ et soit\n\n$$\\Sigma = \\{AB \\longrightarrow C; \\ B \\longrightarrow D;  \\ CD \\longrightarrow E;  \\ CE \\longrightarrow GH; \\  G \\longrightarrow A\\}$$\n\nEst-ce que les dépendances\n\n-  $A,B \\longrightarrow E$\n\n- $B,G \\longrightarrow C$\n\n- $A,B \\longrightarrow G$\n\nsont déductibles de $\\Sigma$ ?\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\noui... Méthode à suivre : pour la première et la troisième, on calcule la fermeture de $\\{A,B\\}$. On a\n$\\{A,B\\}^+=\\{A,B,C,D,E,G,H\\}$.\n\nPour la seconde, on a $\\{B,G\\}^+=\\{A,B,C,D,E,G,H\\}$.\n\n:::\n\n:::\n\n$\\Sigma$ est elle irréductible/minimale ? \n\n\n::: {.callout-tip title=\"Rappel\"}\n\nPour que $\\Sigma$ soit minimale, il y a 3 conditions à remplir : \n\n- $\\Sigma$ est sous forme canonique, un seul attribut à droite. \n- Aucune DF redondante , i.e. aucune DF ne peut être déduite des autres.\n- Aucune DF redondante à gauch, .i.e. les déterminants sont minimaux\n\n:::\n\n\n::: {.content-visible when-profile=\"solution\"} \n\n::: {.callout-tip title=\"Solution\"}\n\n$\\Sigma$ n'est pas minimale/irréductible : $C,E \\longrightarrow H$ est redondante à gauche. \n\nOn la remplace par $C \\longrightarrow H$. \n\nDe même $A \\longrightarrow H$ est redondante. \n\nUne version minimale est :  \n$$\\mathcal{F} = \\{A \\longrightarrow B ; C \\longrightarrow H ; C \\longrightarrow E ; A \\longrightarrow C\\}$$\n\n\n:::\n\n:::\n\n### Exercice : équivalence  d'ensembles de DFs \n\n\n-  Soit\n$$\\Sigma_1 = \\{A ⟶ B ; C,E \\longrightarrow H ; C \\longrightarrow E ; A \\longrightarrow C,H\\}$$\net $$\\Sigma_2 = \\{A \\longrightarrow B,C ;  C \\longrightarrow E,H\\}$$\nLes deux ensembles de dépendances fonctionnelles $\\Sigma_1$ et $\\Sigma_2$ sont-ils *équivalents* ?\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\nMontrons que $\\Sigma_1$ implique $\\Sigma_2$  ($\\Sigma_1 \\models \\Sigma_2$).\n\n$A\\to B$ et $C\\to E$ sont dans $\\Sigma_1$. $A\\to C$ est impliqué par $A\\to CH \\in \\Sigma_1$.\n\nDonc $A\\to BC$ se déduit de $\\Sigma_1$. De plus $\\Sigma_1$ implique $C\\to H$ (puisque $\\Sigma_1$ contient $C\\to E$ et $CE\\to H$). \n\nDonc $\\Sigma_1$ implique $C\\to EH$. On a montré que toutes les DF de $\\Sigma_2$ sont impliquées par $\\Sigma_1$.\n\nMontrons que $\\Sigma_2$ implique $\\Sigma_1$.\n\n- $\\Sigma_2$ contient $A\\to B$.\n- $\\Sigma_2$ contient $C\\to EH$ qui implique $C\\to H$ qui implique $CE\\to H$.\n- $\\Sigma_2$ contient $C\\to EH$ qui implique $C\\to E$.\n- $\\Sigma_2$ implique $A\\to CH$ ...\n\n:::\n\n:::\n\n\n\n\n\n### Exercice : Décomposition et perte d'information\n\n\n\n\n- On considère le schéma de relation $\\mathcal{A}={A,B,C}$ et la dépendance fonctionnelle suivante:\n\n$$\\Sigma=\\{  A,B \\longrightarrow C   \\}.$$\n\nDéterminer si la décomposition suivante est sans perte d'information\n\n$$\\mathcal{A}_1=\\{A,B\\} , \\quad \\mathcal{A}_2=\\{B,C\\}$$\n\nen étudiant le cas de la table suivante :\n\n\n\n\n\n| A | B | C |\n|:--:|:--:|:--:|\n| 1 | 2 | 3 |\n| 4 | 2 | 5 |\n\n: {.responsive-sm}\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\nCette relation satisfait $AB\\to C$.\nDe plus, la jointure naturelle des deux projections contient les deux nouveaux tuples (1,2,5)  et (4,2,3).\nDonc il y a perte d'information.\n\n\n:::\n\n:::\n\n### Exercice : poursuite\n\n- On considère le schéma de relation $\\mathcal{A}=\\{A,B,C,D,E\\}$ et les dépendances fonctionnelles suivantes:\n\n$$\\Sigma=\\{  A \\longrightarrow C ; B \\longrightarrow C ; C \\longrightarrow D ; D,E \\longrightarrow C ; C,E \\longrightarrow A    \\}.$$\n\nAppliquer l'algorithme de poursuite pour\ndéterminer si la décomposition suivante est sans perte d'information :\n\n$$ \\mathcal{A}_1=\\{A,D\\} , \\mathcal{A}_2=\\{A,B\\}\t, \\mathcal{A}_3=\\{B,E\\} , \\mathcal{A}_4=\\{C,D,E\\}, \\mathcal{A}_5=\\{A,E\\} $$\n\nMême question pour la décomposition:\n$$ \\mathcal{A}_1=\\{A,D\\}, \\mathcal{A}_2=\\{A,B\\}, \\mathcal{A}_3=\\{B,E\\}, \\mathcal{A}_4=\\{C,D\\}, \\mathcal{A}_5=\\{D,E\\}, \\mathcal{A}_6=\\{A,E\\} $$\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\nLa première décomposition est SPI.\nOn doit montrer que :\n\n$R=\\pi_{A,D}(R)\\bowtie \\pi_{A,B}(R)\\bowtie \\pi_{B,E}(R)\\bowtie \\pi_{C,D,E}(R) \\bowtie \\pi_{A,E}(R)$.\n\nOn voit que :\n$$R \\subseteq\\pi_{A,D}(R)\\bowtie \\pi_{A,B}(R)\\bowtie \\pi_{B,E}(R)\\bowtie \\pi_{C,D,E}(R) \\bowtie \\pi_{A,E}(R)$$\n et il faut montrer l'autre inclusion.\n\nOn considère un tuple $t=(a,b,c,d,e)$ de la jointure naturelle.\n\nPour $1\\le i\\le 5$, comme $\\pi_{\\mathcal{A}_i}(t) \\in \\pi_{\\mathcal{A}_i}(R)$ il existe un tuple $t_i\\in R$\ntel que $\\pi_{\\mathcal{A}_i}(t)=\\pi_{\\mathcal{A}_i}(t_i)$, ce que l'on représente par le tableau\n\n\n A  | B  | C  | D  | E |\n|:--:|:--:|:--:|:--:|:--:|\n| a  | $b_1$  |  $c_1$ | d  | $e_1$ |\n| a  | b  | $c_2$  | $d_2$  | $e_2$ |\n|  $a_3$ | b  | $c_3$  | $d_3$  | e |\n|  $a_4$  | $b_4$ |  c  | d  | e |\n|  a  | $b_5$  | $c_5$  | $d_5$  | e |\n\n\nPar la dépendance  $A \\longrightarrow C$, on sait que deux tuples ayant la même valeur sur $A$, ont la même sur $C$. On remplace dans la table les valeurs indicées par la valeur $c$ quand c'est possible, ou on unifie simplement les valeurs indicées sinon (ici on prendra $c_1$).\n\n\n\n| A | B | C | D | E |\n|:--:|:--:|:--:|:--:|:--:|\n| a  | $b_1$ |   $c_1$ |  d  |  $e_1$  |\n| a  | b |  $c_1$  |  $d_2$  |  $e_2$  |\n|  $a_3$ | b |  $c_3$  |  $d_3$  |  e  |\n|  $a_4$  | $b_4$ |  c  |  d  |  e  |\n|  a  | $b_5$ |  $c_1$  |  $d_5$  |  e  |\n\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\nOn traite maintenant $B \\longrightarrow C$.\n\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a | $b_1$ |  $c_1$| d | $e_1$ |\n| a | b | $c_1$ | $d_2$ | $e_2$ |\n|  $a_3$| b | $c_1$ | $d_3$ | e |\n|  $a_4$ | $b_4$ | c | d | e |\n|  a | $b_5$ | $c_1$ | $d_5$ | e |\n\n\nPour la dépendance $C \\longrightarrow D$, on obtient :\n\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a | $b_1$ |  $c_1$| d | $e_1$ |\n| a | b | $c_1$ | d | $e_2$ |\n|  $a_3$| b | $c_1$ | d | e |\n|  $a_4$ | $b_4$ | c | d | e |\n|  a | $b_5$ | $c_1$ | d | e |\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\nPour $D,E \\longrightarrow C$, on a cette fois (notez qu'on remplace tous les $c_1$ du coup comme l'un d'entre eux devait l'être) :\n\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  c | d | $e_1$ |\n| a |  b | c  | d | $e_2$ |\n|  $a_3$|  b | c  | d | e |\n|  $a_4$ |  $b_4$ | c  | d | e |\n|  a |  $b_5$ | c  | d | e |\n\n\n\nEnfin, on termine avec $C,E \\longrightarrow A$ :\n\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  c | d | $e_1$ |\n| a |  b | c  | d | $e_2$ |\n|  a|  b | c  | d | e |\n|  a |  $b_4$ | c  | d | e |\n|  a |  $b_5$ | c  | d | e |\n\n\nOn voit que le tuple $(a,b,c,d,e)$ apparait.\n\n\nEn d'autres termes :\n\n$R \\supset\\pi_{A,D}(R)\\bowtie \\pi_{A,B}(R)\\bowtie \\pi_{B,E}(R)\\bowtie \\pi_{C,D,E}(R) \\bowtie \\pi_{A,E}(R)$.\nLa décomposition est donc SPI.\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\n\nLa seconde décomposition n'est pas SPI: l'algorithme de poursuite échoue.\n\nLe tableau de départ s'écrit :\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  $c_1$| d | $e_1$ |\n| a |  b | $c_2$ | $d_2$ | $e_2$ |\n|  $a_3$|  b | $c_3$ | $d_3$ | e |\n|  $a_4$ |  $b_4$ | c | d | $e_4$ |\n|  $a_5$ |  $b_5$ | $c_5$ | d | e |\n|  a |  $b_6$ | $c_6$ | $d_6$ | e |\n\n\n\n- $A\\to C$ donc $c_1=c_2=c_6$\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  $c_1$| d | $e_1$ |\n| a |  b | $c_1$ | $d_2$ | $e_2$ |\n|  $a_3$|  b | $c_3$ | $d_3$ | e |\n|  $a_4$ |  $b_4$ | c | d | $e_4$ |\n|  $a_5$ |  $b_5$ | $c_5$ | d | e |\n|  a |  $b_6$ | $c_1$ | $d_6$ | e |\n\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\n$B\\to C$ donc $c_3=c_1$\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  $c_1$| d | $e_1$ |\n| a |  b | $c_1$ | $d_2$ | $e_2$ |\n|  $a_3$|  b | $c_1$ | $d_3$ | e |\n|  $a_4$ |  $b_4$ | c | d | $e_4$ |\n|  $a_5$ |  $b_5$ | $c_5$ | d | e |\n|  a |  $b_6$ | $c_1$ | $d_6$ | e |\n\n$C\\to D$ donc $d_1=d_3=d_6=d$\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  $c_1$| d | $e_1$ |\n| a |  b | $c_1$ | d | $e_2$ |\n|  $a_3$|  b | $c_1$ | d | e |\n|  $a_4$ |  $b_4$ | c | d | $e_4$ |\n|  $a_5$ |  $b_5$ | $c_5$ | d | e |\n|  a |  $b_6$ | $c_1$ | d | e |\n\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\n$DE\\to C$ donc $c_5=c1$\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  $c_1$| d | $e_1$ |\n| a |  b | $c_1$ | d | $e_2$ |\n|  $a_3$|  b | $c_1$ | d | e |\n|  $a_4$ |  $b_4$ | c | d | $e_4$ |\n|  $a_5$ |  $b_5$ | $c_1$ | d | e |\n|  a |  $b_6$ | $c_1$ | d | e |\n\n$CE\\to A$ donc $a_3=a_5=a$\n\n| A |  B | C | D | E  |\n|:--:|:--:|:--:|:--:|:--:|\n| a |  $b_1$ |  $c_1$| d | $e_1$ |\n| a |  b | $c_1$ | d | $e_2$ |\n|  a|  b | $c_1$ | d | e |\n|  $a_4$ |  $b_4$ | c | d | $e_4$ |\n|  a |  $b_5$ | $c_1$ | d | e |\n|  a |  $b_6$ | $c_1$ | d | e |\n\n\nToutes les DF de $\\Sigma$ sont satisfaites et aucune ligne n'est égale à $(a,b,c,d,e)$.\n\nDonc la décomposition n'est pas SPI.\n\nSi on suppose que pour tout $1\\le i\\le 6$, $a_i\\not=a$, $b_i\\not=b$, $c_i\\not=c$, $d_i\\not=d$, $e_i\\not=e$, ce dernier tableau fournit un exemple de relation strictement plus petite que la jointure naturelle des projections.\n\nEn effet $\\Sigma$ est satisfait et $(a,b,c,d,e)$ est clairement dans la jointure naturelles des projections.\nOr $(a,b,c,d,e)$ n'est pas dans la relation.\n\n\n\n\n\n:::\n\n:::\n\n\n\n### Exercice\n\nSoit $\\mathcal{A}=\\{A,B,C,D,E\\}$ un schéma et soit la décomposition $\\{\\mathcal{A}_1,\\mathcal{A}_2,\\mathcal{A}_3\\}$ où\n$$\\mathcal{A}_1={A,B,C}\\quad \\mathcal{A}_2={B,C,D}\\quad \\mathcal{A}_3={A,C,E}$$\nPour chaque ensemble $\\Sigma$ de dépendances fonctionnelles ci-dessous, appliquer l'algorithme de poursuite pour déterminer si la décomposition est sans perte d'information.\nDans le cas où il y a perte d'information, donner une relation $R$ de schéma $\\mathcal{A}$ satisfaisant $\\Sigma$ et telle que\n$$ \\pi_{\\mathcal{A}_1}(R)\\bowtie\\pi_{\\mathcal{A}_2}(R)\\bowtie\\pi_{\\mathcal{A}_3}(R)\\not\\subset R$$\n\n\n- $\\Sigma=\\{B\\rightarrow E, CE\\rightarrow A\\}$\n- $\\Sigma=\\{AC\\rightarrow E, BC\\to D\\}$\n- $\\Sigma=\\{A\\rightarrow D, D\\to E, B\\to D\\}$\n- $\\Sigma=\\{A\\rightarrow D, CD\\to E, E\\to D\\}$\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n-\n\n|  | A | B | C  | D | E   |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_3$ | e |\n\n$B\\to E$ donc $e_1=e_2$. Ensuite $CE\\to A$ donc $a_2=a$. On obtient\n\n\n|  | A | B | C  | D | E   |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | a | b | c  | d | $e_1$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_3$ | e |\n\nToutes les DF de $\\Sigma$ sont satisfaites. Donc il y a perte d'information.\nCe dernier tableau est une relation $R$ qui satisfait $\\Sigma$ et telle que\n\n$$\\pi_{\\mathcal{A}_1}(R)\\bowtie\\pi_{\\mathcal{A}_2}(R)\\bowtie\\pi_{\\mathcal{A}_3}(R)\\not\\subset R$$\n\npuisque $(a,b,c,d,e)\\notin R$.\n\n\n\n\n\n:::\n\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\n\n|  | A | B | C  | D | E   |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_3$ | e |\n\n\n$AC\\to E$ donc $e_1=e$. Ensuite $BC\\to D$ donc $d_1=d$. On obtient\n\n\n|  | A | B | C  | D | E   |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | d | e |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_3$ | e |\n \nLe premier tuple est $(a,b,c,d,e)$. Donc la décomposition est SPI.\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\n-\n\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_3$ | e |\n\n$A\\to D$ donc $d_3=d_1$.\n\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_1$ | e |\n\n$D\\to E$ donc $e_1=e$\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | e |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_1$ | e |\n\n$B\\to D$ donc $d_1=d$\n\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | d | e |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_1$ | e |\n\nLa décomposition est donc SPI.\n\n:::\n\n::: {.callout-tip title=\"Solution (suite)\"}\n\n-\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_3$ | e |\n\n$A\\to D$ donc $d_3=d_1$.\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | $e_1$ |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_1$ | e |\n\n$CD\\to E$ donc $e_1=e$.\n\n|  | A | B | C  | D | E |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| {A,B,C}  | a | b |  c | $d_1$ | e |\n|  {B,C,D} | $a_2$ | b | c  | d | $e_2$ |\n|  {A,C,E} | a | $b_3$ | c  | $d_1$ | e |\n\n$E\\to D$ est satisfaite ainsi que les deux premières DF.\nDonc la décomposition n'est pas SPI.\n\n\n\n\n\n:::\n\n:::\n\n\n### Exercice : Normalisation\n\nOn considère le schéma de relation `R(C,T,H,S,E,N)` :\n```\nR(Cours, Enseignant, Horaire, Salle, Étudiant, Note)\n``` \net les dépendances fonctionnelles suivantes:\n\n$$\\mathcal{F}=\\{  \\texttt{C} \\to \\texttt{T}; \\quad \\texttt{H,S} \\to \\texttt{C}; \\quad \\texttt{H,T} \\to \\texttt{S}; \\quad \\texttt{C,E} \\to \\texttt{N}; \\quad \\texttt{H,E} \\to S \\}. $$\n\n- Calculer une clé.\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n`H,E` n'étant jamais à droite, ils font obligatoirement partis d'une clé. Or `HE+ = ALL`\n\n:::\n\n:::\n\n\n- Mettre en Boyce-Codd Normal Form (BCNF), donner plusieurs résultats possibles.\n\n::: {.content-visible when-profile=\"solution\"}\n\n::: {.callout-tip title=\"Solution\"}\n\n\n1er version: \n\n`C -> T` donne `T1(CT)` et `T2(CHSEN)`.\n\n`CE -> N` donne `T1(CT),T2(C,E,N) T3(CHSE)`\n\n`HE -> S` donne `(HES ; HEC)`\n\n2eme version:\n\n`CE -> N` donne `T1(CENT), T2(CEHS) ...`\n\n\n:::\n\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}