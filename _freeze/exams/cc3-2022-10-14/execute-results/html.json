{
  "hash": "a52e1b09b59c53fc3f45575c37a3063c",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  pdf:\n    code-annotations: below\n    keep-tex: false\n    code-fold: false\n    toc: false\n    output-file: cc3-2022-10-14.pdf\n    include-in-header:\n      - text: \"\\\\lhead{{\\\\sf  Base de données (BD5) \\\\\\\\ CC 2022-23: 3}}\"\n  html:\n    standalone: true\n    code-fold: true\n    output-file: cc3-2022-10-14.html\nparams:\n    year: 2023 \n    curriculum: \"L3 MIASHS/Ingémath\"\n    university: \"Université Paris Cité\"\n    homepage: \"https://stephane-v-boucheron.fr/courses/bdd\"\n    moodle: \"https://moodle.u-paris.fr/course/view.php?id=2313\"\n---\n\n\n\n\n\n\n\n::: {layout=\"[80,20]\"}\n\n::: {#first-column}\n\n\n\n- **L3 MIASHS/Ingémath**\n- **[Université Paris Cité](https://www.u-paris.fr)**\n- Année 2023-2024\n- [Course Homepage](https://stephane-v-boucheron.fr/courses/bdd)  \n- [Moodle](https://moodle.u-paris.fr/course/view.php?id=2313)\n\n::: \n\n::: {#second-column}\n![](/images/UniversiteParis_monogramme_couleur_RVB.png){align=\"right\" style=\"size:50px;\" width=75}\n:::\n\n:::\n\n\nSur le serveur, dans votre schéma personnel, créer les fonctions `SQL` et vues correspondant aux cinq questions suivantes.\n\n---\n\n## Les pays où l'on cause le ....\n\n\nÉcrire une fonction `SQL` nommée `cc_fonc_1` qui prend en argument\nune chaine de caractères censée désigner une langue et renvoie une\ntable `(name_country TEXT, pop_speakers int4)` qui contient les\n5 pays comportant le plus de locuteurs de la langue en question et \npour chaque pays le nombre estimé de locuteurs de la langue en question\n\n\n::: {.callout-tip   collapse=\"true\"}\n\nRéponse attendue pour `%French%` :\n\n\n|name_country |pop_speakers|\n|:-------------|------------:|\n|France       |    55435254|\n|Canada       |     7288398|\n|Belgium      |     3337914|\n|Tunisia      |     2521118|\n|United States|     1948499|\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n::: {.callout-tip title=\"solution\"}\n\nTODO \n\n:::\n:::\n\n---\n\n## Pays peu concentrés sur les grandes villes\n\n\nCréer une vue `cc_vue_2` des  pays dont la population n'est pas nulle et où les cinq plus grandes villes  ne rassemblent pas plus du  **dixième** de la population. La vue aura pour schéma `(countrycode, name_country, portion)`\n\n::: {.callout-tip}\n\nRéponse attendue pour\n\n```{.sql}\nSELECT * \nFROM username.cc_vue_2 cv \nWHERE cv.countrycode  IN (\n SELECT c.countrycode \n FROM world.country c \n WHERE region='Eastern Africa'\n) ;\n```\n\n\n|countrycode  |name_country | portion    |\n|:-----------:|:------------|-----------:|\n|MDG          |Madagascar  | 0.07045295|\n|MWI          |Malawi      | 0.08367222|\n|BDI          |Burundi     | 0.04480956|\n|COM          |Comoros     |0.062283736|\n|TZA          |Tanzania    |0.071704924|\n|MYT          |Mayotte     | 0.08053691|\n|UGA          |Uganda      |0.040903665|\n|RWA          |Rwanda      |0.036984354|\n|ETH          |Ethiopia    |0.047906272|\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n::: {.callout-tip title=\"solution\"}\n\nTODO \n\n:::\n:::\n\n---\n\n\n##  La cinquième ville la plus peuplée dans chaque pays\n\nÉcrire une fonction de `cc_fonc_3` langage  `SQL` qui prend en argument\nune chaine de caractères censée désigner un pays par son nom et   renvoie le nom de la cinquième ville la plus peuplée du pays (type de `name_city`),  et la part de la population du pays qui réside dans cette ville (type `float4`).\n\n::: {.callout-tip}\n\nRéponse attendue pour \n\n```{.sql}\nSELECT name_city, prop \nFROM username.cc_fonc_3('Italy') ;\n```\n\n\n|name_city|prop       |\n|:---------|-----------:|\n|Palermo  |0.011854959|\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n::: {.callout-tip title=\"solution\"}\n\nTODO \n\n:::\n:::\n\n---\n\n## La population des deux villes les plus peuplées de chaque pays\n\nCréer une vue `cc_vue_4` qui liste par pays, le nombre d'habitants des deux villes les plus peuplées.  La vue aura pour schéma `(name_contry text, pop_two_cities int4)`.\n\n::: {.callout-tip}\n\nRéponse attendue pour \n\n```{.sql}\nSELECT * \nFROM username.cc_vue_4 \nWHERE name_country = 'France' ;\n```\n\n\n|name_country|pop_two_cities|\n|:------------|-------------:|\n|France      |       2923676|\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n::: {.callout-tip title=\"solution\"}\n\nTODO \n\n:::\n:::\n\n---\n\n## Pays où deux langues sont parlées par au moins un dixième de la population\n\nCréer une vue `cc_vue_5` des pays où au moins deux langues sont (chacunes) parlées par au moins un dixieme  de la population.  La vue aura même schema que `world.country`.\n\n\n::: {.callout-tip}\n\n```{.sql}\nSELECT countrycode, name_country  \nFROM username.cc_vue_5 \nWHERE region='Eastern Europe' ;\n```\n\n\n|countrycode|name_country  |\n|:----------:|:--------------|\n|CZE        |Czech Republic|\n|BLR        |Belarus       |\n|MDA        |Moldova       |\n|UKR        |Ukraine       |\n|SVK        |Slovakia      |\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n::: {.callout-tip title=\"solution\"}\n\nTODO \n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}